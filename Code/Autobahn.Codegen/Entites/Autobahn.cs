//using System;
//using System.Collections.Generic;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Metadata;

//namespace ScafoldADatabase.Entities
//{
//    public partial class Autobahn : DbContext
//    {
//        public Autobahn()
//        {
//        }

//        public Autobahn(DbContextOptions<Autobahn> options)
//            : base(options)
//        {
//        }

//        public virtual DbSet<Activity> Activities { get; set; } = null!;
//        public virtual DbSet<ActivityRecognition> ActivityRecognitions { get; set; } = null!;
//        public virtual DbSet<AeCourse> AeCourses { get; set; } = null!;
//        public virtual DbSet<AeProvider> AeProviders { get; set; } = null!;
//        public virtual DbSet<AeStaff> AeStaffs { get; set; } = null!;
//        public virtual DbSet<AeStudentAcademicRecord> AeStudentAcademicRecords { get; set; } = null!;
//        public virtual DbSet<AeStudentEmployment> AeStudentEmployments { get; set; } = null!;
//        public virtual DbSet<ApipInteraction> ApipInteractions { get; set; } = null!;
//        public virtual DbSet<Application> Applications { get; set; } = null!;
//        public virtual DbSet<Assessment> Assessments { get; set; } = null!;
//        public virtual DbSet<AssessmentAccommodation> AssessmentAccommodations { get; set; } = null!;
//        public virtual DbSet<AssessmentAdministration> AssessmentAdministrations { get; set; } = null!;
//        public virtual DbSet<AssessmentAdministrationOrganization> AssessmentAdministrationOrganizations { get; set; } = null!;
//        public virtual DbSet<AssessmentAssessmentAdministration> AssessmentAssessmentAdministrations { get; set; } = null!;
//        public virtual DbSet<AssessmentAsset> AssessmentAssets { get; set; } = null!;
//        public virtual DbSet<AssessmentEldevelopmentalDomain> AssessmentEldevelopmentalDomains { get; set; } = null!;
//        public virtual DbSet<AssessmentForm> AssessmentForms { get; set; } = null!;
//        public virtual DbSet<AssessmentFormAssessmentAsset> AssessmentFormAssessmentAssets { get; set; } = null!;
//        public virtual DbSet<AssessmentFormAssessmentFormSection> AssessmentFormAssessmentFormSections { get; set; } = null!;
//        public virtual DbSet<AssessmentFormSection> AssessmentFormSections { get; set; } = null!;
//        public virtual DbSet<AssessmentFormSectionAssessmentAsset> AssessmentFormSectionAssessmentAssets { get; set; } = null!;
//        public virtual DbSet<AssessmentFormSectionAssessmentItem> AssessmentFormSectionAssessmentItems { get; set; } = null!;
//        public virtual DbSet<AssessmentItem> AssessmentItems { get; set; } = null!;
//        public virtual DbSet<AssessmentItemApip> AssessmentItemApips { get; set; } = null!;
//        public virtual DbSet<AssessmentItemApipDescription> AssessmentItemApipDescriptions { get; set; } = null!;
//        public virtual DbSet<AssessmentItemCharacteristic> AssessmentItemCharacteristics { get; set; } = null!;
//        public virtual DbSet<AssessmentItemPossibleResponse> AssessmentItemPossibleResponses { get; set; } = null!;
//        public virtual DbSet<AssessmentItemResponse> AssessmentItemResponses { get; set; } = null!;
//        public virtual DbSet<AssessmentItemResponseTheory> AssessmentItemResponseTheories { get; set; } = null!;
//        public virtual DbSet<AssessmentItemRubricCriterionResult> AssessmentItemRubricCriterionResults { get; set; } = null!;
//        public virtual DbSet<AssessmentLanguage> AssessmentLanguages { get; set; } = null!;
//        public virtual DbSet<AssessmentLevelsForWhichDesigned> AssessmentLevelsForWhichDesigneds { get; set; } = null!;
//        public virtual DbSet<AssessmentNeedApipContent> AssessmentNeedApipContents { get; set; } = null!;
//        public virtual DbSet<AssessmentNeedApipControl> AssessmentNeedApipControls { get; set; } = null!;
//        public virtual DbSet<AssessmentNeedApipDisplay> AssessmentNeedApipDisplays { get; set; } = null!;
//        public virtual DbSet<AssessmentNeedBraille> AssessmentNeedBrailles { get; set; } = null!;
//        public virtual DbSet<AssessmentNeedScreenEnhancement> AssessmentNeedScreenEnhancements { get; set; } = null!;
//        public virtual DbSet<AssessmentParticipantSession> AssessmentParticipantSessions { get; set; } = null!;
//        public virtual DbSet<AssessmentParticipantSessionAccommodation> AssessmentParticipantSessionAccommodations { get; set; } = null!;
//        public virtual DbSet<AssessmentPerformanceLevel> AssessmentPerformanceLevels { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedLanguageLearner> AssessmentPersonalNeedLanguageLearners { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedScreenReader> AssessmentPersonalNeedScreenReaders { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedsProfile> AssessmentPersonalNeedsProfiles { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedsProfileContent> AssessmentPersonalNeedsProfileContents { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedsProfileControl> AssessmentPersonalNeedsProfileControls { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedsProfileDisplay> AssessmentPersonalNeedsProfileDisplays { get; set; } = null!;
//        public virtual DbSet<AssessmentPersonalNeedsProfileScreenEnhancement> AssessmentPersonalNeedsProfileScreenEnhancements { get; set; } = null!;
//        public virtual DbSet<AssessmentRegistration> AssessmentRegistrations { get; set; } = null!;
//        public virtual DbSet<AssessmentRegistrationAccommodation> AssessmentRegistrationAccommodations { get; set; } = null!;
//        public virtual DbSet<AssessmentResult> AssessmentResults { get; set; } = null!;
//        public virtual DbSet<AssessmentResultPerformanceLevel> AssessmentResultPerformanceLevels { get; set; } = null!;
//        public virtual DbSet<AssessmentResultRubricCriterionResult> AssessmentResultRubricCriterionResults { get; set; } = null!;
//        public virtual DbSet<AssessmentSession> AssessmentSessions { get; set; } = null!;
//        public virtual DbSet<AssessmentSessionStaffRole> AssessmentSessionStaffRoles { get; set; } = null!;
//        public virtual DbSet<AssessmentSubtest> AssessmentSubtests { get; set; } = null!;
//        public virtual DbSet<AssessmentSubtestAssessmentItem> AssessmentSubtestAssessmentItems { get; set; } = null!;
//        public virtual DbSet<AssessmentSubtestCompetencyDefinition> AssessmentSubtestCompetencyDefinitions { get; set; } = null!;
//        public virtual DbSet<AssessmentSubtestEldevelopmentalDomain> AssessmentSubtestEldevelopmentalDomains { get; set; } = null!;
//        public virtual DbSet<AssessmentSubtestLevelsForWhichDesigned> AssessmentSubtestLevelsForWhichDesigneds { get; set; } = null!;
//        public virtual DbSet<Authentication> Authentications { get; set; } = null!;
//        public virtual DbSet<Authorization> Authorizations { get; set; } = null!;
//        public virtual DbSet<AuthorizationDocument> AuthorizationDocuments { get; set; } = null!;
//        public virtual DbSet<BuildingSpace> BuildingSpaces { get; set; } = null!;
//        public virtual DbSet<BuildingSpaceUtilization> BuildingSpaceUtilizations { get; set; } = null!;
//        public virtual DbSet<BuildingSystemCategory> BuildingSystemCategories { get; set; } = null!;
//        public virtual DbSet<BuildingSystemComponent> BuildingSystemComponents { get; set; } = null!;
//        public virtual DbSet<BuildingSystemComponentService> BuildingSystemComponentServices { get; set; } = null!;
//        public virtual DbSet<Cedselement> Cedselements { get; set; } = null!;
//        public virtual DbSet<CedstoNdsmapping> CedstoNdsmappings { get; set; } = null!;
//        public virtual DbSet<Classroom> Classrooms { get; set; } = null!;
//        public virtual DbSet<CompetencyDefAssociation> CompetencyDefAssociations { get; set; } = null!;
//        public virtual DbSet<CompetencyDefEducationLevel> CompetencyDefEducationLevels { get; set; } = null!;
//        public virtual DbSet<CompetencyDefinition> CompetencyDefinitions { get; set; } = null!;
//        public virtual DbSet<CompetencyDefinitionCompetencySet> CompetencyDefinitionCompetencySets { get; set; } = null!;
//        public virtual DbSet<CompetencyFramework> CompetencyFrameworks { get; set; } = null!;
//        public virtual DbSet<CompetencySet> CompetencySets { get; set; } = null!;
//        public virtual DbSet<CompetencySetRubric> CompetencySetRubrics { get; set; } = null!;
//        public virtual DbSet<CompetencySetRubricCriterion> CompetencySetRubricCriteria { get; set; } = null!;
//        public virtual DbSet<CoreKnowledgeArea> CoreKnowledgeAreas { get; set; } = null!;
//        public virtual DbSet<Course> Courses { get; set; } = null!;
//        public virtual DbSet<CourseSection> CourseSections { get; set; } = null!;
//        public virtual DbSet<CourseSectionAssessmentReporting> CourseSectionAssessmentReportings { get; set; } = null!;
//        public virtual DbSet<CourseSectionLevel> CourseSectionLevels { get; set; } = null!;
//        public virtual DbSet<CourseSectionLocation> CourseSectionLocations { get; set; } = null!;
//        public virtual DbSet<CourseSectionSchedule> CourseSectionSchedules { get; set; } = null!;
//        public virtual DbSet<CredentialAward> CredentialAwards { get; set; } = null!;
//        public virtual DbSet<CredentialAwardCredit> CredentialAwardCredits { get; set; } = null!;
//        public virtual DbSet<CredentialAwardEvidence> CredentialAwardEvidences { get; set; } = null!;
//        public virtual DbSet<CredentialCriteriaCourse> CredentialCriteriaCourses { get; set; } = null!;
//        public virtual DbSet<CredentialDefAgent> CredentialDefAgents { get; set; } = null!;
//        public virtual DbSet<CredentialDefAgentCredential> CredentialDefAgentCredentials { get; set; } = null!;
//        public virtual DbSet<CredentialDefCategory> CredentialDefCategories { get; set; } = null!;
//        public virtual DbSet<CredentialDefCriterion> CredentialDefCriteria { get; set; } = null!;
//        public virtual DbSet<CredentialDefIdentifier> CredentialDefIdentifiers { get; set; } = null!;
//        public virtual DbSet<CredentialDefinition> CredentialDefinitions { get; set; } = null!;
//        public virtual DbSet<CredentialIssuer> CredentialIssuers { get; set; } = null!;
//        public virtual DbSet<CredentialOffered> CredentialOffereds { get; set; } = null!;
//        public virtual DbSet<CteCourse> CteCourses { get; set; } = null!;
//        public virtual DbSet<CteStudentAcademicRecord> CteStudentAcademicRecords { get; set; } = null!;
//        public virtual DbSet<DataCollection> DataCollections { get; set; } = null!;
//        public virtual DbSet<EarlyChildhoodCredential> EarlyChildhoodCredentials { get; set; } = null!;
//        public virtual DbSet<EarlyChildhoodProgramTypeOffered> EarlyChildhoodProgramTypeOffereds { get; set; } = null!;
//        public virtual DbSet<ElchildDemographic> ElchildDemographics { get; set; } = null!;
//        public virtual DbSet<ElchildDevelopmentalAssessment> ElchildDevelopmentalAssessments { get; set; } = null!;
//        public virtual DbSet<ElchildHealth> ElchildHealths { get; set; } = null!;
//        public virtual DbSet<ElchildIndividualizedProgram> ElchildIndividualizedPrograms { get; set; } = null!;
//        public virtual DbSet<ElchildOutcomeSummary> ElchildOutcomeSummaries { get; set; } = null!;
//        public virtual DbSet<ElchildProgramEligibility> ElchildProgramEligibilities { get; set; } = null!;
//        public virtual DbSet<ElchildService> ElchildServices { get; set; } = null!;
//        public virtual DbSet<ElchildServicesApplication> ElchildServicesApplications { get; set; } = null!;
//        public virtual DbSet<ElchildTransitionPlan> ElchildTransitionPlans { get; set; } = null!;
//        public virtual DbSet<ElclassSection> ElclassSections { get; set; } = null!;
//        public virtual DbSet<ElclassSectionService> ElclassSectionServices { get; set; } = null!;
//        public virtual DbSet<Elenrollment> Elenrollments { get; set; } = null!;
//        public virtual DbSet<ElenrollmentOtherFunding> ElenrollmentOtherFundings { get; set; } = null!;
//        public virtual DbSet<ElfacilityLicensing> ElfacilityLicensings { get; set; } = null!;
//        public virtual DbSet<EligibilityEvaluation> EligibilityEvaluations { get; set; } = null!;
//        public virtual DbSet<Elorganization> Elorganizations { get; set; } = null!;
//        public virtual DbSet<ElorganizationAvailability> ElorganizationAvailabilities { get; set; } = null!;
//        public virtual DbSet<ElorganizationFund> ElorganizationFunds { get; set; } = null!;
//        public virtual DbSet<ElorganizationMonitoring> ElorganizationMonitorings { get; set; } = null!;
//        public virtual DbSet<ElprogramLicensing> ElprogramLicensings { get; set; } = null!;
//        public virtual DbSet<ElqualityInitiative> ElqualityInitiatives { get; set; } = null!;
//        public virtual DbSet<ElqualityRatingImprovement> ElqualityRatingImprovements { get; set; } = null!;
//        public virtual DbSet<ElservicePartner> ElservicePartners { get; set; } = null!;
//        public virtual DbSet<Elstaff> Elstaffs { get; set; } = null!;
//        public virtual DbSet<ElstaffAssignment> ElstaffAssignments { get; set; } = null!;
//        public virtual DbSet<ElstaffEducation> ElstaffEducations { get; set; } = null!;
//        public virtual DbSet<ElstaffEmployment> ElstaffEmployments { get; set; } = null!;
//        public virtual DbSet<Facility> Facilities { get; set; } = null!;
//        public virtual DbSet<FacilityAudit> FacilityAudits { get; set; } = null!;
//        public virtual DbSet<FacilityCompliance> FacilityCompliances { get; set; } = null!;
//        public virtual DbSet<FacilityDesign> FacilityDesigns { get; set; } = null!;
//        public virtual DbSet<FacilityDesignConstruction> FacilityDesignConstructions { get; set; } = null!;
//        public virtual DbSet<FacilityEnergy> FacilityEnergies { get; set; } = null!;
//        public virtual DbSet<FacilityFinance> FacilityFinances { get; set; } = null!;
//        public virtual DbSet<FacilityFinancial> FacilityFinancials { get; set; } = null!;
//        public virtual DbSet<FacilityHazard> FacilityHazards { get; set; } = null!;
//        public virtual DbSet<FacilityJointUse> FacilityJointUses { get; set; } = null!;
//        public virtual DbSet<FacilityLease> FacilityLeases { get; set; } = null!;
//        public virtual DbSet<FacilityLocation> FacilityLocations { get; set; } = null!;
//        public virtual DbSet<FacilityManagement> FacilityManagements { get; set; } = null!;
//        public virtual DbSet<FacilityManagementPlan> FacilityManagementPlans { get; set; } = null!;
//        public virtual DbSet<FacilityMandate> FacilityMandates { get; set; } = null!;
//        public virtual DbSet<FacilityMortgage> FacilityMortgages { get; set; } = null!;
//        public virtual DbSet<FacilityMortgageFee> FacilityMortgageFees { get; set; } = null!;
//        public virtual DbSet<FacilityRelationship> FacilityRelationships { get; set; } = null!;
//        public virtual DbSet<FacilitySchoolDesign> FacilitySchoolDesigns { get; set; } = null!;
//        public virtual DbSet<FacilitySite> FacilitySites { get; set; } = null!;
//        public virtual DbSet<FacilityUtilization> FacilityUtilizations { get; set; } = null!;
//        public virtual DbSet<FinancialAccount> FinancialAccounts { get; set; } = null!;
//        public virtual DbSet<FinancialAccountProgram> FinancialAccountPrograms { get; set; } = null!;
//        public virtual DbSet<FinancialAidApplication> FinancialAidApplications { get; set; } = null!;
//        public virtual DbSet<FinancialAidAward> FinancialAidAwards { get; set; } = null!;
//        public virtual DbSet<Goal> Goals { get; set; } = null!;
//        public virtual DbSet<GoalMeasurement> GoalMeasurements { get; set; } = null!;
//        public virtual DbSet<GoalMeasurementCriterion> GoalMeasurementCriteria { get; set; } = null!;
//        public virtual DbSet<GoalPerformance> GoalPerformances { get; set; } = null!;
//        public virtual DbSet<IdeaeligibilityEvaluationCategory> IdeaeligibilityEvaluationCategories { get; set; } = null!;
//        public virtual DbSet<Idsversion> Idsversions { get; set; } = null!;
//        public virtual DbSet<Iepauthorization> Iepauthorizations { get; set; } = null!;
//        public virtual DbSet<IepauthorizationRejected> IepauthorizationRejecteds { get; set; } = null!;
//        public virtual DbSet<IeppresentLevel> IeppresentLevels { get; set; } = null!;
//        public virtual DbSet<Incident> Incidents { get; set; } = null!;
//        public virtual DbSet<IncidentPerson> IncidentPeople { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgram> IndividualizedPrograms { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramAccommodation> IndividualizedProgramAccommodations { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramAccommodationSubject> IndividualizedProgramAccommodationSubjects { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramAmendment> IndividualizedProgramAmendments { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramAssessment> IndividualizedProgramAssessments { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramAssessmentAccommodation> IndividualizedProgramAssessmentAccommodations { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramEligibility> IndividualizedProgramEligibilities { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramEligibilityEvaluation> IndividualizedProgramEligibilityEvaluations { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramGoal> IndividualizedProgramGoals { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramMeeting> IndividualizedProgramMeetings { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramMeetingAttendee> IndividualizedProgramMeetingAttendees { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramProgressGoal> IndividualizedProgramProgressGoals { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramProgressReport> IndividualizedProgramProgressReports { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramProgressReportPlan> IndividualizedProgramProgressReportPlans { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramService> IndividualizedProgramServices { get; set; } = null!;
//        public virtual DbSet<IndividualizedProgramServicesReceived> IndividualizedProgramServicesReceiveds { get; set; } = null!;
//        public virtual DbSet<Ipedsfinance> Ipedsfinances { get; set; } = null!;
//        public virtual DbSet<K12charterSchoolAuthorizerAgency> K12charterSchoolAuthorizerAgencies { get; set; } = null!;
//        public virtual DbSet<K12charterSchoolManagementOrganization> K12charterSchoolManagementOrganizations { get; set; } = null!;
//        public virtual DbSet<K12course> K12courses { get; set; } = null!;
//        public virtual DbSet<K12federalFundAllocation> K12federalFundAllocations { get; set; } = null!;
//        public virtual DbSet<K12lea> K12leas { get; set; } = null!;
//        public virtual DbSet<K12leaFederalFund> K12leaFederalFunds { get; set; } = null!;
//        public virtual DbSet<K12leaFederalReporting> K12leaFederalReportings { get; set; } = null!;
//        public virtual DbSet<K12leaGradeLevelsApproved> K12leaGradeLevelsApproveds { get; set; } = null!;
//        public virtual DbSet<K12leaGradeOffered> K12leaGradeOffereds { get; set; } = null!;
//        public virtual DbSet<K12leaPreKeligibility> K12leaPreKeligibilities { get; set; } = null!;
//        public virtual DbSet<K12leaPreKeligibleAgesIdea> K12leaPreKeligibleAgesIdeas { get; set; } = null!;
//        public virtual DbSet<K12leaSafeDrugFree> K12leaSafeDrugFrees { get; set; } = null!;
//        public virtual DbSet<K12leaTitleIiiprofessionalDevelopment> K12leaTitleIiiprofessionalDevelopments { get; set; } = null!;
//        public virtual DbSet<K12leaTitleIsupportService> K12leaTitleIsupportServices { get; set; } = null!;
//        public virtual DbSet<K12organizationStudentResponsibility> K12organizationStudentResponsibilities { get; set; } = null!;
//        public virtual DbSet<K12programOrService> K12programOrServices { get; set; } = null!;
//        public virtual DbSet<K12school> K12schools { get; set; } = null!;
//        public virtual DbSet<K12schoolCorrectiveAction> K12schoolCorrectiveActions { get; set; } = null!;
//        public virtual DbSet<K12schoolGradeLevelsApproved> K12schoolGradeLevelsApproveds { get; set; } = null!;
//        public virtual DbSet<K12schoolGradeOffered> K12schoolGradeOffereds { get; set; } = null!;
//        public virtual DbSet<K12schoolImprovement> K12schoolImprovements { get; set; } = null!;
//        public virtual DbSet<K12schoolIndicatorStatus> K12schoolIndicatorStatuses { get; set; } = null!;
//        public virtual DbSet<K12schoolStatus> K12schoolStatuses { get; set; } = null!;
//        public virtual DbSet<K12sea> K12seas { get; set; } = null!;
//        public virtual DbSet<K12seaAlternateFundUse> K12seaAlternateFundUses { get; set; } = null!;
//        public virtual DbSet<K12seaFederalFund> K12seaFederalFunds { get; set; } = null!;
//        public virtual DbSet<K12staffAssignment> K12staffAssignments { get; set; } = null!;
//        public virtual DbSet<K12staffEmployment> K12staffEmployments { get; set; } = null!;
//        public virtual DbSet<K12studentAcademicHonor> K12studentAcademicHonors { get; set; } = null!;
//        public virtual DbSet<K12studentAcademicRecord> K12studentAcademicRecords { get; set; } = null!;
//        public virtual DbSet<K12studentActivity> K12studentActivities { get; set; } = null!;
//        public virtual DbSet<K12studentCohort> K12studentCohorts { get; set; } = null!;
//        public virtual DbSet<K12studentCourseSection> K12studentCourseSections { get; set; } = null!;
//        public virtual DbSet<K12studentCourseSectionMark> K12studentCourseSectionMarks { get; set; } = null!;
//        public virtual DbSet<K12studentDiscipline> K12studentDisciplines { get; set; } = null!;
//        public virtual DbSet<K12studentEmployment> K12studentEmployments { get; set; } = null!;
//        public virtual DbSet<K12studentEnrollment> K12studentEnrollments { get; set; } = null!;
//        public virtual DbSet<K12studentGraduationPlan> K12studentGraduationPlans { get; set; } = null!;
//        public virtual DbSet<K12studentHomeLanguageSurvey> K12studentHomeLanguageSurveys { get; set; } = null!;
//        public virtual DbSet<K12studentLiteracyAssessment> K12studentLiteracyAssessments { get; set; } = null!;
//        public virtual DbSet<K12studentSession> K12studentSessions { get; set; } = null!;
//        public virtual DbSet<K12titleIiilanguageInstruction> K12titleIiilanguageInstructions { get; set; } = null!;
//        public virtual DbSet<LearnerAction> LearnerActions { get; set; } = null!;
//        public virtual DbSet<LearnerActivity> LearnerActivities { get; set; } = null!;
//        public virtual DbSet<LearnerActivityLearningResource> LearnerActivityLearningResources { get; set; } = null!;
//        public virtual DbSet<LearningResource> LearningResources { get; set; } = null!;
//        public virtual DbSet<LearningResourceAdaptation> LearningResourceAdaptations { get; set; } = null!;
//        public virtual DbSet<LearningResourceEducationLevel> LearningResourceEducationLevels { get; set; } = null!;
//        public virtual DbSet<LearningResourceMediaFeature> LearningResourceMediaFeatures { get; set; } = null!;
//        public virtual DbSet<LearningResourcePeerRating> LearningResourcePeerRatings { get; set; } = null!;
//        public virtual DbSet<LearningResourcePhysicalMedium> LearningResourcePhysicalMedia { get; set; } = null!;
//        public virtual DbSet<Location> Locations { get; set; } = null!;
//        public virtual DbSet<LocationAddress> LocationAddresses { get; set; } = null!;
//        public virtual DbSet<Organization> Organizations { get; set; } = null!;
//        public virtual DbSet<OrganizationAccreditation> OrganizationAccreditations { get; set; } = null!;
//        public virtual DbSet<OrganizationCalendar> OrganizationCalendars { get; set; } = null!;
//        public virtual DbSet<OrganizationCalendarCrisis> OrganizationCalendarCrises { get; set; } = null!;
//        public virtual DbSet<OrganizationCalendarDay> OrganizationCalendarDays { get; set; } = null!;
//        public virtual DbSet<OrganizationCalendarEvent> OrganizationCalendarEvents { get; set; } = null!;
//        public virtual DbSet<OrganizationCalendarSession> OrganizationCalendarSessions { get; set; } = null!;
//        public virtual DbSet<OrganizationDetail> OrganizationDetails { get; set; } = null!;
//        public virtual DbSet<OrganizationEmail> OrganizationEmails { get; set; } = null!;
//        public virtual DbSet<OrganizationEmployeeBenefit> OrganizationEmployeeBenefits { get; set; } = null!;
//        public virtual DbSet<OrganizationFederalAccountability> OrganizationFederalAccountabilities { get; set; } = null!;
//        public virtual DbSet<OrganizationFinancial> OrganizationFinancials { get; set; } = null!;
//        public virtual DbSet<OrganizationIdentifier> OrganizationIdentifiers { get; set; } = null!;
//        public virtual DbSet<OrganizationImage> OrganizationImages { get; set; } = null!;
//        public virtual DbSet<OrganizationIndicator> OrganizationIndicators { get; set; } = null!;
//        public virtual DbSet<OrganizationLocation> OrganizationLocations { get; set; } = null!;
//        public virtual DbSet<OrganizationOperationalStatus> OrganizationOperationalStatuses { get; set; } = null!;
//        public virtual DbSet<OrganizationPersonRole> OrganizationPersonRoles { get; set; } = null!;
//        public virtual DbSet<OrganizationPersonRoleApplication> OrganizationPersonRoleApplications { get; set; } = null!;
//        public virtual DbSet<OrganizationPersonRoleFte> OrganizationPersonRoleFtes { get; set; } = null!;
//        public virtual DbSet<OrganizationPersonRoleRelationship> OrganizationPersonRoleRelationships { get; set; } = null!;
//        public virtual DbSet<OrganizationPolicy> OrganizationPolicies { get; set; } = null!;
//        public virtual DbSet<OrganizationPopulationServed> OrganizationPopulationServeds { get; set; } = null!;
//        public virtual DbSet<OrganizationProgramType> OrganizationProgramTypes { get; set; } = null!;
//        public virtual DbSet<OrganizationRelationship> OrganizationRelationships { get; set; } = null!;
//        public virtual DbSet<OrganizationService> OrganizationServices { get; set; } = null!;
//        public virtual DbSet<OrganizationTechnicalAssistance> OrganizationTechnicalAssistances { get; set; } = null!;
//        public virtual DbSet<OrganizationTelephone> OrganizationTelephones { get; set; } = null!;
//        public virtual DbSet<OrganizationWebsite> OrganizationWebsites { get; set; } = null!;
//        public virtual DbSet<PdactivityEducationLevel> PdactivityEducationLevels { get; set; } = null!;
//        public virtual DbSet<PeerRatingSystem> PeerRatingSystems { get; set; } = null!;
//        public virtual DbSet<Person> People { get; set; } = null!;
//        public virtual DbSet<PersonAddress> PersonAddresses { get; set; } = null!;
//        public virtual DbSet<PersonAddressNcesSide> PersonAddressNcesSides { get; set; } = null!;
//        public virtual DbSet<PersonAllergy> PersonAllergies { get; set; } = null!;
//        public virtual DbSet<PersonAssessmentPersonalNeedsProfile> PersonAssessmentPersonalNeedsProfiles { get; set; } = null!;
//        public virtual DbSet<PersonBirthplace> PersonBirthplaces { get; set; } = null!;
//        public virtual DbSet<PersonCareerEducationPlan> PersonCareerEducationPlans { get; set; } = null!;
//        public virtual DbSet<PersonCredential> PersonCredentials { get; set; } = null!;
//        public virtual DbSet<PersonDegreeOrCertificate> PersonDegreeOrCertificates { get; set; } = null!;
//        public virtual DbSet<PersonDemographicRace> PersonDemographicRaces { get; set; } = null!;
//        public virtual DbSet<PersonDetail> PersonDetails { get; set; } = null!;
//        public virtual DbSet<PersonDigitalAccess> PersonDigitalAccesses { get; set; } = null!;
//        public virtual DbSet<PersonDigitalAccessSpeed> PersonDigitalAccessSpeeds { get; set; } = null!;
//        public virtual DbSet<PersonDisability> PersonDisabilities { get; set; } = null!;
//        public virtual DbSet<PersonEmailAddress> PersonEmailAddresses { get; set; } = null!;
//        public virtual DbSet<PersonFamily> PersonFamilies { get; set; } = null!;
//        public virtual DbSet<PersonHealth> PersonHealths { get; set; } = null!;
//        public virtual DbSet<PersonHealthBirth> PersonHealthBirths { get; set; } = null!;
//        public virtual DbSet<PersonHomelessness> PersonHomelessnesses { get; set; } = null!;
//        public virtual DbSet<PersonIdentifier> PersonIdentifiers { get; set; } = null!;
//        public virtual DbSet<PersonImmunization> PersonImmunizations { get; set; } = null!;
//        public virtual DbSet<PersonLanguage> PersonLanguages { get; set; } = null!;
//        public virtual DbSet<PersonLearningDevice> PersonLearningDevices { get; set; } = null!;
//        public virtual DbSet<PersonMaster> PersonMasters { get; set; } = null!;
//        public virtual DbSet<PersonMilitary> PersonMilitaries { get; set; } = null!;
//        public virtual DbSet<PersonOtherName> PersonOtherNames { get; set; } = null!;
//        public virtual DbSet<PersonPersonalInformationVerification> PersonPersonalInformationVerifications { get; set; } = null!;
//        public virtual DbSet<PersonProgramParticipation> PersonProgramParticipations { get; set; } = null!;
//        public virtual DbSet<PersonReferral> PersonReferrals { get; set; } = null!;
//        public virtual DbSet<PersonRelationship> PersonRelationships { get; set; } = null!;
//        public virtual DbSet<PersonStatus> PersonStatuses { get; set; } = null!;
//        public virtual DbSet<PersonTelephone> PersonTelephones { get; set; } = null!;
//        public virtual DbSet<ProfessionalDevelopmentActivity> ProfessionalDevelopmentActivities { get; set; } = null!;
//        public virtual DbSet<ProfessionalDevelopmentRequirement> ProfessionalDevelopmentRequirements { get; set; } = null!;
//        public virtual DbSet<ProfessionalDevelopmentSession> ProfessionalDevelopmentSessions { get; set; } = null!;
//        public virtual DbSet<ProfessionalDevelopmentSessionInstructor> ProfessionalDevelopmentSessionInstructors { get; set; } = null!;
//        public virtual DbSet<Program> Programs { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationAe> ProgramParticipationAes { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationAttainment> ProgramParticipationAttainments { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationCte> ProgramParticipationCtes { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationFoodService> ProgramParticipationFoodServices { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationMigrant> ProgramParticipationMigrants { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationNeglected> ProgramParticipationNeglecteds { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationSpecialEducation> ProgramParticipationSpecialEducations { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationTeacherPrep> ProgramParticipationTeacherPreps { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationTitleI> ProgramParticipationTitleIs { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationTitleIiilep> ProgramParticipationTitleIiileps { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationWioa> ProgramParticipationWioas { get; set; } = null!;
//        public virtual DbSet<ProgramParticipationWioabarrier> ProgramParticipationWioabarriers { get; set; } = null!;
//        public virtual DbSet<PsCourse> PsCourses { get; set; } = null!;
//        public virtual DbSet<PsInstitution> PsInstitutions { get; set; } = null!;
//        public virtual DbSet<PsPriceOfAttendance> PsPriceOfAttendances { get; set; } = null!;
//        public virtual DbSet<PsProgram> PsPrograms { get; set; } = null!;
//        public virtual DbSet<PsSection> PsSections { get; set; } = null!;
//        public virtual DbSet<PsSectionLocation> PsSectionLocations { get; set; } = null!;
//        public virtual DbSet<PsStaffEmployment> PsStaffEmployments { get; set; } = null!;
//        public virtual DbSet<PsStudentAcademicAward> PsStudentAcademicAwards { get; set; } = null!;
//        public virtual DbSet<PsStudentAcademicRecord> PsStudentAcademicRecords { get; set; } = null!;
//        public virtual DbSet<PsStudentAdmissionTest> PsStudentAdmissionTests { get; set; } = null!;
//        public virtual DbSet<PsStudentApplication> PsStudentApplications { get; set; } = null!;
//        public virtual DbSet<PsStudentCohort> PsStudentCohorts { get; set; } = null!;
//        public virtual DbSet<PsStudentCourseSectionMark> PsStudentCourseSectionMarks { get; set; } = null!;
//        public virtual DbSet<PsStudentDemographic> PsStudentDemographics { get; set; } = null!;
//        public virtual DbSet<PsStudentEmployment> PsStudentEmployments { get; set; } = null!;
//        public virtual DbSet<PsStudentEnrollment> PsStudentEnrollments { get; set; } = null!;
//        public virtual DbSet<PsStudentFinancialAid> PsStudentFinancialAids { get; set; } = null!;
//        public virtual DbSet<PsStudentSection> PsStudentSections { get; set; } = null!;
//        public virtual DbSet<PsstudentProgram> PsstudentPrograms { get; set; } = null!;
//        public virtual DbSet<QuarterlyEmploymentRecord> QuarterlyEmploymentRecords { get; set; } = null!;
//        public virtual DbSet<RecordStatus> RecordStatuses { get; set; } = null!;
//        public virtual DbSet<RecordStatusHistory> RecordStatusHistories { get; set; } = null!;
//        public virtual DbSet<RefAbsentAttendanceCategory> RefAbsentAttendanceCategories { get; set; } = null!;
//        public virtual DbSet<RefAcademicAwardLevel> RefAcademicAwardLevels { get; set; } = null!;
//        public virtual DbSet<RefAcademicAwardPrerequisiteType> RefAcademicAwardPrerequisiteTypes { get; set; } = null!;
//        public virtual DbSet<RefAcademicHonorType> RefAcademicHonorTypes { get; set; } = null!;
//        public virtual DbSet<RefAcademicRank> RefAcademicRanks { get; set; } = null!;
//        public virtual DbSet<RefAcademicSubject> RefAcademicSubjects { get; set; } = null!;
//        public virtual DbSet<RefAcademicTermDesignator> RefAcademicTermDesignators { get; set; } = null!;
//        public virtual DbSet<RefAccommodationType> RefAccommodationTypes { get; set; } = null!;
//        public virtual DbSet<RefAccommodationsNeededType> RefAccommodationsNeededTypes { get; set; } = null!;
//        public virtual DbSet<RefAccreditationAgency> RefAccreditationAgencies { get; set; } = null!;
//        public virtual DbSet<RefActivityRecognitionType> RefActivityRecognitionTypes { get; set; } = null!;
//        public virtual DbSet<RefActivityTimeMeasurementType> RefActivityTimeMeasurementTypes { get; set; } = null!;
//        public virtual DbSet<RefAdditionalCreditType> RefAdditionalCreditTypes { get; set; } = null!;
//        public virtual DbSet<RefAdditionalTargetedSupportAndImprovementStatus> RefAdditionalTargetedSupportAndImprovementStatuses { get; set; } = null!;
//        public virtual DbSet<RefAddressType> RefAddressTypes { get; set; } = null!;
//        public virtual DbSet<RefAdministrativeFundingControl> RefAdministrativeFundingControls { get; set; } = null!;
//        public virtual DbSet<RefAdmissionConsiderationLevel> RefAdmissionConsiderationLevels { get; set; } = null!;
//        public virtual DbSet<RefAdmissionConsiderationType> RefAdmissionConsiderationTypes { get; set; } = null!;
//        public virtual DbSet<RefAdmittedStudent> RefAdmittedStudents { get; set; } = null!;
//        public virtual DbSet<RefAdultEducationProgramExitReason> RefAdultEducationProgramExitReasons { get; set; } = null!;
//        public virtual DbSet<RefAdvancedPlacementCourseCode> RefAdvancedPlacementCourseCodes { get; set; } = null!;
//        public virtual DbSet<RefAeCertificationType> RefAeCertificationTypes { get; set; } = null!;
//        public virtual DbSet<RefAeFunctioningLevelAtIntake> RefAeFunctioningLevelAtIntakes { get; set; } = null!;
//        public virtual DbSet<RefAeFunctioningLevelAtPosttest> RefAeFunctioningLevelAtPosttests { get; set; } = null!;
//        public virtual DbSet<RefAeInstructionalProgramType> RefAeInstructionalProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefAePostsecondaryTransitionAction> RefAePostsecondaryTransitionActions { get; set; } = null!;
//        public virtual DbSet<RefAeSpecialProgramType> RefAeSpecialProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefAeStaffClassification> RefAeStaffClassifications { get; set; } = null!;
//        public virtual DbSet<RefAeStaffEmploymentStatus> RefAeStaffEmploymentStatuses { get; set; } = null!;
//        public virtual DbSet<RefAllergySeverity> RefAllergySeverities { get; set; } = null!;
//        public virtual DbSet<RefAllergyType> RefAllergyTypes { get; set; } = null!;
//        public virtual DbSet<RefAltRouteToCertificationOrLicensure> RefAltRouteToCertificationOrLicensures { get; set; } = null!;
//        public virtual DbSet<RefAlternateFundUse> RefAlternateFundUses { get; set; } = null!;
//        public virtual DbSet<RefAlternativeSchoolFocus> RefAlternativeSchoolFoci { get; set; } = null!;
//        public virtual DbSet<RefAmaoAttainmentStatus> RefAmaoAttainmentStatuses { get; set; } = null!;
//        public virtual DbSet<RefApipInteractionType> RefApipInteractionTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentAccommodationCategory> RefAssessmentAccommodationCategories { get; set; } = null!;
//        public virtual DbSet<RefAssessmentAssetIdentifierType> RefAssessmentAssetIdentifierTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentAssetType> RefAssessmentAssetTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentEldevelopmentalDomain> RefAssessmentEldevelopmentalDomains { get; set; } = null!;
//        public virtual DbSet<RefAssessmentFormSectionIdentificationSystem> RefAssessmentFormSectionIdentificationSystems { get; set; } = null!;
//        public virtual DbSet<RefAssessmentItemCharacteristicType> RefAssessmentItemCharacteristicTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentItemResponseScoreStatus> RefAssessmentItemResponseScoreStatuses { get; set; } = null!;
//        public virtual DbSet<RefAssessmentItemResponseStatus> RefAssessmentItemResponseStatuses { get; set; } = null!;
//        public virtual DbSet<RefAssessmentItemType> RefAssessmentItemTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedAlternativeRepresentationType> RefAssessmentNeedAlternativeRepresentationTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedBrailleGradeType> RefAssessmentNeedBrailleGradeTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedBrailleMarkType> RefAssessmentNeedBrailleMarkTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedBrailleStatusCellType> RefAssessmentNeedBrailleStatusCellTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedHazardType> RefAssessmentNeedHazardTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedIncreasedWhitespacingType> RefAssessmentNeedIncreasedWhitespacingTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedLanguageLearnerType> RefAssessmentNeedLanguageLearnerTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedLinkIndicationType> RefAssessmentNeedLinkIndicationTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedMaskingType> RefAssessmentNeedMaskingTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedNumberOfBrailleDot> RefAssessmentNeedNumberOfBrailleDots { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedSigningType> RefAssessmentNeedSigningTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedSpokenSourcePreferenceType> RefAssessmentNeedSpokenSourcePreferenceTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedSupportTool> RefAssessmentNeedSupportTools { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedUsageType> RefAssessmentNeedUsageTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentNeedUserSpokenPreferenceType> RefAssessmentNeedUserSpokenPreferenceTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentParticipationIndicator> RefAssessmentParticipationIndicators { get; set; } = null!;
//        public virtual DbSet<RefAssessmentPlatformType> RefAssessmentPlatformTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentPretestOutcome> RefAssessmentPretestOutcomes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentPurpose> RefAssessmentPurposes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentReasonNotCompleting> RefAssessmentReasonNotCompletings { get; set; } = null!;
//        public virtual DbSet<RefAssessmentReasonNotTested> RefAssessmentReasonNotTesteds { get; set; } = null!;
//        public virtual DbSet<RefAssessmentRegistrationCompletionStatus> RefAssessmentRegistrationCompletionStatuses { get; set; } = null!;
//        public virtual DbSet<RefAssessmentReportingMethod> RefAssessmentReportingMethods { get; set; } = null!;
//        public virtual DbSet<RefAssessmentResultDataType> RefAssessmentResultDataTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentResultScoreType> RefAssessmentResultScoreTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentSessionSpecialCircumstanceType> RefAssessmentSessionSpecialCircumstanceTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentSessionStaffRoleType> RefAssessmentSessionStaffRoleTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentSessionType> RefAssessmentSessionTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentSubtestIdentifierType> RefAssessmentSubtestIdentifierTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentType> RefAssessmentTypes { get; set; } = null!;
//        public virtual DbSet<RefAssessmentTypeChildrenWithDisability> RefAssessmentTypeChildrenWithDisabilities { get; set; } = null!;
//        public virtual DbSet<RefAttendanceEventType> RefAttendanceEventTypes { get; set; } = null!;
//        public virtual DbSet<RefAttendanceStatus> RefAttendanceStatuses { get; set; } = null!;
//        public virtual DbSet<RefAuthorizerType> RefAuthorizerTypes { get; set; } = null!;
//        public virtual DbSet<RefAypStatus> RefAypStatuses { get; set; } = null!;
//        public virtual DbSet<RefBarrierToEducatingHomeless> RefBarrierToEducatingHomelesses { get; set; } = null!;
//        public virtual DbSet<RefBarrierToInternetAccessInResidence> RefBarrierToInternetAccessInResidences { get; set; } = null!;
//        public virtual DbSet<RefBillableBasisType> RefBillableBasisTypes { get; set; } = null!;
//        public virtual DbSet<RefBlendedLearningModelType> RefBlendedLearningModelTypes { get; set; } = null!;
//        public virtual DbSet<RefBloomsTaxonomyDomain> RefBloomsTaxonomyDomains { get; set; } = null!;
//        public virtual DbSet<RefBuildingAdministrativeSpaceType> RefBuildingAdministrativeSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingAirDistributionSystemType> RefBuildingAirDistributionSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingArtSpecialtySpaceType> RefBuildingArtSpecialtySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingAssemblySpaceType> RefBuildingAssemblySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingBasicClassroomDesignType> RefBuildingBasicClassroomDesignTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCareerTechEducationSpaceType> RefBuildingCareerTechEducationSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCharterSchoolRealtyAccessType> RefBuildingCharterSchoolRealtyAccessTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCirculationSpaceType> RefBuildingCirculationSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCleaningStandardType> RefBuildingCleaningStandardTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCommMgmtComponentSystemType> RefBuildingCommMgmtComponentSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCommunityUseSpaceType> RefBuildingCommunityUseSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingCoolingGenerationSystemType> RefBuildingCoolingGenerationSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingDesignType> RefBuildingDesignTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingElectricalSystemType> RefBuildingElectricalSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingEnergyConservationMeasureType> RefBuildingEnergyConservationMeasureTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingEnergySourceType> RefBuildingEnergySourceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingEnvOrEnergyPerformanceRatingCat> RefBuildingEnvOrEnergyPerformanceRatingCats { get; set; } = null!;
//        public virtual DbSet<RefBuildingFireProtectionSystemType> RefBuildingFireProtectionSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingFoodServiceSpaceType> RefBuildingFoodServiceSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingFullServiceKitchenType> RefBuildingFullServiceKitchenTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingHeatingGenerationSystemType> RefBuildingHeatingGenerationSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingHistoricStatus> RefBuildingHistoricStatuses { get; set; } = null!;
//        public virtual DbSet<RefBuildingHvacsystemType> RefBuildingHvacsystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingIndoorAthleticOrPhysEdSpaceType> RefBuildingIndoorAthleticOrPhysEdSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingInstructionalSpaceFactorType> RefBuildingInstructionalSpaceFactorTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingJointUseRationaleType> RefBuildingJointUseRationaleTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingJointUseSchedulingType> RefBuildingJointUseSchedulingTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingJointUserType> RefBuildingJointUserTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingLibMediaCenterSpecialtySpaceType> RefBuildingLibMediaCenterSpecialtySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingMechanicalConveyingSystemType> RefBuildingMechanicalConveyingSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingMechanicalSystemType> RefBuildingMechanicalSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingOperationsOrMaintSpaceType> RefBuildingOperationsOrMaintSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingOutdoorAthleticOrPhysEdSpaceType> RefBuildingOutdoorAthleticOrPhysEdSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingOutdoorOrNonathleticSpaceType> RefBuildingOutdoorOrNonathleticSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingPerformingArtsSpecialtySpaceType> RefBuildingPerformingArtsSpecialtySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingPlumbingSystemType> RefBuildingPlumbingSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingPrimaryUseType> RefBuildingPrimaryUseTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSchoolDesignType> RefBuildingSchoolDesignTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingScienceSpecialtySpaceType> RefBuildingScienceSpecialtySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSecuritySystemType> RefBuildingSecuritySystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSiteUseRestrictionsType> RefBuildingSiteUseRestrictionsTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSpaceDesignType> RefBuildingSpaceDesignTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSpecEdSpecialtySpaceType> RefBuildingSpecEdSpecialtySpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingStudentSupportSpaceType> RefBuildingStudentSupportSpaceTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingSystemType> RefBuildingSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingTechnologyWiringSystemType> RefBuildingTechnologyWiringSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingUseType> RefBuildingUseTypes { get; set; } = null!;
//        public virtual DbSet<RefBuildingVerticalTransportationSystemType> RefBuildingVerticalTransportationSystemTypes { get; set; } = null!;
//        public virtual DbSet<RefCalendarEventType> RefCalendarEventTypes { get; set; } = null!;
//        public virtual DbSet<RefCampusResidencyType> RefCampusResidencyTypes { get; set; } = null!;
//        public virtual DbSet<RefCampusStatus> RefCampusStatuses { get; set; } = null!;
//        public virtual DbSet<RefCampusType> RefCampusTypes { get; set; } = null!;
//        public virtual DbSet<RefCareerCluster> RefCareerClusters { get; set; } = null!;
//        public virtual DbSet<RefCareerEducationPlanType> RefCareerEducationPlanTypes { get; set; } = null!;
//        public virtual DbSet<RefCarnegieBasicClassification> RefCarnegieBasicClassifications { get; set; } = null!;
//        public virtual DbSet<RefCharterLeaStatus> RefCharterLeaStatuses { get; set; } = null!;
//        public virtual DbSet<RefCharterSchoolAuthorizerType> RefCharterSchoolAuthorizerTypes { get; set; } = null!;
//        public virtual DbSet<RefCharterSchoolManagementOrganizationType> RefCharterSchoolManagementOrganizationTypes { get; set; } = null!;
//        public virtual DbSet<RefCharterSchoolType> RefCharterSchoolTypes { get; set; } = null!;
//        public virtual DbSet<RefChildDevelopmentAssociateType> RefChildDevelopmentAssociateTypes { get; set; } = null!;
//        public virtual DbSet<RefChildDevelopmentalScreeningStatus> RefChildDevelopmentalScreeningStatuses { get; set; } = null!;
//        public virtual DbSet<RefChildOutcomesSummaryRating> RefChildOutcomesSummaryRatings { get; set; } = null!;
//        public virtual DbSet<RefCipCode> RefCipCodes { get; set; } = null!;
//        public virtual DbSet<RefCipUse> RefCipUses { get; set; } = null!;
//        public virtual DbSet<RefCipVersion> RefCipVersions { get; set; } = null!;
//        public virtual DbSet<RefClassroomPositionType> RefClassroomPositionTypes { get; set; } = null!;
//        public virtual DbSet<RefCohortExclusion> RefCohortExclusions { get; set; } = null!;
//        public virtual DbSet<RefCommunicationMethod> RefCommunicationMethods { get; set; } = null!;
//        public virtual DbSet<RefCommunityBasedType> RefCommunityBasedTypes { get; set; } = null!;
//        public virtual DbSet<RefCompetencyDefAssociationType> RefCompetencyDefAssociationTypes { get; set; } = null!;
//        public virtual DbSet<RefCompetencyDefNodeAccessibilityProfile> RefCompetencyDefNodeAccessibilityProfiles { get; set; } = null!;
//        public virtual DbSet<RefCompetencyDefTestabilityType> RefCompetencyDefTestabilityTypes { get; set; } = null!;
//        public virtual DbSet<RefCompetencyFrameworkPublicationStatus> RefCompetencyFrameworkPublicationStatuses { get; set; } = null!;
//        public virtual DbSet<RefCompetencySetCompletionCriterion> RefCompetencySetCompletionCriteria { get; set; } = null!;
//        public virtual DbSet<RefComprehensiveAndTargetedSupport> RefComprehensiveAndTargetedSupports { get; set; } = null!;
//        public virtual DbSet<RefComprehensiveSupport> RefComprehensiveSupports { get; set; } = null!;
//        public virtual DbSet<RefComprehensiveSupportAndImprovementStatus> RefComprehensiveSupportAndImprovementStatuses { get; set; } = null!;
//        public virtual DbSet<RefContentStandardType> RefContentStandardTypes { get; set; } = null!;
//        public virtual DbSet<RefContinuationOfService> RefContinuationOfServices { get; set; } = null!;
//        public virtual DbSet<RefControlOfInstitution> RefControlOfInstitutions { get; set; } = null!;
//        public virtual DbSet<RefCoreKnowledgeArea> RefCoreKnowledgeAreas { get; set; } = null!;
//        public virtual DbSet<RefCorrectionalEducationFacilityType> RefCorrectionalEducationFacilityTypes { get; set; } = null!;
//        public virtual DbSet<RefCorrectiveActionType> RefCorrectiveActionTypes { get; set; } = null!;
//        public virtual DbSet<RefCountry> RefCountries { get; set; } = null!;
//        public virtual DbSet<RefCounty> RefCounties { get; set; } = null!;
//        public virtual DbSet<RefCourseAcademicGradeStatusCode> RefCourseAcademicGradeStatusCodes { get; set; } = null!;
//        public virtual DbSet<RefCourseApplicableEducationLevel> RefCourseApplicableEducationLevels { get; set; } = null!;
//        public virtual DbSet<RefCourseCreditBasisType> RefCourseCreditBasisTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseCreditLevelType> RefCourseCreditLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseCreditUnit> RefCourseCreditUnits { get; set; } = null!;
//        public virtual DbSet<RefCourseGpaApplicability> RefCourseGpaApplicabilities { get; set; } = null!;
//        public virtual DbSet<RefCourseHonorsType> RefCourseHonorsTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseInstructionMethod> RefCourseInstructionMethods { get; set; } = null!;
//        public virtual DbSet<RefCourseInstructionSiteType> RefCourseInstructionSiteTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseInteractionMode> RefCourseInteractionModes { get; set; } = null!;
//        public virtual DbSet<RefCourseLevelCharacteristic> RefCourseLevelCharacteristics { get; set; } = null!;
//        public virtual DbSet<RefCourseLevelType> RefCourseLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseRepeatCode> RefCourseRepeatCodes { get; set; } = null!;
//        public virtual DbSet<RefCourseSectionAssessmentReportingMethod> RefCourseSectionAssessmentReportingMethods { get; set; } = null!;
//        public virtual DbSet<RefCourseSectionDeliveryMode> RefCourseSectionDeliveryModes { get; set; } = null!;
//        public virtual DbSet<RefCourseSectionEnrollmentStatusType> RefCourseSectionEnrollmentStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseSectionEntryType> RefCourseSectionEntryTypes { get; set; } = null!;
//        public virtual DbSet<RefCourseSectionExitType> RefCourseSectionExitTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialDefAgentRoleType> RefCredentialDefAgentRoleTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialDefAssessMethodType> RefCredentialDefAssessMethodTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialDefIntendedPurposeType> RefCredentialDefIntendedPurposeTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialDefStatusType> RefCredentialDefStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialDefVerificationType> RefCredentialDefVerificationTypes { get; set; } = null!;
//        public virtual DbSet<RefCredentialIdentifierSystem> RefCredentialIdentifierSystems { get; set; } = null!;
//        public virtual DbSet<RefCredentialType> RefCredentialTypes { get; set; } = null!;
//        public virtual DbSet<RefCreditHoursAppliedOtherProgram> RefCreditHoursAppliedOtherPrograms { get; set; } = null!;
//        public virtual DbSet<RefCreditTypeEarned> RefCreditTypeEarneds { get; set; } = null!;
//        public virtual DbSet<RefCriticalTeacherShortageCandidate> RefCriticalTeacherShortageCandidates { get; set; } = null!;
//        public virtual DbSet<RefCtdlaudienceLevelType> RefCtdlaudienceLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefCtdlorganizationType> RefCtdlorganizationTypes { get; set; } = null!;
//        public virtual DbSet<RefCteGraduationRateInclusion> RefCteGraduationRateInclusions { get; set; } = null!;
//        public virtual DbSet<RefCteNonTraditionalGenderStatus> RefCteNonTraditionalGenderStatuses { get; set; } = null!;
//        public virtual DbSet<RefCurriculumFrameworkType> RefCurriculumFrameworkTypes { get; set; } = null!;
//        public virtual DbSet<RefDataCollectionStatus> RefDataCollectionStatuses { get; set; } = null!;
//        public virtual DbSet<RefDegreeOrCertificateType> RefDegreeOrCertificateTypes { get; set; } = null!;
//        public virtual DbSet<RefDentalInsuranceCoverageType> RefDentalInsuranceCoverageTypes { get; set; } = null!;
//        public virtual DbSet<RefDentalScreeningStatus> RefDentalScreeningStatuses { get; set; } = null!;
//        public virtual DbSet<RefDependencyStatus> RefDependencyStatuses { get; set; } = null!;
//        public virtual DbSet<RefDevelopmentalEducationReferralStatus> RefDevelopmentalEducationReferralStatuses { get; set; } = null!;
//        public virtual DbSet<RefDevelopmentalEducationType> RefDevelopmentalEducationTypes { get; set; } = null!;
//        public virtual DbSet<RefDevelopmentalEvaluationFinding> RefDevelopmentalEvaluationFindings { get; set; } = null!;
//        public virtual DbSet<RefDirectoryInformationBlockStatus> RefDirectoryInformationBlockStatuses { get; set; } = null!;
//        public virtual DbSet<RefDisabilityConditionStatusCode> RefDisabilityConditionStatusCodes { get; set; } = null!;
//        public virtual DbSet<RefDisabilityConditionType> RefDisabilityConditionTypes { get; set; } = null!;
//        public virtual DbSet<RefDisabilityDeterminationSourceType> RefDisabilityDeterminationSourceTypes { get; set; } = null!;
//        public virtual DbSet<RefDisabilityType> RefDisabilityTypes { get; set; } = null!;
//        public virtual DbSet<RefDisciplinaryActionTaken> RefDisciplinaryActionTakens { get; set; } = null!;
//        public virtual DbSet<RefDisciplineLengthDifferenceReason> RefDisciplineLengthDifferenceReasons { get; set; } = null!;
//        public virtual DbSet<RefDisciplineMethodFirearm> RefDisciplineMethodFirearms { get; set; } = null!;
//        public virtual DbSet<RefDisciplineMethodOfCwd> RefDisciplineMethodOfCwds { get; set; } = null!;
//        public virtual DbSet<RefDisciplineReason> RefDisciplineReasons { get; set; } = null!;
//        public virtual DbSet<RefDistanceEducationCourseEnrollment> RefDistanceEducationCourseEnrollments { get; set; } = null!;
//        public virtual DbSet<RefDoctoralExamsRequiredCode> RefDoctoralExamsRequiredCodes { get; set; } = null!;
//        public virtual DbSet<RefDqpcategoriesOfLearning> RefDqpcategoriesOfLearnings { get; set; } = null!;
//        public virtual DbSet<RefEarlyChildhoodCredential> RefEarlyChildhoodCredentials { get; set; } = null!;
//        public virtual DbSet<RefEarlyChildhoodProgramEnrollmentType> RefEarlyChildhoodProgramEnrollmentTypes { get; set; } = null!;
//        public virtual DbSet<RefEarlyChildhoodService> RefEarlyChildhoodServices { get; set; } = null!;
//        public virtual DbSet<RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitType> RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitTypes { get; set; } = null!;
//        public virtual DbSet<RefEdFactsAcademicOrCareerAndTechnicalOutcomeType> RefEdFactsAcademicOrCareerAndTechnicalOutcomeTypes { get; set; } = null!;
//        public virtual DbSet<RefEdfactsTeacherInexperiencedStatus> RefEdfactsTeacherInexperiencedStatuses { get; set; } = null!;
//        public virtual DbSet<RefEducationLevel> RefEducationLevels { get; set; } = null!;
//        public virtual DbSet<RefEducationLevelType> RefEducationLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefEducationVerificationMethod> RefEducationVerificationMethods { get; set; } = null!;
//        public virtual DbSet<RefEleducationStaffClassification> RefEleducationStaffClassifications { get; set; } = null!;
//        public virtual DbSet<RefElementaryMiddleAdditional> RefElementaryMiddleAdditionals { get; set; } = null!;
//        public virtual DbSet<RefElemploymentSeparationReason> RefElemploymentSeparationReasons { get; set; } = null!;
//        public virtual DbSet<RefElfacilityLicensingStatus> RefElfacilityLicensingStatuses { get; set; } = null!;
//        public virtual DbSet<RefElfederalFundingType> RefElfederalFundingTypes { get; set; } = null!;
//        public virtual DbSet<RefElgroupSizeStandardMet> RefElgroupSizeStandardMets { get; set; } = null!;
//        public virtual DbSet<RefEllevelOfSpecialization> RefEllevelOfSpecializations { get; set; } = null!;
//        public virtual DbSet<RefEllocalRevenueSource> RefEllocalRevenueSources { get; set; } = null!;
//        public virtual DbSet<RefElotherFederalFundingSource> RefElotherFederalFundingSources { get; set; } = null!;
//        public virtual DbSet<RefEloutcomeMeasurementLevel> RefEloutcomeMeasurementLevels { get; set; } = null!;
//        public virtual DbSet<RefElprofessionalDevelopmentTopicArea> RefElprofessionalDevelopmentTopicAreas { get; set; } = null!;
//        public virtual DbSet<RefElprogramEligibility> RefElprogramEligibilities { get; set; } = null!;
//        public virtual DbSet<RefElprogramEligibilityStatus> RefElprogramEligibilityStatuses { get; set; } = null!;
//        public virtual DbSet<RefElprogramLicenseStatus> RefElprogramLicenseStatuses { get; set; } = null!;
//        public virtual DbSet<RefElserviceProfessionalStaffClassification> RefElserviceProfessionalStaffClassifications { get; set; } = null!;
//        public virtual DbSet<RefElserviceType> RefElserviceTypes { get; set; } = null!;
//        public virtual DbSet<RefElstateRevenueSource> RefElstateRevenueSources { get; set; } = null!;
//        public virtual DbSet<RefEltrainerCoreKnowledgeArea> RefEltrainerCoreKnowledgeAreas { get; set; } = null!;
//        public virtual DbSet<RefEmailType> RefEmailTypes { get; set; } = null!;
//        public virtual DbSet<RefEmergencyOrProvisionalCredentialStatus> RefEmergencyOrProvisionalCredentialStatuses { get; set; } = null!;
//        public virtual DbSet<RefEmployedAfterExit> RefEmployedAfterExits { get; set; } = null!;
//        public virtual DbSet<RefEmployedPriorToEnrollment> RefEmployedPriorToEnrollments { get; set; } = null!;
//        public virtual DbSet<RefEmployedWhileEnrolled> RefEmployedWhileEnrolleds { get; set; } = null!;
//        public virtual DbSet<RefEmployeeBenefit> RefEmployeeBenefits { get; set; } = null!;
//        public virtual DbSet<RefEmploymentContractType> RefEmploymentContractTypes { get; set; } = null!;
//        public virtual DbSet<RefEmploymentLocation> RefEmploymentLocations { get; set; } = null!;
//        public virtual DbSet<RefEmploymentSeparationReason> RefEmploymentSeparationReasons { get; set; } = null!;
//        public virtual DbSet<RefEmploymentSeparationType> RefEmploymentSeparationTypes { get; set; } = null!;
//        public virtual DbSet<RefEmploymentStatus> RefEmploymentStatuses { get; set; } = null!;
//        public virtual DbSet<RefEmploymentStatusWhileEnrolled> RefEmploymentStatusWhileEnrolleds { get; set; } = null!;
//        public virtual DbSet<RefEndOfTermStatus> RefEndOfTermStatuses { get; set; } = null!;
//        public virtual DbSet<RefEnrollmentStatus> RefEnrollmentStatuses { get; set; } = null!;
//        public virtual DbSet<RefEntityType> RefEntityTypes { get; set; } = null!;
//        public virtual DbSet<RefEntryType> RefEntryTypes { get; set; } = null!;
//        public virtual DbSet<RefEnvironmentSetting> RefEnvironmentSettings { get; set; } = null!;
//        public virtual DbSet<RefEradministrativeDataSource> RefEradministrativeDataSources { get; set; } = null!;
//        public virtual DbSet<RefErsruralUrbanContinuumCode> RefErsruralUrbanContinuumCodes { get; set; } = null!;
//        public virtual DbSet<RefExitOrWithdrawalStatus> RefExitOrWithdrawalStatuses { get; set; } = null!;
//        public virtual DbSet<RefExitOrWithdrawalType> RefExitOrWithdrawalTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitiesMandateAuthorityType> RefFacilitiesMandateAuthorityTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitiesMgmtEmergencyType> RefFacilitiesMgmtEmergencyTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitiesPlanType> RefFacilitiesPlanTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityApplicableFederalMandateType> RefFacilityApplicableFederalMandateTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityAuditType> RefFacilityAuditTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityCapitalProgramMgmtType> RefFacilityCapitalProgramMgmtTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityComplianceAgencyType> RefFacilityComplianceAgencyTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityComplianceStatus> RefFacilityComplianceStatuses { get; set; } = null!;
//        public virtual DbSet<RefFacilityConstructionDateType> RefFacilityConstructionDateTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityConstructionMaterialType> RefFacilityConstructionMaterialTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityFederalMandateInterestType> RefFacilityFederalMandateInterestTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityFinancingFeeType> RefFacilityFinancingFeeTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityFurnishingsType> RefFacilityFurnishingsTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityHazardousMaterialsOrCondType> RefFacilityHazardousMaterialsOrCondTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityJointDevelopmentType> RefFacilityJointDevelopmentTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityLeaseAmountCategory> RefFacilityLeaseAmountCategories { get; set; } = null!;
//        public virtual DbSet<RefFacilityLeaseType> RefFacilityLeaseTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityMaintStandardType> RefFacilityMaintStandardTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityMortgageInterestType> RefFacilityMortgageInterestTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityMortgageType> RefFacilityMortgageTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityNaturallyOccurringHazardType> RefFacilityNaturallyOccurringHazardTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityOperationsMgmtType> RefFacilityOperationsMgmtTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitySiteImprovementLocationType> RefFacilitySiteImprovementLocationTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitySiteOutdoorAreaType> RefFacilitySiteOutdoorAreaTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityStandardType> RefFacilityStandardTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityStateOrLocalMandateInterestType> RefFacilityStateOrLocalMandateInterestTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilitySystemOrComponentCondition> RefFacilitySystemOrComponentConditions { get; set; } = null!;
//        public virtual DbSet<RefFacilityUtilityProviderType> RefFacilityUtilityProviderTypes { get; set; } = null!;
//        public virtual DbSet<RefFacilityUtilityType> RefFacilityUtilityTypes { get; set; } = null!;
//        public virtual DbSet<RefFamilyIncomeSource> RefFamilyIncomeSources { get; set; } = null!;
//        public virtual DbSet<RefFederalProgramFundingAllocationType> RefFederalProgramFundingAllocationTypes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAccountBalanceSheetCode> RefFinancialAccountBalanceSheetCodes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAccountCategory> RefFinancialAccountCategories { get; set; } = null!;
//        public virtual DbSet<RefFinancialAccountFundClassification> RefFinancialAccountFundClassifications { get; set; } = null!;
//        public virtual DbSet<RefFinancialAccountProgramCode> RefFinancialAccountProgramCodes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAccountRevenueCode> RefFinancialAccountRevenueCodes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAidApplicationType> RefFinancialAidApplicationTypes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAidAwardStatus> RefFinancialAidAwardStatuses { get; set; } = null!;
//        public virtual DbSet<RefFinancialAidAwardType> RefFinancialAidAwardTypes { get; set; } = null!;
//        public virtual DbSet<RefFinancialAidVeteransBenefitStatus> RefFinancialAidVeteransBenefitStatuses { get; set; } = null!;
//        public virtual DbSet<RefFinancialAidVeteransBenefitType> RefFinancialAidVeteransBenefitTypes { get; set; } = null!;
//        public virtual DbSet<RefFinancialExpenditureFunctionCode> RefFinancialExpenditureFunctionCodes { get; set; } = null!;
//        public virtual DbSet<RefFinancialExpenditureLevelOfInstructionCode> RefFinancialExpenditureLevelOfInstructionCodes { get; set; } = null!;
//        public virtual DbSet<RefFinancialExpenditureObjectCode> RefFinancialExpenditureObjectCodes { get; set; } = null!;
//        public virtual DbSet<RefFirearmType> RefFirearmTypes { get; set; } = null!;
//        public virtual DbSet<RefFoodServiceEligibility> RefFoodServiceEligibilities { get; set; } = null!;
//        public virtual DbSet<RefFoodServiceParticipation> RefFoodServiceParticipations { get; set; } = null!;
//        public virtual DbSet<RefFrequencyOfService> RefFrequencyOfServices { get; set; } = null!;
//        public virtual DbSet<RefFrequencyUnit> RefFrequencyUnits { get; set; } = null!;
//        public virtual DbSet<RefFullTimeStatus> RefFullTimeStatuses { get; set; } = null!;
//        public virtual DbSet<RefGoalMeasurementType> RefGoalMeasurementTypes { get; set; } = null!;
//        public virtual DbSet<RefGoalStatusType> RefGoalStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefGoalsForAttendingAdultEducation> RefGoalsForAttendingAdultEducations { get; set; } = null!;
//        public virtual DbSet<RefGpaWeightedIndicator> RefGpaWeightedIndicators { get; set; } = null!;
//        public virtual DbSet<RefGradeLevel> RefGradeLevels { get; set; } = null!;
//        public virtual DbSet<RefGradeLevelType> RefGradeLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefGradeLevelsApproved> RefGradeLevelsApproveds { get; set; } = null!;
//        public virtual DbSet<RefGradePointAverageDomain> RefGradePointAverageDomains { get; set; } = null!;
//        public virtual DbSet<RefGraduateAssistantIpedsCategory> RefGraduateAssistantIpedsCategories { get; set; } = null!;
//        public virtual DbSet<RefGraduateOrDoctoralExamResultsStatus> RefGraduateOrDoctoralExamResultsStatuses { get; set; } = null!;
//        public virtual DbSet<RefGunFreeSchoolsActReportingStatus> RefGunFreeSchoolsActReportingStatuses { get; set; } = null!;
//        public virtual DbSet<RefHealthInsuranceCoverage> RefHealthInsuranceCoverages { get; set; } = null!;
//        public virtual DbSet<RefHearingScreeningStatus> RefHearingScreeningStatuses { get; set; } = null!;
//        public virtual DbSet<RefHighSchoolDiplomaDistinctionType> RefHighSchoolDiplomaDistinctionTypes { get; set; } = null!;
//        public virtual DbSet<RefHighSchoolDiplomaType> RefHighSchoolDiplomaTypes { get; set; } = null!;
//        public virtual DbSet<RefHighSchoolGraduationRateIndicator> RefHighSchoolGraduationRateIndicators { get; set; } = null!;
//        public virtual DbSet<RefHigherEducationInstitutionAccreditationStatus> RefHigherEducationInstitutionAccreditationStatuses { get; set; } = null!;
//        public virtual DbSet<RefHomelessNighttimeResidence> RefHomelessNighttimeResidences { get; set; } = null!;
//        public virtual DbSet<RefIdeadisabilityType> RefIdeadisabilityTypes { get; set; } = null!;
//        public virtual DbSet<RefIdeadisciplineMethodFirearm> RefIdeadisciplineMethodFirearms { get; set; } = null!;
//        public virtual DbSet<RefIdeaeducationalEnvironmentEc> RefIdeaeducationalEnvironmentEcs { get; set; } = null!;
//        public virtual DbSet<RefIdeaeducationalEnvironmentSchoolAge> RefIdeaeducationalEnvironmentSchoolAges { get; set; } = null!;
//        public virtual DbSet<RefIdeaeligibilityEvaluationCategory> RefIdeaeligibilityEvaluationCategories { get; set; } = null!;
//        public virtual DbSet<RefIdeaenvironmentEl> RefIdeaenvironmentEls { get; set; } = null!;
//        public virtual DbSet<RefIdeaiepstatus> RefIdeaiepstatuses { get; set; } = null!;
//        public virtual DbSet<RefIdeainterimRemoval> RefIdeainterimRemovals { get; set; } = null!;
//        public virtual DbSet<RefIdeainterimRemovalReason> RefIdeainterimRemovalReasons { get; set; } = null!;
//        public virtual DbSet<RefIdeapartCeligibilityCategory> RefIdeapartCeligibilityCategories { get; set; } = null!;
//        public virtual DbSet<RefIepauthorizationDocumentType> RefIepauthorizationDocumentTypes { get; set; } = null!;
//        public virtual DbSet<RefIepeligibilityEvaluationType> RefIepeligibilityEvaluationTypes { get; set; } = null!;
//        public virtual DbSet<RefIepgoalType> RefIepgoalTypes { get; set; } = null!;
//        public virtual DbSet<RefImmunizationType> RefImmunizationTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentBehavior> RefIncidentBehaviors { get; set; } = null!;
//        public virtual DbSet<RefIncidentBehaviorSecondary> RefIncidentBehaviorSecondaries { get; set; } = null!;
//        public virtual DbSet<RefIncidentInjuryType> RefIncidentInjuryTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentLocation> RefIncidentLocations { get; set; } = null!;
//        public virtual DbSet<RefIncidentMultipleOffenseType> RefIncidentMultipleOffenseTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentPerpetratorInjuryType> RefIncidentPerpetratorInjuryTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentPersonRoleType> RefIncidentPersonRoleTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentPersonType> RefIncidentPersonTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentReporterType> RefIncidentReporterTypes { get; set; } = null!;
//        public virtual DbSet<RefIncidentTimeDescriptionCode> RefIncidentTimeDescriptionCodes { get; set; } = null!;
//        public virtual DbSet<RefIncomeCalculationMethod> RefIncomeCalculationMethods { get; set; } = null!;
//        public virtual DbSet<RefIncreasedLearningTimeType> RefIncreasedLearningTimeTypes { get; set; } = null!;
//        public virtual DbSet<RefIndicatorStateDefinedStatus> RefIndicatorStateDefinedStatuses { get; set; } = null!;
//        public virtual DbSet<RefIndicatorStatusCustomType> RefIndicatorStatusCustomTypes { get; set; } = null!;
//        public virtual DbSet<RefIndicatorStatusSubgroupType> RefIndicatorStatusSubgroupTypes { get; set; } = null!;
//        public virtual DbSet<RefIndicatorStatusType> RefIndicatorStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefIndividualizedProgramDateType> RefIndividualizedProgramDateTypes { get; set; } = null!;
//        public virtual DbSet<RefIndividualizedProgramLocation> RefIndividualizedProgramLocations { get; set; } = null!;
//        public virtual DbSet<RefIndividualizedProgramPlannedServiceType> RefIndividualizedProgramPlannedServiceTypes { get; set; } = null!;
//        public virtual DbSet<RefIndividualizedProgramTransitionType> RefIndividualizedProgramTransitionTypes { get; set; } = null!;
//        public virtual DbSet<RefIndividualizedProgramType> RefIndividualizedProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefInstitutionTelephoneType> RefInstitutionTelephoneTypes { get; set; } = null!;
//        public virtual DbSet<RefInstructionCreditType> RefInstructionCreditTypes { get; set; } = null!;
//        public virtual DbSet<RefInstructionLocationType> RefInstructionLocationTypes { get; set; } = null!;
//        public virtual DbSet<RefInstructionalActivityHour> RefInstructionalActivityHours { get; set; } = null!;
//        public virtual DbSet<RefInstructionalStaffContractLength> RefInstructionalStaffContractLengths { get; set; } = null!;
//        public virtual DbSet<RefInstructionalStaffFacultyTenure> RefInstructionalStaffFacultyTenures { get; set; } = null!;
//        public virtual DbSet<RefIntegratedTechnologyStatus> RefIntegratedTechnologyStatuses { get; set; } = null!;
//        public virtual DbSet<RefInternetAccess> RefInternetAccesses { get; set; } = null!;
//        public virtual DbSet<RefInternetAccessTypeInResidence> RefInternetAccessTypeInResidences { get; set; } = null!;
//        public virtual DbSet<RefInternetPerformanceInResidence> RefInternetPerformanceInResidences { get; set; } = null!;
//        public virtual DbSet<RefIpedsOccupationalCategory> RefIpedsOccupationalCategories { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbfinancialPosition> RefIpedsfasbfinancialPositions { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbfunctionalExpense> RefIpedsfasbfunctionalExpenses { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbpellGrantTransaction> RefIpedsfasbpellGrantTransactions { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbrevenue> RefIpedsfasbrevenues { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbrevenueRestriction> RefIpedsfasbrevenueRestrictions { get; set; } = null!;
//        public virtual DbSet<RefIpedsfasbscholarshipsandFellowshipsRevenue> RefIpedsfasbscholarshipsandFellowshipsRevenues { get; set; } = null!;
//        public virtual DbSet<RefIpedsgasbfinancialPosition> RefIpedsgasbfinancialPositions { get; set; } = null!;
//        public virtual DbSet<RefIpedsgasbfunctionalExpense> RefIpedsgasbfunctionalExpenses { get; set; } = null!;
//        public virtual DbSet<RefIpedsgasbrevenue> RefIpedsgasbrevenues { get; set; } = null!;
//        public virtual DbSet<RefIpedsgasbscholarshipsandFellowshipsRevenue> RefIpedsgasbscholarshipsandFellowshipsRevenues { get; set; } = null!;
//        public virtual DbSet<RefIpedsintercollegiateAthleticsExpense> RefIpedsintercollegiateAthleticsExpenses { get; set; } = null!;
//        public virtual DbSet<RefIpedsnaturalExpense> RefIpedsnaturalExpenses { get; set; } = null!;
//        public virtual DbSet<RefIpspprogressReportSchedule> RefIpspprogressReportSchedules { get; set; } = null!;
//        public virtual DbSet<RefIpspprogressReportType> RefIpspprogressReportTypes { get; set; } = null!;
//        public virtual DbSet<RefIso6392language> RefIso6392languages { get; set; } = null!;
//        public virtual DbSet<RefIso6393language> RefIso6393languages { get; set; } = null!;
//        public virtual DbSet<RefIso6395languageFamily> RefIso6395languageFamilies { get; set; } = null!;
//        public virtual DbSet<RefItemResponseTheoryDifficultyCategory> RefItemResponseTheoryDifficultyCategories { get; set; } = null!;
//        public virtual DbSet<RefItemResponseTheoryKappaAlgorithm> RefItemResponseTheoryKappaAlgorithms { get; set; } = null!;
//        public virtual DbSet<RefK12endOfCourseRequirement> RefK12endOfCourseRequirements { get; set; } = null!;
//        public virtual DbSet<RefK12leaTitleIsupportService> RefK12leaTitleIsupportServices { get; set; } = null!;
//        public virtual DbSet<RefK12responsibilityType> RefK12responsibilityTypes { get; set; } = null!;
//        public virtual DbSet<RefK12staffClassification> RefK12staffClassifications { get; set; } = null!;
//        public virtual DbSet<RefLanguage> RefLanguages { get; set; } = null!;
//        public virtual DbSet<RefLanguageUseType> RefLanguageUseTypes { get; set; } = null!;
//        public virtual DbSet<RefLeaFundsTransferType> RefLeaFundsTransferTypes { get; set; } = null!;
//        public virtual DbSet<RefLeaImprovementStatus> RefLeaImprovementStatuses { get; set; } = null!;
//        public virtual DbSet<RefLeaType> RefLeaTypes { get; set; } = null!;
//        public virtual DbSet<RefLearnerActionType> RefLearnerActionTypes { get; set; } = null!;
//        public virtual DbSet<RefLearnerActivityAddToGradeBookFlag> RefLearnerActivityAddToGradeBookFlags { get; set; } = null!;
//        public virtual DbSet<RefLearnerActivityMaximumTimeAllowedUnit> RefLearnerActivityMaximumTimeAllowedUnits { get; set; } = null!;
//        public virtual DbSet<RefLearnerActivityType> RefLearnerActivityTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceAccessApitype> RefLearningResourceAccessApitypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceAccessHazardType> RefLearningResourceAccessHazardTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceAccessModeType> RefLearningResourceAccessModeTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceAccessRightsUrl> RefLearningResourceAccessRightsUrls { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceAuthorType> RefLearningResourceAuthorTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceBookFormatType> RefLearningResourceBookFormatTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceCompetencyAlignmentType> RefLearningResourceCompetencyAlignmentTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceControlFlexibilityType> RefLearningResourceControlFlexibilityTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceDigitalMediaSubType> RefLearningResourceDigitalMediaSubTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceDigitalMediaType> RefLearningResourceDigitalMediaTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceEducationalUse> RefLearningResourceEducationalUses { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceIntendedEndUserRole> RefLearningResourceIntendedEndUserRoles { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceInteractionMode> RefLearningResourceInteractionModes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceInteractivityType> RefLearningResourceInteractivityTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceMediaFeatureType> RefLearningResourceMediaFeatureTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourcePhysicalMediaType> RefLearningResourcePhysicalMediaTypes { get; set; } = null!;
//        public virtual DbSet<RefLearningResourceType> RefLearningResourceTypes { get; set; } = null!;
//        public virtual DbSet<RefLeaveEventType> RefLeaveEventTypes { get; set; } = null!;
//        public virtual DbSet<RefLevelOfInstitution> RefLevelOfInstitutions { get; set; } = null!;
//        public virtual DbSet<RefLicenseExempt> RefLicenseExempts { get; set; } = null!;
//        public virtual DbSet<RefLiteracyAssessment> RefLiteracyAssessments { get; set; } = null!;
//        public virtual DbSet<RefMagnetSpecialProgram> RefMagnetSpecialPrograms { get; set; } = null!;
//        public virtual DbSet<RefMedicalAlertIndicator> RefMedicalAlertIndicators { get; set; } = null!;
//        public virtual DbSet<RefMepEnrollmentType> RefMepEnrollmentTypes { get; set; } = null!;
//        public virtual DbSet<RefMepProjectBased> RefMepProjectBaseds { get; set; } = null!;
//        public virtual DbSet<RefMepProjectType> RefMepProjectTypes { get; set; } = null!;
//        public virtual DbSet<RefMepServiceType> RefMepServiceTypes { get; set; } = null!;
//        public virtual DbSet<RefMepSessionType> RefMepSessionTypes { get; set; } = null!;
//        public virtual DbSet<RefMepStaffCategory> RefMepStaffCategories { get; set; } = null!;
//        public virtual DbSet<RefMethodOfServiceDelivery> RefMethodOfServiceDeliveries { get; set; } = null!;
//        public virtual DbSet<RefMilitaryActiveStudentIndicator> RefMilitaryActiveStudentIndicators { get; set; } = null!;
//        public virtual DbSet<RefMilitaryBranch> RefMilitaryBranches { get; set; } = null!;
//        public virtual DbSet<RefMilitaryConnectedStudentIndicator> RefMilitaryConnectedStudentIndicators { get; set; } = null!;
//        public virtual DbSet<RefMilitaryVeteranStudentIndicator> RefMilitaryVeteranStudentIndicators { get; set; } = null!;
//        public virtual DbSet<RefMultipleIntelligenceType> RefMultipleIntelligenceTypes { get; set; } = null!;
//        public virtual DbSet<RefNaepAspectsOfReading> RefNaepAspectsOfReadings { get; set; } = null!;
//        public virtual DbSet<RefNaepMathComplexityLevel> RefNaepMathComplexityLevels { get; set; } = null!;
//        public virtual DbSet<RefNationalSchoolLunchProgramStatus> RefNationalSchoolLunchProgramStatuses { get; set; } = null!;
//        public virtual DbSet<RefNcescollegeCourseMapCode> RefNcescollegeCourseMapCodes { get; set; } = null!;
//        public virtual DbSet<RefNeedDeterminationMethod> RefNeedDeterminationMethods { get; set; } = null!;
//        public virtual DbSet<RefNeglectedProgramType> RefNeglectedProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefNonPromotionReason> RefNonPromotionReasons { get; set; } = null!;
//        public virtual DbSet<RefNonTraditionalGenderStatus> RefNonTraditionalGenderStatuses { get; set; } = null!;
//        public virtual DbSet<RefNslpstatus> RefNslpstatuses { get; set; } = null!;
//        public virtual DbSet<RefNumberOfDependentsType> RefNumberOfDependentsTypes { get; set; } = null!;
//        public virtual DbSet<RefOnetsococcupationType> RefOnetsococcupationTypes { get; set; } = null!;
//        public virtual DbSet<RefOperationalStatus> RefOperationalStatuses { get; set; } = null!;
//        public virtual DbSet<RefOperationalStatusType> RefOperationalStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefOrganizationElementType> RefOrganizationElementTypes { get; set; } = null!;
//        public virtual DbSet<RefOrganizationIdentificationSystem> RefOrganizationIdentificationSystems { get; set; } = null!;
//        public virtual DbSet<RefOrganizationIdentifierType> RefOrganizationIdentifierTypes { get; set; } = null!;
//        public virtual DbSet<RefOrganizationIndicator> RefOrganizationIndicators { get; set; } = null!;
//        public virtual DbSet<RefOrganizationLocationType> RefOrganizationLocationTypes { get; set; } = null!;
//        public virtual DbSet<RefOrganizationMonitoringNotification> RefOrganizationMonitoringNotifications { get; set; } = null!;
//        public virtual DbSet<RefOrganizationRelationship> RefOrganizationRelationships { get; set; } = null!;
//        public virtual DbSet<RefOrganizationType> RefOrganizationTypes { get; set; } = null!;
//        public virtual DbSet<RefOtherNameType> RefOtherNameTypes { get; set; } = null!;
//        public virtual DbSet<RefOutOfFieldStatus> RefOutOfFieldStatuses { get; set; } = null!;
//        public virtual DbSet<RefOutcomeTimePoint> RefOutcomeTimePoints { get; set; } = null!;
//        public virtual DbSet<RefParaprofessionalQualification> RefParaprofessionalQualifications { get; set; } = null!;
//        public virtual DbSet<RefParticipationStatusAyp> RefParticipationStatusAyps { get; set; } = null!;
//        public virtual DbSet<RefParticipationType> RefParticipationTypes { get; set; } = null!;
//        public virtual DbSet<RefPdactivityApprovedPurpose> RefPdactivityApprovedPurposes { get; set; } = null!;
//        public virtual DbSet<RefPdactivityCreditType> RefPdactivityCreditTypes { get; set; } = null!;
//        public virtual DbSet<RefPdactivityEducationLevelsAddressed> RefPdactivityEducationLevelsAddresseds { get; set; } = null!;
//        public virtual DbSet<RefPdactivityLevel> RefPdactivityLevels { get; set; } = null!;
//        public virtual DbSet<RefPdactivityTargetAudience> RefPdactivityTargetAudiences { get; set; } = null!;
//        public virtual DbSet<RefPdactivityType> RefPdactivityTypes { get; set; } = null!;
//        public virtual DbSet<RefPdaudienceType> RefPdaudienceTypes { get; set; } = null!;
//        public virtual DbSet<RefPddeliveryMethod> RefPddeliveryMethods { get; set; } = null!;
//        public virtual DbSet<RefPdinstructionalDeliveryMode> RefPdinstructionalDeliveryModes { get; set; } = null!;
//        public virtual DbSet<RefPdsessionStatus> RefPdsessionStatuses { get; set; } = null!;
//        public virtual DbSet<RefPersonIdentificationSystem> RefPersonIdentificationSystems { get; set; } = null!;
//        public virtual DbSet<RefPersonIdentifierType> RefPersonIdentifierTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonLocationType> RefPersonLocationTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonRelationshipType> RefPersonRelationshipTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonStatusType> RefPersonStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonTelephoneNumberType> RefPersonTelephoneNumberTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonalInformationType> RefPersonalInformationTypes { get; set; } = null!;
//        public virtual DbSet<RefPersonalInformationVerification> RefPersonalInformationVerifications { get; set; } = null!;
//        public virtual DbSet<RefPescawardLevelType> RefPescawardLevelTypes { get; set; } = null!;
//        public virtual DbSet<RefPopulationServed> RefPopulationServeds { get; set; } = null!;
//        public virtual DbSet<RefPreAndPostTestIndicator> RefPreAndPostTestIndicators { get; set; } = null!;
//        public virtual DbSet<RefPreKeligibleAgesNonIdea> RefPreKeligibleAgesNonIdeas { get; set; } = null!;
//        public virtual DbSet<RefPredominantCalendarSystem> RefPredominantCalendarSystems { get; set; } = null!;
//        public virtual DbSet<RefPrekindergartenEligibility> RefPrekindergartenEligibilities { get; set; } = null!;
//        public virtual DbSet<RefPresentAttendanceCategory> RefPresentAttendanceCategories { get; set; } = null!;
//        public virtual DbSet<RefPrimaryLearningDeviceAccess> RefPrimaryLearningDeviceAccesses { get; set; } = null!;
//        public virtual DbSet<RefPrimaryLearningDeviceAwayFromSchool> RefPrimaryLearningDeviceAwayFromSchools { get; set; } = null!;
//        public virtual DbSet<RefPrimaryLearningDeviceProvider> RefPrimaryLearningDeviceProviders { get; set; } = null!;
//        public virtual DbSet<RefProfessionalDevelopmentFinancialSupport> RefProfessionalDevelopmentFinancialSupports { get; set; } = null!;
//        public virtual DbSet<RefProfessionalEducationJobClassification> RefProfessionalEducationJobClassifications { get; set; } = null!;
//        public virtual DbSet<RefProfessionalTechnicalCredentialType> RefProfessionalTechnicalCredentialTypes { get; set; } = null!;
//        public virtual DbSet<RefProficiencyStatus> RefProficiencyStatuses { get; set; } = null!;
//        public virtual DbSet<RefProficiencyTargetAyp> RefProficiencyTargetAyps { get; set; } = null!;
//        public virtual DbSet<RefProfitStatus> RefProfitStatuses { get; set; } = null!;
//        public virtual DbSet<RefProgramDayLength> RefProgramDayLengths { get; set; } = null!;
//        public virtual DbSet<RefProgramEntryReason> RefProgramEntryReasons { get; set; } = null!;
//        public virtual DbSet<RefProgramExitReason> RefProgramExitReasons { get; set; } = null!;
//        public virtual DbSet<RefProgramGiftedEligibility> RefProgramGiftedEligibilities { get; set; } = null!;
//        public virtual DbSet<RefProgramLengthHoursType> RefProgramLengthHoursTypes { get; set; } = null!;
//        public virtual DbSet<RefProgramSponsorType> RefProgramSponsorTypes { get; set; } = null!;
//        public virtual DbSet<RefProgramType> RefProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefProgressAchievingEnglishLanguageProficiencyIndicatorStatus> RefProgressAchievingEnglishLanguageProficiencyIndicatorStatuses { get; set; } = null!;
//        public virtual DbSet<RefProgressLevel> RefProgressLevels { get; set; } = null!;
//        public virtual DbSet<RefPromotionReason> RefPromotionReasons { get; set; } = null!;
//        public virtual DbSet<RefProofOfResidencyType> RefProofOfResidencyTypes { get; set; } = null!;
//        public virtual DbSet<RefPsEnrollmentAction> RefPsEnrollmentActions { get; set; } = null!;
//        public virtual DbSet<RefPsEnrollmentAwardType> RefPsEnrollmentAwardTypes { get; set; } = null!;
//        public virtual DbSet<RefPsEnrollmentStatus> RefPsEnrollmentStatuses { get; set; } = null!;
//        public virtual DbSet<RefPsEnrollmentType> RefPsEnrollmentTypes { get; set; } = null!;
//        public virtual DbSet<RefPsLepType> RefPsLepTypes { get; set; } = null!;
//        public virtual DbSet<RefPsStudentLevel> RefPsStudentLevels { get; set; } = null!;
//        public virtual DbSet<RefPsexitOrWithdrawalType> RefPsexitOrWithdrawalTypes { get; set; } = null!;
//        public virtual DbSet<RefPsprogramLevel> RefPsprogramLevels { get; set; } = null!;
//        public virtual DbSet<RefPublicSchoolChoiceStatus> RefPublicSchoolChoiceStatuses { get; set; } = null!;
//        public virtual DbSet<RefPublicSchoolResidence> RefPublicSchoolResidences { get; set; } = null!;
//        public virtual DbSet<RefPurposeOfMonitoringVisit> RefPurposeOfMonitoringVisits { get; set; } = null!;
//        public virtual DbSet<RefQrisParticipation> RefQrisParticipations { get; set; } = null!;
//        public virtual DbSet<RefRace> RefRaces { get; set; } = null!;
//        public virtual DbSet<RefReapAlternativeFundingStatus> RefReapAlternativeFundingStatuses { get; set; } = null!;
//        public virtual DbSet<RefReasonDelayTransitionConf> RefReasonDelayTransitionConfs { get; set; } = null!;
//        public virtual DbSet<RefReconstitutedStatus> RefReconstitutedStatuses { get; set; } = null!;
//        public virtual DbSet<RefRecordStatusCreatorEntity> RefRecordStatusCreatorEntities { get; set; } = null!;
//        public virtual DbSet<RefRecordStatusType> RefRecordStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefReferralOutcome> RefReferralOutcomes { get; set; } = null!;
//        public virtual DbSet<RefReimbursementType> RefReimbursementTypes { get; set; } = null!;
//        public virtual DbSet<RefRestructuringAction> RefRestructuringActions { get; set; } = null!;
//        public virtual DbSet<RefRlisProgramUse> RefRlisProgramUses { get; set; } = null!;
//        public virtual DbSet<RefRole> RefRoles { get; set; } = null!;
//        public virtual DbSet<RefRoleStatus> RefRoleStatuses { get; set; } = null!;
//        public virtual DbSet<RefRoleStatusType> RefRoleStatusTypes { get; set; } = null!;
//        public virtual DbSet<RefScedcourseLevel> RefScedcourseLevels { get; set; } = null!;
//        public virtual DbSet<RefScedcourseSubjectArea> RefScedcourseSubjectAreas { get; set; } = null!;
//        public virtual DbSet<RefScheduledWellChildScreening> RefScheduledWellChildScreenings { get; set; } = null!;
//        public virtual DbSet<RefSchoolDangerousStatus> RefSchoolDangerousStatuses { get; set; } = null!;
//        public virtual DbSet<RefSchoolFoodServiceProgram> RefSchoolFoodServicePrograms { get; set; } = null!;
//        public virtual DbSet<RefSchoolImprovementFund> RefSchoolImprovementFunds { get; set; } = null!;
//        public virtual DbSet<RefSchoolImprovementStatus> RefSchoolImprovementStatuses { get; set; } = null!;
//        public virtual DbSet<RefSchoolLevel> RefSchoolLevels { get; set; } = null!;
//        public virtual DbSet<RefSchoolType> RefSchoolTypes { get; set; } = null!;
//        public virtual DbSet<RefScoreMetricType> RefScoreMetricTypes { get; set; } = null!;
//        public virtual DbSet<RefService> RefServices { get; set; } = null!;
//        public virtual DbSet<RefServiceFrequency> RefServiceFrequencies { get; set; } = null!;
//        public virtual DbSet<RefServiceOption> RefServiceOptions { get; set; } = null!;
//        public virtual DbSet<RefSessionType> RefSessionTypes { get; set; } = null!;
//        public virtual DbSet<RefSex> RefSexes { get; set; } = null!;
//        public virtual DbSet<RefSigInterventionType> RefSigInterventionTypes { get; set; } = null!;
//        public virtual DbSet<RefSingleSexClassStatus> RefSingleSexClassStatuses { get; set; } = null!;
//        public virtual DbSet<RefSpaceUseType> RefSpaceUseTypes { get; set; } = null!;
//        public virtual DbSet<RefSpecialEducationAgeGroupTaught> RefSpecialEducationAgeGroupTaughts { get; set; } = null!;
//        public virtual DbSet<RefSpecialEducationExitReason> RefSpecialEducationExitReasons { get; set; } = null!;
//        public virtual DbSet<RefSpecialEducationStaffCategory> RefSpecialEducationStaffCategories { get; set; } = null!;
//        public virtual DbSet<RefStaffCompensationSourceType> RefStaffCompensationSourceTypes { get; set; } = null!;
//        public virtual DbSet<RefStaffPerformanceLevel> RefStaffPerformanceLevels { get; set; } = null!;
//        public virtual DbSet<RefStandardizedAdmissionTest> RefStandardizedAdmissionTests { get; set; } = null!;
//        public virtual DbSet<RefState> RefStates { get; set; } = null!;
//        public virtual DbSet<RefStateAnsicode> RefStateAnsicodes { get; set; } = null!;
//        public virtual DbSet<RefStatePovertyDesignation> RefStatePovertyDesignations { get; set; } = null!;
//        public virtual DbSet<RefStudentEnrollmentAccessType> RefStudentEnrollmentAccessTypes { get; set; } = null!;
//        public virtual DbSet<RefStudentSchoolAffiliationStateDefinedStatus> RefStudentSchoolAffiliationStateDefinedStatuses { get; set; } = null!;
//        public virtual DbSet<RefStudentSupportServiceType> RefStudentSupportServiceTypes { get; set; } = null!;
//        public virtual DbSet<RefSupervisedClinicalExperience> RefSupervisedClinicalExperiences { get; set; } = null!;
//        public virtual DbSet<RefTargetedSupport> RefTargetedSupports { get; set; } = null!;
//        public virtual DbSet<RefTargetedSupportAndImprovementStatus> RefTargetedSupportAndImprovementStatuses { get; set; } = null!;
//        public virtual DbSet<RefTeacherEducationCredentialExam> RefTeacherEducationCredentialExams { get; set; } = null!;
//        public virtual DbSet<RefTeacherEducationExamScoreType> RefTeacherEducationExamScoreTypes { get; set; } = null!;
//        public virtual DbSet<RefTeacherEducationTestCompany> RefTeacherEducationTestCompanies { get; set; } = null!;
//        public virtual DbSet<RefTeacherPrepCompleterStatus> RefTeacherPrepCompleterStatuses { get; set; } = null!;
//        public virtual DbSet<RefTeacherPrepEnrollmentStatus> RefTeacherPrepEnrollmentStatuses { get; set; } = null!;
//        public virtual DbSet<RefTeachingAssignmentRole> RefTeachingAssignmentRoles { get; set; } = null!;
//        public virtual DbSet<RefTeachingCredentialBasis> RefTeachingCredentialBases { get; set; } = null!;
//        public virtual DbSet<RefTeachingCredentialType> RefTeachingCredentialTypes { get; set; } = null!;
//        public virtual DbSet<RefTechnicalAssistanceDeliveryType> RefTechnicalAssistanceDeliveryTypes { get; set; } = null!;
//        public virtual DbSet<RefTechnicalAssistanceType> RefTechnicalAssistanceTypes { get; set; } = null!;
//        public virtual DbSet<RefTechnologyLiteracyStatus> RefTechnologyLiteracyStatuses { get; set; } = null!;
//        public virtual DbSet<RefTelephoneNumberListedStatus> RefTelephoneNumberListedStatuses { get; set; } = null!;
//        public virtual DbSet<RefTelephoneNumberType> RefTelephoneNumberTypes { get; set; } = null!;
//        public virtual DbSet<RefTenureSystem> RefTenureSystems { get; set; } = null!;
//        public virtual DbSet<RefTextComplexitySystem> RefTextComplexitySystems { get; set; } = null!;
//        public virtual DbSet<RefTimeForCompletionUnit> RefTimeForCompletionUnits { get; set; } = null!;
//        public virtual DbSet<RefTitleIiiaccountability> RefTitleIiiaccountabilities { get; set; } = null!;
//        public virtual DbSet<RefTitleIiilanguageInstructionProgramType> RefTitleIiilanguageInstructionProgramTypes { get; set; } = null!;
//        public virtual DbSet<RefTitleIiiprofessionalDevelopmentType> RefTitleIiiprofessionalDevelopmentTypes { get; set; } = null!;
//        public virtual DbSet<RefTitleIindicator> RefTitleIindicators { get; set; } = null!;
//        public virtual DbSet<RefTitleIinstructionalService> RefTitleIinstructionalServices { get; set; } = null!;
//        public virtual DbSet<RefTitleIprogramStaffCategory> RefTitleIprogramStaffCategories { get; set; } = null!;
//        public virtual DbSet<RefTitleIprogramType> RefTitleIprogramTypes { get; set; } = null!;
//        public virtual DbSet<RefTitleIschoolStatus> RefTitleIschoolStatuses { get; set; } = null!;
//        public virtual DbSet<RefTransferOutIndicator> RefTransferOutIndicators { get; set; } = null!;
//        public virtual DbSet<RefTransferReady> RefTransferReadies { get; set; } = null!;
//        public virtual DbSet<RefTribalAffiliation> RefTribalAffiliations { get; set; } = null!;
//        public virtual DbSet<RefTrimesterWhenPrenatalCareBegan> RefTrimesterWhenPrenatalCareBegans { get; set; } = null!;
//        public virtual DbSet<RefTuitionResidencyType> RefTuitionResidencyTypes { get; set; } = null!;
//        public virtual DbSet<RefTuitionUnit> RefTuitionUnits { get; set; } = null!;
//        public virtual DbSet<RefUscitizenshipStatus> RefUscitizenshipStatuses { get; set; } = null!;
//        public virtual DbSet<RefVirtualSchoolStatus> RefVirtualSchoolStatuses { get; set; } = null!;
//        public virtual DbSet<RefVisaType> RefVisaTypes { get; set; } = null!;
//        public virtual DbSet<RefVisionScreeningStatus> RefVisionScreeningStatuses { get; set; } = null!;
//        public virtual DbSet<RefWageCollectionMethod> RefWageCollectionMethods { get; set; } = null!;
//        public virtual DbSet<RefWageVerification> RefWageVerifications { get; set; } = null!;
//        public virtual DbSet<RefWeaponType> RefWeaponTypes { get; set; } = null!;
//        public virtual DbSet<RefWfProgramParticipation> RefWfProgramParticipations { get; set; } = null!;
//        public virtual DbSet<RefWioabarrierstoEmployment> RefWioabarrierstoEmployments { get; set; } = null!;
//        public virtual DbSet<RefWorkbasedLearningOpportunityType> RefWorkbasedLearningOpportunityTypes { get; set; } = null!;
//        public virtual DbSet<RequiredImmunization> RequiredImmunizations { get; set; } = null!;
//        public virtual DbSet<Role> Roles { get; set; } = null!;
//        public virtual DbSet<RoleAttendance> RoleAttendances { get; set; } = null!;
//        public virtual DbSet<RoleAttendanceEvent> RoleAttendanceEvents { get; set; } = null!;
//        public virtual DbSet<RoleStatus> RoleStatuses { get; set; } = null!;
//        public virtual DbSet<Rubric> Rubrics { get; set; } = null!;
//        public virtual DbSet<RubricCriterion> RubricCriteria { get; set; } = null!;
//        public virtual DbSet<RubricCriterionLevel> RubricCriterionLevels { get; set; } = null!;
//        public virtual DbSet<ServiceFrequency> ServiceFrequencies { get; set; } = null!;
//        public virtual DbSet<ServicePlan> ServicePlans { get; set; } = null!;
//        public virtual DbSet<ServiceProvided> ServiceProvideds { get; set; } = null!;
//        public virtual DbSet<ServiceProvider> ServiceProviders { get; set; } = null!;
//        public virtual DbSet<ServiceStaff> ServiceStaffs { get; set; } = null!;
//        public virtual DbSet<ServicesReceived> ServicesReceiveds { get; set; } = null!;
//        public virtual DbSet<StaffCompensation> StaffCompensations { get; set; } = null!;
//        public virtual DbSet<StaffCredential> StaffCredentials { get; set; } = null!;
//        public virtual DbSet<StaffEmployment> StaffEmployments { get; set; } = null!;
//        public virtual DbSet<StaffEvaluation> StaffEvaluations { get; set; } = null!;
//        public virtual DbSet<StaffEvaluationPart> StaffEvaluationParts { get; set; } = null!;
//        public virtual DbSet<StaffExperience> StaffExperiences { get; set; } = null!;
//        public virtual DbSet<StaffProfessionalDevelopmentActivity> StaffProfessionalDevelopmentActivities { get; set; } = null!;
//        public virtual DbSet<StaffTechnicalAssistance> StaffTechnicalAssistances { get; set; } = null!;
//        public virtual DbSet<TeacherEducationCredentialExam> TeacherEducationCredentialExams { get; set; } = null!;
//        public virtual DbSet<TeacherStudentDataLinkExclusion> TeacherStudentDataLinkExclusions { get; set; } = null!;
//        public virtual DbSet<VCedselementDetail> VCedselementDetails { get; set; } = null!;
//        public virtual DbSet<VCedsmapping> VCedsmappings { get; set; } = null!;
//        public virtual DbSet<WorkforceEmploymentQuarterlyDatum> WorkforceEmploymentQuarterlyData { get; set; } = null!;
//        public virtual DbSet<WorkforceProgramParticipantCohort> WorkforceProgramParticipantCohorts { get; set; } = null!;
//        public virtual DbSet<WorkforceProgramParticipation> WorkforceProgramParticipations { get; set; } = null!;

//        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//        {
//            if (!optionsBuilder.IsConfigured)
//            {
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
//                optionsBuilder.UseSqlServer("Data Source=DESKTOP-6CQUBDS\\SQLEXPRESS;Initial Catalog=Autibahn;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
//            }
//        }

//        protected override void OnModelCreating(ModelBuilder modelBuilder)
//        {
//            modelBuilder.Entity<Activity>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ActivityDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Activities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Activity_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.Activities)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Activity_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Activities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Activity_RecordStatus");
//            });

//            modelBuilder.Entity<ActivityRecognition>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ActivityRecognitionId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefActivityRecognitionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ActivityRecognitions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ActivityRecognition_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ActivityRecognitions)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ActivityRecognition_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ActivityRecognitions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ActivityRecognition_RecordStatus");

//                entity.HasOne(d => d.RefActivityRecognitionType)
//                    .WithMany(p => p.ActivityRecognitions)
//                    .HasForeignKey(d => d.RefActivityRecognitionTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ActivityRecognition_RefActivityRecognitionType");
//            });

//            modelBuilder.Entity<AeCourse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseLevelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AeCourses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AeCourse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AeCourses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AeCourse_RecordStatus");

//                entity.HasOne(d => d.RefCareerCluster)
//                    .WithMany(p => p.AeCourses)
//                    .HasForeignKey(d => d.RefCareerClusterId)
//                    .HasConstraintName("FK_AeCourse_RefCareerCluster");
//            });

//            modelBuilder.Entity<AeProvider>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLevelOfInstitutionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AeProviders)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AeProvider_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.AeProviders)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AeProvider_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AeProviders)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AeProvider_RecordStatus");

//                entity.HasOne(d => d.RefLevelOfInstitution)
//                    .WithMany(p => p.AeProviders)
//                    .HasForeignKey(d => d.RefLevelOfInstitutionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AeProvider_RefLevelOfInstitution");
//            });

//            modelBuilder.Entity<AeStaff>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeStaffClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeStaffEmploymentStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.YearsOfPriorAeTeachingExperience).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AeStaffs)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AeStaff_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.AeStaffs)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AeStaff_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AeStaffs)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AeStaff_RecordStatus");

//                entity.HasOne(d => d.RefAeStaffClassification)
//                    .WithMany(p => p.AeStaffs)
//                    .HasForeignKey(d => d.RefAeStaffClassificationId)
//                    .HasConstraintName("FK_AeStaff_RefAeStaffClassification");

//                entity.HasOne(d => d.RefAeStaffEmploymentStatus)
//                    .WithMany(p => p.AeStaffs)
//                    .HasForeignKey(d => d.RefAeStaffEmploymentStatusId)
//                    .HasConstraintName("FK_AeStaff_RefAeStaffEmploymentStatus");
//            });

//            modelBuilder.Entity<AeStudentAcademicRecord>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DiplomaOrCredentialAwardDate)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolDiplomaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalTechnicalCredentialTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AeStudentAcademicRecords)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AeStudentAcademicRecord_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.AeStudentAcademicRecords)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AeStudentAcademicRecord_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AeStudentAcademicRecords)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AeStudentAcademicRecord_RecordStatus");

//                entity.HasOne(d => d.RefHighSchoolDiplomaType)
//                    .WithMany(p => p.AeStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefHighSchoolDiplomaTypeId)
//                    .HasConstraintName("FK_AeStudentAcademicRecord_RefHighSchoolDiplomaType");

//                entity.HasOne(d => d.RefProfessionalTechnicalCredentialType)
//                    .WithMany(p => p.AeStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefProfessionalTechnicalCredentialTypeId)
//                    .HasConstraintName("FK_AeStudentAcademicRecord_RefProfTechnicalCredentialType");
//            });

//            modelBuilder.Entity<AeStudentEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EmploymentNaicsCode)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate Key - Foreign key: OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedAfterExitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedWhileEnrolledId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AeStudentEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AeStudentEmployment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.AeStudentEmployments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AeStudentEmployment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AeStudentEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AeStudentEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEmployedAfterExit)
//                    .WithMany(p => p.AeStudentEmployments)
//                    .HasForeignKey(d => d.RefEmployedAfterExitId)
//                    .HasConstraintName("FK_AeStudentEmployment_RefEmployedAfterExit");

//                entity.HasOne(d => d.RefEmployedWhileEnrolled)
//                    .WithMany(p => p.AeStudentEmployments)
//                    .HasForeignKey(d => d.RefEmployedWhileEnrolledId)
//                    .HasConstraintName("FK_AeStudentEmployment_RefEmployedWhileEnrolled");
//            });

//            modelBuilder.Entity<ApipInteraction>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ApipInteractionId).HasComment("Surrogate Key");

//                entity.Property(e => e.ApipinteractionSequenceNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefApipInteractionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Xml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItemApip)
//                    .WithMany(p => p.ApipInteractions)
//                    .HasForeignKey(d => d.AssessmentItemApipId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ApipInteraction_AssessmentItemApip");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ApipInteractions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ApipInteraction_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ApipInteractions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ApipInteraction_RecordStatus");

//                entity.HasOne(d => d.RefApipInteractionType)
//                    .WithMany(p => p.ApipInteractions)
//                    .HasForeignKey(d => d.RefApipInteractionTypeId)
//                    .HasConstraintName("FK_ApipInteraction_RefApipInteractionType");
//            });

//            modelBuilder.Entity<Application>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ApplicationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Uri).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Applications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Application_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Applications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Application_RecordStatus");
//            });

//            modelBuilder.Entity<Assessment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentId).HasComment("PK");

//                entity.Property(e => e.AssessmentFamilyShortName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFamilyTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentRevisionDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Guid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdentificationSystem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Objective).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Provider).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicSubjectId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPurposeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentTypeChildrenWithDisabilitiesId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ShortName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Assessment_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Assessment_RecordStatus");

//                entity.HasOne(d => d.RefAcademicSubject)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.RefAcademicSubjectId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_RefRefAcademicSubject");

//                entity.HasOne(d => d.RefAssessmentPurpose)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.RefAssessmentPurposeId)
//                    .HasConstraintName("FK_Assessment_RefAssessmentPurpose");

//                entity.HasOne(d => d.RefAssessmentTypeChildrenWithDisabilities)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.RefAssessmentTypeChildrenWithDisabilitiesId)
//                    .HasConstraintName("FK_Assessment_RefAssessmentTypeChildrenWithDisabilities");

//                entity.HasOne(d => d.RefAssessmentType)
//                    .WithMany(p => p.Assessments)
//                    .HasForeignKey(d => d.RefAssessmentTypeId)
//                    .HasConstraintName("FK_Assessment_RefAssessmentType");
//            });

//            modelBuilder.Entity<AssessmentAccommodation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentAccommodations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentAccommodation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentAccommodations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentAccommodation_RecordStatus");

//                entity.HasOne(d => d.RefAccommodationType)
//                    .WithMany(p => p.AssessmentAccommodations)
//                    .HasForeignKey(d => d.RefAccommodationTypeId)
//                    .HasConstraintName("FK_AssessmentAccommodation_RefAccommodationType");

//                entity.HasOne(d => d.RefAssessmentAccommodationCategory)
//                    .WithMany(p => p.AssessmentAccommodations)
//                    .HasForeignKey(d => d.RefAssessmentAccommodationCategoryId)
//                    .HasConstraintName("FK_AssessmentAccommodation_RefAssessmentAccommodationCategory");
//            });

//            modelBuilder.Entity<AssessmentAdministration>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentAdministrationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentAdministrationPeriodDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.AssessmentSecureIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinishDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinishTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentReportingMethodId).HasComment("Foreign key - RefAssessmentReportingMethod");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentAdministrations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentAdministration_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentAdministrations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentAdministration_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentReportingMethod)
//                    .WithMany(p => p.AssessmentAdministrations)
//                    .HasForeignKey(d => d.RefAssessmentReportingMethodId)
//                    .HasConstraintName("FK_AssessmentAdministration_RefAssessmentReportingMethod");
//            });

//            modelBuilder.Entity<AssessmentAdministrationOrganization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentAdministrationOrganizationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentAdministrationId).HasComment("Foreign key - AssessmentAdministration");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAdministration)
//                    .WithMany(p => p.AssessmentAdministrationOrganizations)
//                    .HasForeignKey(d => d.AssessmentAdministrationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentAdministration_Organization_AssessmentAdmin");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentAdministrationOrganizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentAdministration_Organization_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.AssessmentAdministrationOrganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentAdministration_Organization_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentAdministrationOrganizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentAdministration_Organization_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentAssessmentAdministration>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentAssessmentAdministrationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentAdministrationId).HasComment("Foreign key - Assessment Administration");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAdministration)
//                    .WithMany(p => p.AssessmentAssessmentAdministrations)
//                    .HasForeignKey(d => d.AssessmentAdministrationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_AssessmentAdministration_AssessmentAdministration");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.AssessmentAssessmentAdministrations)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_AssessmentAdministration_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentAssessmentAdministrations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Assessment_AssessmentAdministration_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentAssessmentAdministrations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Assessment_AssessmentAdministration_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentAsset>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentAssetId).HasComment("Surrogate Key");

//                entity.Property(e => e.ContentMimeType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ContentUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ContentXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Owner).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PublishedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentAssestIdentifierType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentAssetTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentAsset_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .HasConstraintName("FK_AssessmentAsset_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentAsset_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentAssestIdentifierTypeNavigation)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.RefAssessmentAssestIdentifierType)
//                    .HasConstraintName("FK_AssessmentAsset_RefAssessAssetIDType");

//                entity.HasOne(d => d.RefAssessmentAssetType)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.RefAssessmentAssetTypeId)
//                    .HasConstraintName("FK_AssessmentAsset_RefAssessmentAssetType");

//                entity.HasOne(d => d.RefAssessmentLanguage)
//                    .WithMany(p => p.AssessmentAssets)
//                    .HasForeignKey(d => d.RefAssessmentLanguageId)
//                    .HasConstraintName("FK_AssessmentAsset_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentEldevelopmentalDomain>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentEldevelopmentalDomainId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentEldevelopmentalDomainId).HasComment("Foreign key - RefAssessmentELDevelopmentalDomain");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.AssessmentEldevelopmentalDomains)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_AssessmentELDevelopmentalDomain_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentEldevelopmentalDomains)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentELDevelopmentalDomain_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentEldevelopmentalDomains)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentELDevelopmentalDomain_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentEldevelopmentalDomain)
//                    .WithMany(p => p.AssessmentEldevelopmentalDomains)
//                    .HasForeignKey(d => d.RefAssessmentEldevelopmentalDomainId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_AssessmentELDevelopmentalDomain_RefAssessmentELDevelopmentalDomain");
//            });

//            modelBuilder.Entity<AssessmentForm>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormId).HasComment("Surrogate Key");

//                entity.Property(e => e.AccommodationList).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormAdaptiveIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormAlgorithmIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormAlgorithmVersion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormGuid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.AssessmentItemBankIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemBankName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentSecureIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FormNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IntendedAdministrationEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IntendedAdministrationStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResouce");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PlatformsSupported).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PublishedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.AssessmentForms)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentForm_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentForms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentForm_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.AssessmentForms)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .HasConstraintName("FK_AssessmentForm_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentForms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentForm_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentLanguage)
//                    .WithMany(p => p.AssessmentForms)
//                    .HasForeignKey(d => d.RefAssessmentLanguageId)
//                    .HasConstraintName("FK_AssessmentForm_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentFormAssessmentAsset>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormAssessmentAssetId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentAssetId).HasComment("Foreign key - AssessmentAsset");

//                entity.Property(e => e.AssessmentFormId).HasComment("Foreign key - AssessmentForm");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAsset)
//                    .WithMany(p => p.AssessmentFormAssessmentAssets)
//                    .HasForeignKey(d => d.AssessmentAssetId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentAsset_AssessmentAsset");

//                entity.HasOne(d => d.AssessmentForm)
//                    .WithMany(p => p.AssessmentFormAssessmentAssets)
//                    .HasForeignKey(d => d.AssessmentFormId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentAsset_AssessmentForm");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentFormAssessmentAssets)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentAsset_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentFormAssessmentAssets)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentAsset_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentFormAssessmentFormSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormAssessmentFormSectionId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentFormId).HasComment("Foreign key - AssessmentForm.");

//                entity.Property(e => e.AssessmentFormSectionId).HasComment("Foreign key - AssessmentFormSection");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SequenceNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentForm)
//                    .WithMany(p => p.AssessmentFormAssessmentFormSections)
//                    .HasForeignKey(d => d.AssessmentFormId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentFormSection_AssessmentForm");

//                entity.HasOne(d => d.AssessmentFormSection)
//                    .WithMany(p => p.AssessmentFormAssessmentFormSections)
//                    .HasForeignKey(d => d.AssessmentFormSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentFormSection_FormSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentFormAssessmentFormSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentFormSection_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentFormAssessmentFormSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentForm_AssessmentFormSection_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentFormSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormSectionId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentItemBankIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemBankName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ChildOfFormSectionId).HasComment("Foreign key - AssessmentFormSection (this table)");

//                entity.Property(e => e.Guid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource");

//                entity.Property(e => e.PublishedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentFormSectionIdentificationSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SectionReentry).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SectionSealed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SectionTimeLimit).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.ChildOfFormSection)
//                    .WithMany(p => p.InverseChildOfFormSection)
//                    .HasForeignKey(d => d.ChildOfFormSectionId)
//                    .HasConstraintName("FK_FormSection_FormSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentFormSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentFormSection_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.AssessmentFormSections)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .HasConstraintName("FK_AssessmentFormSection_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentFormSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentFormSection_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentFormSectionIdentificationSystem)
//                    .WithMany(p => p.AssessmentFormSections)
//                    .HasForeignKey(d => d.RefAssessmentFormSectionIdentificationSystemId)
//                    .HasConstraintName("FK_AssessmentFormSection_RefAssessmentFormSectionIDType");
//            });

//            modelBuilder.Entity<AssessmentFormSectionAssessmentAsset>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormSectionAssessmentAssetId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentAssetId).HasComment("Foreign key - AssessmentAsset");

//                entity.Property(e => e.AssessmentFormSectionId).HasComment("Foreign key - AssessmentFormSection");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAsset)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentAssets)
//                    .HasForeignKey(d => d.AssessmentAssetId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentAsset_AssessmentAsset");

//                entity.HasOne(d => d.AssessmentFormSection)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentAssets)
//                    .HasForeignKey(d => d.AssessmentFormSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentAsset_AssessmentFormSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentAssets)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentAsset_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentAssets)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentAsset_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentFormSectionAssessmentItem>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentFormSectionItemId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentFormSectionId).HasComment("Foreign key - AssessmentFormSection");

//                entity.Property(e => e.AssessmentItemId).HasComment("Foreign key - AssessmentItem");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SequenceNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentFormSection)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentItems)
//                    .HasForeignKey(d => d.AssessmentFormSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentItem_FormSection");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentItems)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentItem_AssessmentItem");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentItems)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentItem_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentFormSectionAssessmentItems)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentFormSection_AssessmentItem_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentItem>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentItemId).HasComment("Surrogate Key");

//                entity.Property(e => e.AdaptiveIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AllottedTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormSectionItemFieldTestIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemBankIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemBankName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BodyText).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Difficulty).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DistractorAnalysis).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource");

//                entity.Property(e => e.LinkingItemIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaximumScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNaepAspectsOfReadingId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNaepMathComplexityLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTextComplexitySystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReleaseStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RubricId).HasComment("Foreign key - AssessmentItemRubric");

//                entity.Property(e => e.Stem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Stimulus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexityValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItem_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .HasConstraintName("FK_AssessmentItem_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItem_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentItemType)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RefAssessmentItemTypeId)
//                    .HasConstraintName("FK_AssessmentItem_RefAssessmentItemType");

//                entity.HasOne(d => d.RefNaepAspectsOfReading)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RefNaepAspectsOfReadingId)
//                    .HasConstraintName("FK_AssessmentItem_RefNAEPAspectsOfReading");

//                entity.HasOne(d => d.RefNaepMathComplexityLevel)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RefNaepMathComplexityLevelId)
//                    .HasConstraintName("FK_AssessmentItem_RefNAEPMathComplexityLevel");

//                entity.HasOne(d => d.RefTextComplexitySystem)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RefTextComplexitySystemId)
//                    .HasConstraintName("FK_AssessmentItem_RefTextComplexitySystem");

//                entity.HasOne(d => d.Rubric)
//                    .WithMany(p => p.AssessmentItems)
//                    .HasForeignKey(d => d.RubricId)
//                    .HasConstraintName("FK_AssessmentItem_Rubric");
//            });

//            modelBuilder.Entity<AssessmentItemApip>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AdaptiveIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemId).HasComment("Surrogate Key");

//                entity.Property(e => e.ItemBodyXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ModalFeedbackXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OutcomeDeclarationXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ResponseDeclarationXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ResponseProcessingTemplateUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ResponseProcessingXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TemplateDeclarationXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TemplateProcessingXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentItemApips)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemBody_AssessmentItem1");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemApips)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemApip_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemApips)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemApip_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentItemApipDescription>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItemApip)
//                    .WithMany(p => p.AssessmentItemApipDescriptions)
//                    .HasForeignKey(d => d.AssessmentItemApipId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemApipDescription_AssessmentItemApip");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemApipDescriptions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemApipDescription_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemApipDescriptions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemApipDescription_RecordStatus");

//                entity.HasOne(d => d.RefKeywordTranslationLanguage)
//                    .WithMany(p => p.AssessmentItemApipDescriptions)
//                    .HasForeignKey(d => d.RefKeywordTranslationLanguageId)
//                    .HasConstraintName("FK_AssessmentItemApipDescription_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentItemCharacteristic>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentItemCharacteristicId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentItemId).HasComment("Foreign key - AssessmentItem");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemCharacteristicTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ResponseChoicePattern).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentItemCharacteristics)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ItemCharacteristic_Item");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemCharacteristics)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemCharacteristic_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemCharacteristics)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemCharacteristic_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentItemCharacteristicType)
//                    .WithMany(p => p.AssessmentItemCharacteristics)
//                    .HasForeignKey(d => d.RefAssessmentItemCharacteristicTypeId)
//                    .HasConstraintName("FK_AssessmentItemCharacteristic_RefAssessItemCharType");
//            });

//            modelBuilder.Entity<AssessmentItemPossibleResponse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentItemPossibleResponseId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentItemId).HasComment("Foreign key - AssessmentItem.");

//                entity.Property(e => e.CorrectIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FeedbackMessage).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PossibleResponseOption).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SequenceNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentItemPossibleResponses)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemPossibleResponse_AssessmentItem");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemPossibleResponses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemPossibleResponse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemPossibleResponses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemPossibleResponse_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentItemResponse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentItemResponseId).HasComment("Surrogate Key");

//                entity.Property(e => e.AidSetUsed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentItemId).HasComment("Foreign key - AssessmentItem.");

//                entity.Property(e => e.AssessmentItemResponseDescriptiveFeedbackDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentParticipantSessionId).HasComment("Foreign key - AssessmentParticipantSession");

//                entity.Property(e => e.DescriptiveFeedback).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Duration).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FirstAttemptDuration).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HintCount).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HintIncludedAnswer).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessItemResponseStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemResponseScoreStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProficiencyStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ResultXml).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScaffoldingItemFlag).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SecurityIssue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemResponse_AssessmentItem");

//                entity.HasOne(d => d.AssessmentParticipantSession)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.AssessmentParticipantSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemResponse_AssessmentParticipantSession");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemResponse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemResponse_RecordStatus");

//                entity.HasOne(d => d.RefAssessItemResponseStatus)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.RefAssessItemResponseStatusId)
//                    .HasConstraintName("FK_AssessmentItemResponse_RefAssessItemResponseStatus");

//                entity.HasOne(d => d.RefAssessmentItemResponseScoreStatus)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.RefAssessmentItemResponseScoreStatusId)
//                    .HasConstraintName("FK_AssessmentItemResponse_RefAssessmentItemResponseScoreStatus");

//                entity.HasOne(d => d.RefProficiencyStatus)
//                    .WithMany(p => p.AssessmentItemResponses)
//                    .HasForeignKey(d => d.RefProficiencyStatusId)
//                    .HasConstraintName("FK_AssessmentItemResponse_RefProficiencyStatus");
//            });

//            modelBuilder.Entity<AssessmentItemResponseTheory>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentItemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Difvalue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.KappaValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterA).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterB).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterC).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD1).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD2).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD3).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD4).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD5).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParameterD6).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PointBiserialCorrelationValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefItemResponseTheoryDifficultyCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefItemResponseTheoryKappaAlgorithmId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentItemResponseTheories)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentItemResponseTheory_AssessmentItem");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemResponseTheories)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemResponseTheory_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemResponseTheories)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemResponseTheory_RecordStatus");

//                entity.HasOne(d => d.RefItemResponseTheoryDifficultyCategory)
//                    .WithMany(p => p.AssessmentItemResponseTheories)
//                    .HasForeignKey(d => d.RefItemResponseTheoryDifficultyCategoryId)
//                    .HasConstraintName("FK_AssessmentItemResponseTheory_RefIRTDifficultyCategory");

//                entity.HasOne(d => d.RefItemResponseTheoryKappaAlgorithm)
//                    .WithMany(p => p.AssessmentItemResponseTheories)
//                    .HasForeignKey(d => d.RefItemResponseTheoryKappaAlgorithmId)
//                    .HasConstraintName("FK_AssessmentItemResponseTheory_RefIRTKappaAlgorithm");
//            });

//            modelBuilder.Entity<AssessmentItemRubricCriterionResult>(entity =>
//            {
//                entity.HasKey(e => new { e.AssessmentItemResponseId, e.RubricCriterionLevelId });

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItemResponse)
//                    .WithMany(p => p.AssessmentItemRubricCriterionResults)
//                    .HasForeignKey(d => d.AssessmentItemResponseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessItemRubricCriterionResult_AssessItemResponse");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentItemRubricCriterionResults)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentItemRubricCriterionResult_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentItemRubricCriterionResults)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentItemRubricCriterionResult_RecordStatus");

//                entity.HasOne(d => d.RubricCriterionLevel)
//                    .WithMany(p => p.AssessmentItemRubricCriterionResults)
//                    .HasForeignKey(d => d.RubricCriterionLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessItemRubricCriterionResult_RubricCriterionLevel");
//            });

//            modelBuilder.Entity<AssessmentLanguage>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentLanguageId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("Foreign key - RefLanguage");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.AssessmentLanguages)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentLanguage_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentLanguages)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentLanguage_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentLanguages)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentLanguage_RecordStatus");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.AssessmentLanguages)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentLanguage_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentLevelsForWhichDesigned>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentLevelsForWhichDesignedId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelId).HasComment("Foreign key - RefGradeLevel");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.AssessmentLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_LevelsForWhichDesigned_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentLevelsForWhichDesigned_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentLevelsForWhichDesigned_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevel)
//                    .WithMany(p => p.AssessmentLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.RefGradeLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Assessment_LevelsForWhichDesigned_RefGrade");
//            });

//            modelBuilder.Entity<AssessmentNeedApipContent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentNeedApipContentId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentNeedDirectionsOnlyIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileContentId).HasComment("Foreign key - AssessmentPersonalNeedsProfileContent");

//                entity.Property(e => e.ItemTranslationDisplayLanguageTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.KeywordTranslationLanguageTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReadAtStartPreferenceIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedAlternativeRepresentationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSigningTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSpokenSourcePreferenceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedUserSpokenPreferenceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileContent)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileContentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessNeedApipContent_AssessmentPersonalNeedsProfileContent");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentNeedApipContent_DataCollection");

//                entity.HasOne(d => d.ItemTranslationDisplayLanguageType)
//                    .WithMany(p => p.AssessmentNeedApipContentItemTranslationDisplayLanguageTypes)
//                    .HasForeignKey(d => d.ItemTranslationDisplayLanguageTypeId)
//                    .HasConstraintName("FK_AssessmentNeedApipContent_RefLanguage");

//                entity.HasOne(d => d.KeywordTranslationLanguageType)
//                    .WithMany(p => p.AssessmentNeedApipContentKeywordTranslationLanguageTypes)
//                    .HasForeignKey(d => d.KeywordTranslationLanguageTypeId)
//                    .HasConstraintName("FK_AssessmentNeedApipContent_RefLanguage1");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentNeedApipContent_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedAlternativeRepresentationType)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedAlternativeRepresentationTypeId)
//                    .HasConstraintName("FK_AssessNeedApipContent_RefAssessmentNeedAlternativeRepresent");

//                entity.HasOne(d => d.RefAssessmentNeedSigningType)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedSigningTypeId)
//                    .HasConstraintName("FK_AssessmentNeedApipContent_RefAssessmentNeedSigningType");

//                entity.HasOne(d => d.RefAssessmentNeedSpokenSourcePreferenceType)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedSpokenSourcePreferenceTypeId)
//                    .HasConstraintName("FK_AssessNeedApipContent_RefAssessmentNeedSpokenSourcePref");

//                entity.HasOne(d => d.RefAssessmentNeedUserSpokenPreferenceType)
//                    .WithMany(p => p.AssessmentNeedApipContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedUserSpokenPreferenceTypeId)
//                    .HasConstraintName("FK_AssessNeedApipContent_RefAssessmentNeedUserSpokenPreference");
//            });

//            modelBuilder.Entity<AssessmentNeedApipControl>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentNeedApipControlId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentNeedTimeMultiplier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileControlId).HasComment("Foreign key - AssessmentPersonalNeedsProfileControl");

//                entity.Property(e => e.BackgroundColor)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LineReaderHighlightColor)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OverlayColor)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedIncreasedWhitespacingTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileControl)
//                    .WithMany(p => p.AssessmentNeedApipControls)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileControlId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessNeedApipControl_AssessmentPersonalNeedsProfileControl");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentNeedApipControls)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentNeedApipControl_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentNeedApipControls)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentNeedApipControl_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedIncreasedWhitespacingType)
//                    .WithMany(p => p.AssessmentNeedApipControls)
//                    .HasForeignKey(d => d.RefAssessmentNeedIncreasedWhitespacingTypeId)
//                    .HasConstraintName("FK_AssessNeedApipControl_RefAssessmentNeedIncreasedWhitespacing");
//            });

//            modelBuilder.Entity<AssessmentNeedApipDisplay>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentNeedApipDisplayId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileDisplayId).HasComment("Foreign key - AssessmentPersonalNeedsProfileDisplay");

//                entity.Property(e => e.EncouragementActivateByDefaultIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EncouragementAssignedSupportIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EncouragementSoundFileUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EncouragementTextMessagingString).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaskingActivateByDefaultIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaskingAssignedSupportIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedMaskingTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileDisplay)
//                    .WithMany(p => p.AssessmentNeedApipDisplays)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileDisplayId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessNeedApipDisplay_AssessmentPersonalNeedsProfileDisplay");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentNeedApipDisplays)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentNeedApipDisplay_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentNeedApipDisplays)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentNeedApipDisplay_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedMaskingType)
//                    .WithMany(p => p.AssessmentNeedApipDisplays)
//                    .HasForeignKey(d => d.RefAssessmentNeedMaskingTypeId)
//                    .HasConstraintName("FK_AssessmentNeedApipDisplay_RefAssessmentNeedMaskingType");
//            });

//            modelBuilder.Entity<AssessmentNeedBraille>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentNeedBrailleId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileDisplayId).HasComment("Foreign key - AssessmentPersonNeedProfileDisplay.");

//                entity.Property(e => e.BrailleDotPressure).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfBrailleCells).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleGradeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleMarkTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleStatusCellTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedNumberOfBrailleDotsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedUsageTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileDisplay)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileDisplayId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_AssessmentPersonalNeedsProfileDisplay");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedBrailleGradeType)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RefAssessmentNeedBrailleGradeTypeId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_AssessmentNeedBrailleGradeTypeId");

//                entity.HasOne(d => d.RefAssessmentNeedBrailleMarkType)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RefAssessmentNeedBrailleMarkTypeId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_RefAssessmentNeedBrailleMarkType");

//                entity.HasOne(d => d.RefAssessmentNeedBrailleStatusCellType)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RefAssessmentNeedBrailleStatusCellTypeId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_RefAssessmentNeedBrailleStatusCellType");

//                entity.HasOne(d => d.RefAssessmentNeedNumberOfBrailleDots)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RefAssessmentNeedNumberOfBrailleDotsId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_RefAssessmentNeedNumberOfBrailleDots");

//                entity.HasOne(d => d.RefAssessmentNeedUsageType)
//                    .WithMany(p => p.AssessmentNeedBrailles)
//                    .HasForeignKey(d => d.RefAssessmentNeedUsageTypeId)
//                    .HasConstraintName("FK_AssessmentNeedBraille_RefAssessmentNeedUsageType");
//            });

//            modelBuilder.Entity<AssessmentNeedScreenEnhancement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentNeedScreenEnhancementId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileDisplayId).HasComment("Foreign key - AssessmentPersonalNeedsProfileDisplay");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileScreenEnhancementId).HasComment("Foreign key - AssessmentPersonalNeedsProfileScreenEnhancement");

//                entity.Property(e => e.ForegroundColor)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InvertColorChoice).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Magnification).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileDisplay)
//                    .WithMany(p => p.AssessmentNeedScreenEnhancements)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileDisplayId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessNeedScreenEnhancement_AssessPersonalNeedProfileDisplay");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileScreenEnhancement)
//                    .WithMany(p => p.AssessmentNeedScreenEnhancements)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileScreenEnhancementId)
//                    .HasConstraintName("FK_AssessNeedScreenEnhancement_APNProfileScreenEnhancement");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentNeedScreenEnhancements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentNeedScreenEnhancement_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentNeedScreenEnhancements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentNeedScreenEnhancement_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentParticipantSession>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentParticipantSessionId).HasComment("PK");

//                entity.Property(e => e.ActualEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActualStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormSectionId).HasComment("Foreign key - AssessmentFormSection");

//                entity.Property(e => e.AssessmentParticipantSessionDatabaseName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentParticipantSessionGuid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentRegistrationId).HasComment("Foreign key - AssessmentRegistration");

//                entity.Property(e => e.AssessmentSessionId).HasComment("Foreign key - AssessmentSession");

//                entity.Property(e => e.DeliveryDeviceDetails).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LocationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPlatformTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionSpecialCircumstanceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SecurityIssue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SpecialEventDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TimeAssessed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentFormSection)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.AssessmentFormSectionId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_AssessmentFormSection");

//                entity.HasOne(d => d.AssessmentRegistration)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.AssessmentRegistrationId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_AssessmentRegistration");

//                entity.HasOne(d => d.AssessmentSession)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.AssessmentSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentParticipantSession_AssessmentSession");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_DataCollection");

//                entity.HasOne(d => d.Location)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.LocationId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_Location");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentPlatformType)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.RefAssessmentPlatformTypeId)
//                    .HasConstraintName("FK_AssessParticipantSession_RefAssessmentParticipantSessionPlat");

//                entity.HasOne(d => d.RefAssessmentSessionSpecialCircumstanceType)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.RefAssessmentSessionSpecialCircumstanceTypeId)
//                    .HasConstraintName("FK_AssessParticipantSession_RefAssessmentSessionSpecialCircumst");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.AssessmentParticipantSessions)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentParticipantSessionAccommodation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentParticipantSessionAccommodationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentParticipantSessionId).HasComment("Foreign key - AssessmentParticipantSession");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAccommodation)
//                    .WithMany(p => p.AssessmentParticipantSessionAccommodations)
//                    .HasForeignKey(d => d.AssessmentAccommodationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentParticipantSession_Accommodation_AssessmentAccommodation");

//                entity.HasOne(d => d.AssessmentParticipantSession)
//                    .WithMany(p => p.AssessmentParticipantSessionAccommodations)
//                    .HasForeignKey(d => d.AssessmentParticipantSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessParticSession_Accomodation_AssessParticipantSession");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentParticipantSessionAccommodations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_Accommodation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentParticipantSessionAccommodations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentParticipantSession_Accommodation_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentPerformanceLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPerformanceLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentSubtestId).HasComment("Foreign key - AssessmentSubtest");

//                entity.Property(e => e.DescriptiveFeedback).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Label).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LowerCutScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreMetric).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.UpperCutScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentSubtest)
//                    .WithMany(p => p.AssessmentPerformanceLevels)
//                    .HasForeignKey(d => d.AssessmentSubtestId)
//                    .HasConstraintName("FK_PerformanceLevel_AssessmentSubTest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPerformanceLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPerformanceLevel_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPerformanceLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPerformanceLevel_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedLanguageLearner>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedLanguageLearnerId).HasComment("Surrogate Key");

//                entity.Property(e => e.ActivateByDefault).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentNeedsProfileContentId).HasComment("Foreign key - AssessmentNeedsProfileContent");

//                entity.Property(e => e.AssignedSupport).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedsProfileContentLanguageLearnerTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentNeedsProfileContent)
//                    .WithMany(p => p.AssessmentPersonalNeedLanguageLearners)
//                    .HasForeignKey(d => d.AssessmentNeedsProfileContentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ANPContentLanguageLearner_AssessmentNeedsProfileContent");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedLanguageLearners)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedLanguageLearner_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedLanguageLearners)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedLanguageLearner_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedsProfileContentLanguageLearnerType)
//                    .WithMany(p => p.AssessmentPersonalNeedLanguageLearners)
//                    .HasForeignKey(d => d.RefAssessmentNeedsProfileContentLanguageLearnerTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ANPContentLanguageLearner_RefAssessNeedsProfileContentLang");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedScreenReader>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedScreenReaderId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileDisplayId).HasComment("Foreign key - AssessmentPersonnalNeedsProfileDisplay");

//                entity.Property(e => e.Pitch).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedUsageTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SpeechRate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Volume).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfileDisplay)
//                    .WithMany(p => p.AssessmentPersonalNeedScreenReaders)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileDisplayId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_APNScreenReader_AssessmentPersonalNeedsProfileDisplay");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedScreenReaders)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedScreenReader_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedScreenReaders)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedScreenReader_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedLinkIndicationType)
//                    .WithMany(p => p.AssessmentPersonalNeedScreenReaders)
//                    .HasForeignKey(d => d.RefAssessmentNeedLinkIndicationTypeId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedScreenReader_RefAssessmentNeedLinkIndicationType");

//                entity.HasOne(d => d.RefAssessmentNeedUsageType)
//                    .WithMany(p => p.AssessmentPersonalNeedScreenReaders)
//                    .HasForeignKey(d => d.RefAssessmentNeedUsageTypeId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedScreenReader_RefAssessmentNeedUsage");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedsProfile>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileId).HasComment("Surrogate Key");

//                entity.Property(e => e.ActivateByDefault).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentNeedType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssignedSupportFlag).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfile_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfile_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedsProfileContent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileContentId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileId).HasComment("Foreign key - AssessmentPersonalNeedsProfile");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedHazardTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSupportToolId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefKeywordTranslationsLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfile)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentNeedsProfileContent_AssessmentNeedsProfile");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileContent_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileContent_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentNeedHazardType)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedHazardTypeId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileContent_RefAssessmentNeedHazrd");

//                entity.HasOne(d => d.RefAssessmentNeedSupportTool)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.RefAssessmentNeedSupportToolId)
//                    .HasConstraintName("FK_ApnProfileContent_RefAssessmentNeedSupportTool");

//                entity.HasOne(d => d.RefKeywordTranslationsLanguage)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileContents)
//                    .HasForeignKey(d => d.RefKeywordTranslationsLanguageId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileContent_RefLanguage");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedsProfileControl>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileControlId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileId).HasComment("Foreign key - AssessmentPersonalNeedsProfile");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfile)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileControls)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentNeedsProfileControl_AssessmentNeedsProfile");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileControls)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileControl_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileControls)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileControl_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedsProfileDisplay>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileDisplayId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileId).HasComment("Foreign key - AssessmentPersonalNeedsProfile");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfile)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileDisplays)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentNeedsProfileDisplay_AssessmentNeedsProfile");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileDisplays)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileDisplay_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileDisplays)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileDisplay_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentPersonalNeedsProfileScreenEnhancement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileScreenEnhancementId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentPersonalNeedsProfileId).HasComment("Foreign key - AssessmentPersonalNeedsProfile");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfile)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileScreenEnhancements)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AnpScreenEnhancement_AssessmentNeedsProfile");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileScreenEnhancements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileScreenEnhancement_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentPersonalNeedsProfileScreenEnhancements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentPersonalNeedsProfileScreenEnhancement_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentRegistration>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelToBeAssessedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelWhenAssessedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TestingIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAdministration)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.AssessmentAdministrationId)
//                    .HasConstraintName("FK_AssessmentRegistration_AssessmentAdministration");

//                entity.HasOne(d => d.AssessmentForm)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.AssessmentFormId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentRegirstration_RefAssessmentForm");

//                entity.HasOne(d => d.AssignedByPerson)
//                    .WithMany(p => p.AssessmentRegistrationAssignedByPeople)
//                    .HasForeignKey(d => d.AssignedByPersonId)
//                    .HasConstraintName("FK_AssessmentRegistration_Person");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .HasConstraintName("FK_AssessmentRegistration_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentRegistration_DataCollection");

//                entity.HasOne(d => d.LeaOrganization)
//                    .WithMany(p => p.AssessmentRegistrationLeaOrganizations)
//                    .HasForeignKey(d => d.LeaOrganizationId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefOrganization2");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.AssessmentRegistrationOrganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_AssessmentRegistration_Organization");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.AssessmentRegistrationPeople)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentRegistration_Person2");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentRegistration_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentParticipationIndicator)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RefAssessmentParticipationIndicatorId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefAssessmentParticipationIndicator");

//                entity.HasOne(d => d.RefAssessmentPurpose)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RefAssessmentPurposeId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefAssessmentPurpose");

//                entity.HasOne(d => d.RefAssessmentReasonNotCompleting)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RefAssessmentReasonNotCompletingId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefAssessmentReasonNotCompleting");

//                entity.HasOne(d => d.RefAssessmentReasonNotTested)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RefAssessmentReasonNotTestedId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefAssessmentReasonNotTested");

//                entity.HasOne(d => d.RefAssessmentRegistrationCompletionStatus)
//                    .WithMany(p => p.AssessmentRegistrations)
//                    .HasForeignKey(d => d.RefAssessmentRegistrationCompletionStatusId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefAssessmentRegistrationCompletionStatus");

//                entity.HasOne(d => d.RefGradeLevelToBeAssessed)
//                    .WithMany(p => p.AssessmentRegistrationRefGradeLevelToBeAssesseds)
//                    .HasForeignKey(d => d.RefGradeLevelToBeAssessedId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefGradeLevel1");

//                entity.HasOne(d => d.RefGradeLevelWhenAssessed)
//                    .WithMany(p => p.AssessmentRegistrationRefGradeLevelWhenAssesseds)
//                    .HasForeignKey(d => d.RefGradeLevelWhenAssessedId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefGradeLevel");

//                entity.HasOne(d => d.SchoolOrganization)
//                    .WithMany(p => p.AssessmentRegistrationSchoolOrganizations)
//                    .HasForeignKey(d => d.SchoolOrganizationId)
//                    .HasConstraintName("FK_AssessmentRegistration_RefOrganization1");
//            });

//            modelBuilder.Entity<AssessmentRegistrationAccommodation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentRegistrationAccommodationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentRegistrationId).HasComment("Foreign key - AssessmentRegistration");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAccommodation)
//                    .WithMany(p => p.AssessmentRegistrationAccommodations)
//                    .HasForeignKey(d => d.AssessmentAccommodationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentRegistration_Accommodation_AssessmentAccommodation");

//                entity.HasOne(d => d.AssessmentRegistration)
//                    .WithMany(p => p.AssessmentRegistrationAccommodations)
//                    .HasForeignKey(d => d.AssessmentRegistrationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentRegistration_Registration");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentRegistrationAccommodations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentRegistration_Accommodation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentRegistrationAccommodations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentRegistration_Accommodation_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentResult>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentResultId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentRegistrationId).HasComment("Foreign key - AssessmentRegistration");

//                entity.Property(e => e.AssessmentResultDescriptiveFeedbackDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentResultScoreStandardError).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentSubtestId).HasComment("Foreign key - AssessmentSubtest");

//                entity.Property(e => e.DateCreated).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DateUpdated).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DescriptiveFeedback).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DescriptiveFeedbackSource).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DiagnosticStatement).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DiagnosticStatementSource).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncludedInAypCalculation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalRecommendation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfResponses).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PreliminaryIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPretestOutcomeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentResultDataTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentResultScoreTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEloutcomeMeasurementLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOutcomeTimePointId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScoreMetricTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentRegistration)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.AssessmentRegistrationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResult_AssessmentRegistration");

//                entity.HasOne(d => d.AssessmentSubtest)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.AssessmentSubtestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResult_AssessmentSubTest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentResult_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentResult_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentPretestOutcome)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefAssessmentPretestOutcomeId)
//                    .HasConstraintName("FK_AssessmentResult_RefAssessmentPretestOutcome");

//                entity.HasOne(d => d.RefAssessmentResultDataType)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefAssessmentResultDataTypeId)
//                    .HasConstraintName("FK_AssessmentResult_RefAssessmentResultDataType");

//                entity.HasOne(d => d.RefAssessmentResultScoreType)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefAssessmentResultScoreTypeId)
//                    .HasConstraintName("FK_AssessmentResult_RefAssessmentResultScoreType");

//                entity.HasOne(d => d.RefEloutcomeMeasurementLevel)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefEloutcomeMeasurementLevelId)
//                    .HasConstraintName("FK_AssessmentResult_RefELOutcomeMeasurement");

//                entity.HasOne(d => d.RefOutcomeTimePoint)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefOutcomeTimePointId)
//                    .HasConstraintName("FK_AssessmentResult_RefOutcomeTimePoint");

//                entity.HasOne(d => d.RefScoreMetricType)
//                    .WithMany(p => p.AssessmentResults)
//                    .HasForeignKey(d => d.RefScoreMetricTypeId)
//                    .HasConstraintName("FK_AssessmentResult_RefScoreMetricType");
//            });

//            modelBuilder.Entity<AssessmentResultPerformanceLevel>(entity =>
//            {
//                entity.HasKey(e => e.AssessmentResultPerformanceLevelId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentPerformanceLevelId).HasComment("Foreign key to AssessmentPerformanceLevel.  [Related CEDS Elements: Developmental Evaluation Finding (000315), Early Learning Child Developmental Screening Status (000314)]");

//                entity.Property(e => e.AssessmentResultId).HasComment("Foreign key to AssessmentResult.  [Related CEDS Elements: Developmental Evaluation Finding (000315), Early Learning Child Developmental Screening Status (000314)]");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPerformanceLevel)
//                    .WithMany(p => p.AssessmentResultPerformanceLevels)
//                    .HasForeignKey(d => d.AssessmentPerformanceLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResult_PerformanceLevel_AssessmentPerformanceLevel");

//                entity.HasOne(d => d.AssessmentResult)
//                    .WithMany(p => p.AssessmentResultPerformanceLevels)
//                    .HasForeignKey(d => d.AssessmentResultId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResult_PerformanceLevel_AssessmentResult");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentResultPerformanceLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentResult_PerformanceLevel_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentResultPerformanceLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentResult_PerformanceLevel_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentResultRubricCriterionResult>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentResultRubricCriterionResultId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentResultId).HasComment("Foreign key - AssessmentResult.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RubricCriterionLevelId).HasComment("Foreign key - RubricCriterionLevel.");

//                entity.HasOne(d => d.AssessmentResult)
//                    .WithMany(p => p.AssessmentResultRubricCriterionResults)
//                    .HasForeignKey(d => d.AssessmentResultId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResultRubricCriterionResult_AssessmentResult");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentResultRubricCriterionResults)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentResultRubricCriterionResult_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentResultRubricCriterionResults)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentResultRubricCriterionResult_RecordStatus");

//                entity.HasOne(d => d.RubricCriterionLevel)
//                    .WithMany(p => p.AssessmentResultRubricCriterionResults)
//                    .HasForeignKey(d => d.RubricCriterionLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentResultRubricCriterionResult_RubricCriterionLevel");
//            });

//            modelBuilder.Entity<AssessmentSession>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSessionId).HasComment("Surrogate Key");

//                entity.Property(e => e.ActualEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActualStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AllottedTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentAdministrationId).HasComment("Foreign key - AssessmentAdministration.");

//                entity.Property(e => e.LeaOrganizationId).HasComment("Foreign key - Organization : Local Education Agency");

//                entity.Property(e => e.Location).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionSpecialCircumstanceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScheduledEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScheduledStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchoolOrganizationId).HasComment("Foreign key - Organization : School");

//                entity.Property(e => e.SecurityIssue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SpecialEventDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAdministration)
//                    .WithMany(p => p.AssessmentSessions)
//                    .HasForeignKey(d => d.AssessmentAdministrationId)
//                    .HasConstraintName("FK_AssessmentSession_AssessmentAdministration");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSessions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSession_DataCollection");

//                entity.HasOne(d => d.LeaOrganization)
//                    .WithMany(p => p.AssessmentSessionLeaOrganizations)
//                    .HasForeignKey(d => d.LeaOrganizationId)
//                    .HasConstraintName("FK_AssessmentSession_Organization");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.AssessmentSessionOrganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_AssessmentSession_Organization2");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSessions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSession_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentSessionSpecialCircumstanceType)
//                    .WithMany(p => p.AssessmentSessions)
//                    .HasForeignKey(d => d.RefAssessmentSessionSpecialCircumstanceTypeId)
//                    .HasConstraintName("FK_AssessmentSession_RefAssessmentSessionSpecialCircumstance");

//                entity.HasOne(d => d.RefAssessmentSessionType)
//                    .WithMany(p => p.AssessmentSessions)
//                    .HasForeignKey(d => d.RefAssessmentSessionTypeId)
//                    .HasConstraintName("FK_AssessmentSession_RefAssessmentSessionType");

//                entity.HasOne(d => d.SchoolOrganization)
//                    .WithMany(p => p.AssessmentSessionSchoolOrganizations)
//                    .HasForeignKey(d => d.SchoolOrganizationId)
//                    .HasConstraintName("FK_AssessmentSession_Organization1");
//            });

//            modelBuilder.Entity<AssessmentSessionStaffRole>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSessionStaffRoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentParticipantSessionId).HasComment("Foreign key - AssessmentParticipantSession");

//                entity.Property(e => e.AssessmentSessionId).HasComment("Foreign key - AssessmentSession");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionStaffRoleTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentParticipantSession)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.AssessmentParticipantSessionId)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_AssessmentParticipantSession");

//                entity.HasOne(d => d.AssessmentSession)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.AssessmentSessionId)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_AssessmentSession");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentSessionStaffRoleType)
//                    .WithMany(p => p.AssessmentSessionStaffRoles)
//                    .HasForeignKey(d => d.RefAssessmentSessionStaffRoleTypeId)
//                    .HasConstraintName("FK_AssessmentSessionStaffRole_RefAssessmentSessionStaffRoleType");
//            });

//            modelBuilder.Entity<AssessmentSubtest>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSubtestId).HasComment("Surrogate Key");

//                entity.Property(e => e.Abbreviation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssessmentFormId).HasComment("Foreign key - AssessmentForm");

//                entity.Property(e => e.ChildOfAssessmentSubtestId).HasComment("Foreign key - AssessmentSubtest ");

//                entity.Property(e => e.ContainerOnly).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaximumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OptimalValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PublishedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicSubjectId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPurposeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSubtestIdentifierTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefContentStandardTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScoreMetricTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Rules).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Tier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentForm)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.AssessmentFormId)
//                    .HasConstraintName("FK_AssessmentSubTest_AssessmentForm");

//                entity.HasOne(d => d.ChildOfAssessmentSubtest)
//                    .WithMany(p => p.InverseChildOfAssessmentSubtest)
//                    .HasForeignKey(d => d.ChildOfAssessmentSubtestId)
//                    .HasConstraintName("FK_AssessmentSubtest_AssessmentSubTest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSubtest_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSubtest_RecordStatus");

//                entity.HasOne(d => d.RefAcademicSubject)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RefAcademicSubjectId)
//                    .HasConstraintName("FK_FormSubTest_RefAcademicSubject");

//                entity.HasOne(d => d.RefAssessmentPurpose)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RefAssessmentPurposeId)
//                    .HasConstraintName("FK_AssessmentSubtest_RefAssessmentPurpose");

//                entity.HasOne(d => d.RefAssessmentSubtestIdentifierType)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RefAssessmentSubtestIdentifierTypeId)
//                    .HasConstraintName("FK_AssessmentSubtest_RefAssessSubtestIdentifierType");

//                entity.HasOne(d => d.RefContentStandardType)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RefContentStandardTypeId)
//                    .HasConstraintName("FK_AssessmentSubtest_RefContentStandardType");

//                entity.HasOne(d => d.RefScoreMetricType)
//                    .WithMany(p => p.AssessmentSubtests)
//                    .HasForeignKey(d => d.RefScoreMetricTypeId)
//                    .HasConstraintName("FK_AssessmentSubtest_RefScoreMetricType");
//            });

//            modelBuilder.Entity<AssessmentSubtestAssessmentItem>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSubtestItemId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentItemId).HasComment("Foreign key - AssessmentItem");

//                entity.Property(e => e.AssessmentSubtestId).HasComment("Foreign key - AssessmentSubtest");

//                entity.Property(e => e.ItemWeightCorrect).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ItemWeightIncorrect).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ItemWeightNotAttempted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItem)
//                    .WithMany(p => p.AssessmentSubtestAssessmentItems)
//                    .HasForeignKey(d => d.AssessmentItemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtestAI_AssessmentItem");

//                entity.HasOne(d => d.AssessmentSubtest)
//                    .WithMany(p => p.AssessmentSubtestAssessmentItems)
//                    .HasForeignKey(d => d.AssessmentSubtestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtestItems_AssessmentSubTest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSubtestAssessmentItems)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSubtest_AssessmentItem_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSubtestAssessmentItems)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSubtest_AssessmentItem_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentSubtestCompetencyDefinition>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentSubtest)
//                    .WithMany(p => p.AssessmentSubtestCompetencyDefinitions)
//                    .HasForeignKey(d => d.AssessmentSubtestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtest_CompetencyDefinition_AssessmentSubtest");

//                entity.HasOne(d => d.CompetencyDefinition)
//                    .WithMany(p => p.AssessmentSubtestCompetencyDefinitions)
//                    .HasForeignKey(d => d.CompetencyDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtest_CompetencyDefinition_CompetencyDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSubtestCompetencyDefinitions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSubtest_CompetencyDefinition_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSubtestCompetencyDefinitions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSubtest_CompetencyDefinition_RecordStatus");
//            });

//            modelBuilder.Entity<AssessmentSubtestEldevelopmentalDomain>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSubtestEldevelopmentalDomainId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentSubtestId).HasComment("Foreign key - Assessment");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentEldevelopmentalDomainId).HasComment("Foreign key - RefAssessmentELDevelopmentalDomain");

//                entity.HasOne(d => d.AssessmentSubtest)
//                    .WithMany(p => p.AssessmentSubtestEldevelopmentalDomains)
//                    .HasForeignKey(d => d.AssessmentSubtestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtest_AssessmentELDevelopmentalDomain_AssessmentSubtest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSubtestEldevelopmentalDomains)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSubtestELDevelopmentalDomain_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSubtestEldevelopmentalDomains)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSubtestELDevelopmentalDomain_RecordStatus");

//                entity.HasOne(d => d.RefAssessmentEldevelopmentalDomain)
//                    .WithMany(p => p.AssessmentSubtestEldevelopmentalDomains)
//                    .HasForeignKey(d => d.RefAssessmentEldevelopmentalDomainId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtest_AssessmentELDevelopmentalDomain_RefAssessmentELDevelopmentalDomain");
//            });

//            modelBuilder.Entity<AssessmentSubtestLevelsForWhichDesigned>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssessmentSubtestLevelsForWhichDesignedId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentSubTestId).HasComment("Foreign key - AssessmentSubtest");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeId).HasComment("Foreign key - RefGradeLevel");

//                entity.HasOne(d => d.AssessmentSubTest)
//                    .WithMany(p => p.AssessmentSubtestLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.AssessmentSubTestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtestLevelsForWhichDesigned_AssessmentSubtest");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AssessmentSubtestLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AssessmentSubtestLevelsForWhichDesigned_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AssessmentSubtestLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AssessmentSubtestLevelsForWhichDesigned_RecordStatus");

//                entity.HasOne(d => d.RefGrade)
//                    .WithMany(p => p.AssessmentSubtestLevelsForWhichDesigneds)
//                    .HasForeignKey(d => d.RefGradeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AssessmentSubtestLevelsForWhichDesigned_RefGrade");
//            });

//            modelBuilder.Entity<Authentication>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AuthenticationId).HasComment("Surrogate Key");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdentityProviderName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdentityProviderUri).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LoginIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Authentications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Authentication_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Authentications)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Authentication_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Authentications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Authentication_RecordStatus");
//            });

//            modelBuilder.Entity<Authorization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AuthorizationId).HasComment("Surrogate Key");

//                entity.Property(e => e.ApplicationId).HasComment("Foreign key - Application");

//                entity.Property(e => e.ApplicationRoleName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Application)
//                    .WithMany(p => p.Authorizations)
//                    .HasForeignKey(d => d.ApplicationId)
//                    .HasConstraintName("FK_Authorization_Application");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Authorizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Authorization_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Authorizations)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Authorization_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Authorizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Authorization_RecordStatus");
//            });

//            modelBuilder.Entity<AuthorizationDocument>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.AuthorizationDocuments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_AuthorizationDocument_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.AuthorizationDocuments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_AuthorizationDocument_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.AuthorizationDocuments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_AuthorizationDocument_RecordStatus");

//                entity.HasOne(d => d.RefAuthorizerType)
//                    .WithMany(p => p.AuthorizationDocuments)
//                    .HasForeignKey(d => d.RefAuthorizerTypeId)
//                    .HasConstraintName("FK_AuthorizationDocument_RefAuthorizerType");
//            });

//            modelBuilder.Entity<BuildingSpace>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_BuildingSpace_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_BuildingSpace_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_BuildingSpace_RecordStatus");

//                entity.HasOne(d => d.RefBuildingAdministrativeSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingAdministrativeSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingAdministrativeSpaceType");

//                entity.HasOne(d => d.RefBuildingArtSpecialtySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingArtSpecialtySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingArtSpecialtySpaceType");

//                entity.HasOne(d => d.RefBuildingAssemblySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingAssemblySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingAssemblySpaceType");

//                entity.HasOne(d => d.RefBuildingBasicClassroomDesignType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingBasicClassroomDesignTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingBasicClassroomDesignType");

//                entity.HasOne(d => d.RefBuildingCareerTechEducationSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingCareerTechEducationSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingCareerTechEducationSpaceType");

//                entity.HasOne(d => d.RefBuildingCirculationSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingCirculationSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingCirculationSpaceType");

//                entity.HasOne(d => d.RefBuildingFoodServiceSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingFoodServiceSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingFoodServiceSpaceType");

//                entity.HasOne(d => d.RefBuildingFullServiceKitchenType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingFullServiceKitchenTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingFullServiceKitchenType");

//                entity.HasOne(d => d.RefBuildingIndoorAthleticOrPhysEdSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingIndoorAthleticOrPhysEdSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingIndoorAthleticOrPhysEdSpaceType");

//                entity.HasOne(d => d.RefBuildingLibMediaCenterSpecialtySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingLibMediaCenterSpecialtySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingLibMediaCenterSpecialtySpaceType");

//                entity.HasOne(d => d.RefBuildingOperationsOrMaintSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingOperationsOrMaintSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingOperationsOrMaintSpaceType");

//                entity.HasOne(d => d.RefBuildingOutdoorAthleticOrPhysEdSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingOutdoorAthleticOrPhysEdSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingOutdoorAthleticOrPhysEdSpaceType");

//                entity.HasOne(d => d.RefBuildingOutdoorOrNonathleticSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingOutdoorOrNonathleticSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingOutdoorOrNonathleticSpaceType");

//                entity.HasOne(d => d.RefBuildingPerformingArtsSpecialtySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingPerformingArtsSpecialtySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingPerformingArtsSpecialtySpaceType");

//                entity.HasOne(d => d.RefBuildingScienceSpecialtySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingScienceSpecialtySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingScienceSpecialtySpaceType");

//                entity.HasOne(d => d.RefBuildingSpaceDesignType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingSpaceDesignTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingSpaceDesignType");

//                entity.HasOne(d => d.RefBuildingSpecEdSpecialtySpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingSpecEdSpecialtySpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingSpecEdSpecialtySpaceType");

//                entity.HasOne(d => d.RefBuildingStudentSupportSpaceType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefBuildingStudentSupportSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefBuildingStudentSupportSpaceType");

//                entity.HasOne(d => d.RefSpaceUseType)
//                    .WithMany(p => p.BuildingSpaces)
//                    .HasForeignKey(d => d.RefSpaceUseTypeId)
//                    .HasConstraintName("FK_BuildingSpace_RefSpaceUseType");
//            });

//            modelBuilder.Entity<BuildingSpaceUtilization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.BuildingSpace)
//                    .WithMany(p => p.BuildingSpaceUtilizations)
//                    .HasForeignKey(d => d.BuildingSpaceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_BuildingSpaceUtilization_BuildingSpace");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.BuildingSpaceUtilizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_BuildingSpaceUtilization_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.BuildingSpaceUtilizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_BuildingSpaceUtilization_RecordStatus");

//                entity.HasOne(d => d.RefBuildingCommunityUseSpaceType)
//                    .WithMany(p => p.BuildingSpaceUtilizations)
//                    .HasForeignKey(d => d.RefBuildingCommunityUseSpaceTypeId)
//                    .HasConstraintName("FK_BuildingSpaceUtilization_RefBuildingCommunityUseSpaceType");

//                entity.HasOne(d => d.RefBuildingInstructionalSpaceFactorType)
//                    .WithMany(p => p.BuildingSpaceUtilizations)
//                    .HasForeignKey(d => d.RefBuildingInstructionalSpaceFactorTypeId)
//                    .HasConstraintName("FK_BuildingSpaceUtilization_RefBuildingInstructionalSpaceFactorType");
//            });

//            modelBuilder.Entity<BuildingSystemCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.BuildingSystemComponent)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.BuildingSystemComponentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_BuildingSystemCategory_BuildingSystemComponent");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_BuildingSystemCategory_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RecordStatus");

//                entity.HasOne(d => d.RefBuildingAirDistributionSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingAirDistributionSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingAirDistributionSystemType");

//                entity.HasOne(d => d.RefBuildingCommMgmtComponentSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingCommMgmtComponentSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingCommMgmtComponentSystemType");

//                entity.HasOne(d => d.RefBuildingCoolingGenerationSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingCoolingGenerationSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingCoolingGenerationSystemType");

//                entity.HasOne(d => d.RefBuildingElectricalSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingElectricalSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingElectricalSystemType");

//                entity.HasOne(d => d.RefBuildingFireProtectionSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingFireProtectionSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingFireProtectionSystemType");

//                entity.HasOne(d => d.RefBuildingHeatingGenerationSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingHeatingGenerationSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingHeatingGenerationSystemType");

//                entity.HasOne(d => d.RefBuildingHvacsystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingHvacsystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingHVACSystemType");

//                entity.HasOne(d => d.RefBuildingMechanicalConveyingSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingMechanicalConveyingSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingMechanicalConveyingSystemType");

//                entity.HasOne(d => d.RefBuildingMechanicalSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingMechanicalSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingMechanicalSystemType");

//                entity.HasOne(d => d.RefBuildingPlumbingSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingPlumbingSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingPlumbingSystemType");

//                entity.HasOne(d => d.RefBuildingSecuritySystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingSecuritySystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingSecuritySystemType");

//                entity.HasOne(d => d.RefBuildingSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingSystemType");

//                entity.HasOne(d => d.RefBuildingTechnologyWiringSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingTechnologyWiringSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingTechnologyWiringSystemType");

//                entity.HasOne(d => d.RefBuildingVerticalTransportationSystemType)
//                    .WithMany(p => p.BuildingSystemCategories)
//                    .HasForeignKey(d => d.RefBuildingVerticalTransportationSystemTypeId)
//                    .HasConstraintName("FK_BuildingSystemCategory_RefBuildingVerticalTransportationSystemType");
//            });

//            modelBuilder.Entity<BuildingSystemComponent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.InstallationDate).IsFixedLength();

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.BuildingSystemComponents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_BuildingSystemComponent_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.BuildingSystemComponents)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_BuildingSystemComponent_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.BuildingSystemComponents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_BuildingSystemComponent_RecordStatus");

//                entity.HasOne(d => d.RefFacilityFurnishingsType)
//                    .WithMany(p => p.BuildingSystemComponents)
//                    .HasForeignKey(d => d.RefFacilityFurnishingsTypeId)
//                    .HasConstraintName("FK_BuildingSystemComponent_RefFacilityFurnishingsType");

//                entity.HasOne(d => d.RefFacilitySystemOrComponentCondition)
//                    .WithMany(p => p.BuildingSystemComponents)
//                    .HasForeignKey(d => d.RefFacilitySystemOrComponentConditionId)
//                    .HasConstraintName("FK_BuildingSystemComponent_RefFacilitySystemOrComponentCondition");
//            });

//            modelBuilder.Entity<BuildingSystemComponentService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.BuildingSystemComponent)
//                    .WithMany(p => p.BuildingSystemComponentServices)
//                    .HasForeignKey(d => d.BuildingSystemComponentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_BuildingSystemComponentService_BuildingSystemComponent");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.BuildingSystemComponentServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_BuildingSystemComponentService_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.BuildingSystemComponentServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_BuildingSystemComponentService_RecordStatus");
//            });

//            modelBuilder.Entity<Classroom>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ClassroomIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LocationId).HasComment("Foreign key - Location");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Classrooms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Classroom_DataCollection");

//                entity.HasOne(d => d.Location)
//                    .WithMany(p => p.Classrooms)
//                    .HasForeignKey(d => d.LocationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Classroom_Location");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Classrooms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Classroom_RecordStatus");
//            });

//            modelBuilder.Entity<CompetencyDefAssociation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AssociatedEntityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CompetencyDefAssociationIdentifierUri).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ConnectionCitation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DestinationNodeName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DestinationNodeUri).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OriginNodeName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OriginNodeUri).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCompetencyDefAssociationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceCompetencyAlignmentTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Weight).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencyDefinition)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.CompetencyDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefAssociation_CompetencyDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencyDefAssociation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencyDefAssociation_RecordStatus");

//                entity.HasOne(d => d.RefCompetencyDefAssociationType)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.RefCompetencyDefAssociationTypeId)
//                    .HasConstraintName("FK_CFItemAssociation_RefCompetencyDefAssociation");

//                entity.HasOne(d => d.RefEntityType)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.RefEntityTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefAssociation_RefAssociatedEntityType");

//                entity.HasOne(d => d.RefLearningResourceCompetencyAlignmentType)
//                    .WithMany(p => p.CompetencyDefAssociations)
//                    .HasForeignKey(d => d.RefLearningResourceCompetencyAlignmentTypeId)
//                    .HasConstraintName("FK_CompetencyDefAssociation_RefLearningResourceCompetencyAlignmentType");
//            });

//            modelBuilder.Entity<CompetencyDefEducationLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEducationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencyDefinition)
//                    .WithMany(p => p.CompetencyDefEducationLevels)
//                    .HasForeignKey(d => d.CompetencyDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefEducationLevel_CompetencyDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencyDefEducationLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencyDefEducationLevel_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencyDefEducationLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencyDefEducationLevel_RecordStatus");

//                entity.HasOne(d => d.RefEducationLevel)
//                    .WithMany(p => p.CompetencyDefEducationLevels)
//                    .HasForeignKey(d => d.RefEducationLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefEducationLevel_RefEducationLevel");
//            });

//            modelBuilder.Entity<CompetencyDefinition>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CompetencyDefParentCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CompetencyDefParentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CompetencyDefParentUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CompetencyDefSequence).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ConceptKeyword).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ConceptTerm).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CurrentVersionIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.License).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Notes).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PreviousVersionIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBloomsTaxonomyDomainId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCompetencyDefNodeAccessibilityProfileId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCompetencyDefTestabilityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMultipleIntelligenceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ShortName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Statement).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexityMaximumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexityMinimumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexitySystem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Type).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypeUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypicalAgeRange).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypicalAgeRangeMaximum).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypicalAgeRangeMinimum).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Url).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ValidEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ValidStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.ChildOfCompetencyDefinition)
//                    .WithMany(p => p.InverseChildOfCompetencyDefinition)
//                    .HasForeignKey(d => d.ChildOfCompetencyDefinitionId)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencyDefinition");

//                entity.HasOne(d => d.CompetencyFramework)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.CompetencyFrameworkId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencyFramework");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencyDefinition_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencyDefinition_RecordStatus");

//                entity.HasOne(d => d.RefBloomsTaxonomyDomain)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RefBloomsTaxonomyDomainId)
//                    .HasConstraintName("FK_CompetencyDefinition_RefBloomsTaxonomyDomain");

//                entity.HasOne(d => d.RefCompetencyDefNodeAccessibilityProfile)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RefCompetencyDefNodeAccessibilityProfileId)
//                    .HasConstraintName("FK_CompetencyDefinition_RefCompetencyDefinitionNodeAccessibilityProfile");

//                entity.HasOne(d => d.RefCompetencyDefTestabilityType)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RefCompetencyDefTestabilityTypeId)
//                    .HasConstraintName("FK_CompetencyDefinition_RefCompetencyDefinitionTestabilityType");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .HasConstraintName("FK_CompetencyDefinition_RefLanguage");

//                entity.HasOne(d => d.RefMultipleIntelligenceType)
//                    .WithMany(p => p.CompetencyDefinitions)
//                    .HasForeignKey(d => d.RefMultipleIntelligenceTypeId)
//                    .HasConstraintName("FK_CompetencyDefinition_RefMultipleIntelligenceType");
//            });

//            modelBuilder.Entity<CompetencyDefinitionCompetencySet>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencyDefinition)
//                    .WithMany(p => p.CompetencyDefinitionCompetencySets)
//                    .HasForeignKey(d => d.CompetencyDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencySet_CompetencyDefinition");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.CompetencyDefinitionCompetencySets)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencySet_CompetencySet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencyDefinitionCompetencySets)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencySet_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencyDefinitionCompetencySets)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencyDefinition_CompetencySet_RecordStatus");
//            });

//            modelBuilder.Entity<CompetencyFramework>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CompetencyFrameworkSourceUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ValidEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencyFrameworks)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencyFramework_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencyFrameworks)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencyFramework_RecordStatus");

//                entity.HasOne(d => d.RefCompetencyFrameworkPublicationStatus)
//                    .WithMany(p => p.CompetencyFrameworks)
//                    .HasForeignKey(d => d.RefCompetencyFrameworkPublicationStatusId)
//                    .HasConstraintName("FK_CompetencyFramework_RefCompetencyFrameworkPublicationStatus");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.CompetencyFrameworks)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .HasConstraintName("FK_CompetencyFramework_RefLanguage");
//            });

//            modelBuilder.Entity<CompetencySet>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CompetencySetId).HasComment("Surrogate key");

//                entity.Property(e => e.ChildOfCompetencySet).HasComment("Foreign key - CompentencySet (this table)");

//                entity.Property(e => e.CompletionCriteriaThreshold).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCompletionCriteriaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.ChildOfCompetencySetNavigation)
//                    .WithMany(p => p.InverseChildOfCompetencySetNavigation)
//                    .HasForeignKey(d => d.ChildOfCompetencySet)
//                    .HasConstraintName("FK_CompetencySet_LearningStandardItemSet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencySets)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencySet_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencySets)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencySet_RecordStatus");

//                entity.HasOne(d => d.RefCompletionCriteria)
//                    .WithMany(p => p.CompetencySets)
//                    .HasForeignKey(d => d.RefCompletionCriteriaId)
//                    .HasConstraintName("FK_CompetencySet_RefCompetencySetCompletionCriteria");
//            });

//            modelBuilder.Entity<CompetencySetRubric>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.CompetencySetRubrics)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencySet_Rubric_CompetencySet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencySetRubrics)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencySet_Rubric_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencySetRubrics)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencySet_Rubric_RecordStatus");

//                entity.HasOne(d => d.Rubric)
//                    .WithMany(p => p.CompetencySetRubrics)
//                    .HasForeignKey(d => d.RubricId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencySet_Rubric_Rubric");
//            });

//            modelBuilder.Entity<CompetencySetRubricCriterion>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.CompetencySetRubricCriteria)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencySet_RubricCriterion_CompetencySet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CompetencySetRubricCriteria)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CompetencySet_RubricCriterion_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CompetencySetRubricCriteria)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CompetencySet_RubricCriterion_RecordStatus");

//                entity.HasOne(d => d.RubricCriterion)
//                    .WithMany(p => p.CompetencySetRubricCriteria)
//                    .HasForeignKey(d => d.RubricCriterionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CompetencySet_RubricCriterion_RubricCriterion");
//            });

//            modelBuilder.Entity<CoreKnowledgeArea>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CoreKnowledgeAreaId).HasComment("Surrogate key");

//                entity.Property(e => e.ProfessionalDevelopmentActivityId).HasComment("Foreign key - RefProfessionalDevelopmentActivity");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCoreKnowledgeAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CoreKnowledgeAreas)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CoreKnowledgeArea_DataCollection");

//                entity.HasOne(d => d.ProfessionalDevelopmentActivity)
//                    .WithMany(p => p.CoreKnowledgeAreas)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentActivityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CoreKnowledgeArea_ProfessionalDevelopmentActivity");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CoreKnowledgeAreas)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CoreKnowledgeArea_RecordStatus");

//                entity.HasOne(d => d.RefCoreKnowledgeArea)
//                    .WithMany(p => p.CoreKnowledgeAreas)
//                    .HasForeignKey(d => d.RefCoreKnowledgeAreaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CoreKnowledgeArea_RefCoreKnowledgeArea");
//            });

//            modelBuilder.Entity<Course>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CertificationDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalMinutes).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseApplicableEducationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditUnitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseLevelCharacteristicsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScedsequenceOfCourse).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SubjectAbbreviation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Course_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Course_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Course_RecordStatus");

//                entity.HasOne(d => d.RefCourseApplicableEducationLevel)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.RefCourseApplicableEducationLevelId)
//                    .HasConstraintName("FK_Course_RefCourseApplicableEducationLevel");

//                entity.HasOne(d => d.RefCourseCreditUnit)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.RefCourseCreditUnitId)
//                    .HasConstraintName("FK_Course_RefCourseCreditUnit");

//                entity.HasOne(d => d.RefCourseLevelCharacteristics)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.RefCourseLevelCharacteristicsId)
//                    .HasConstraintName("FK_Course_RefCourseLevelCharacteristic");

//                entity.HasOne(d => d.RefInstructionLanguage)
//                    .WithMany(p => p.Courses)
//                    .HasForeignKey(d => d.RefInstructionLanguageId)
//                    .HasConstraintName("FK_Course_RefLanguage");
//            });

//            modelBuilder.Entity<CourseSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AvailableCarnegieUnitCredit).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseId).HasComment("Foreign key - Course.");

//                entity.Property(e => e.MaximumCapacity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarSessionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdvancedPlacementCourseCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionDeliveryModeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditTypeEarnedId).HasComment("Foreign key - RefCreditTypeEarned");

//                entity.Property(e => e.RefInstructionLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSingleSexClassStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RelatedCompetencyDefinitions).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TimeRequiredForCompletion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.VirtualIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.CourseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSection_Course");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CourseSection_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .HasConstraintName("FK_CourseSection_OrganizationCalendarSession");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_CourseSection_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CourseSection_RecordStatus");

//                entity.HasOne(d => d.RefAdvancedPlacementCourseCode)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RefAdvancedPlacementCourseCodeId)
//                    .HasConstraintName("FK_CourseSection_RefAdvancedPlacementCourseCodeId");

//                entity.HasOne(d => d.RefCourseSectionDeliveryMode)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RefCourseSectionDeliveryModeId)
//                    .HasConstraintName("FK_CourseSection_RefCourseSectionDeliveryMode");

//                entity.HasOne(d => d.RefCreditTypeEarned)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RefCreditTypeEarnedId)
//                    .HasConstraintName("FK_CourseSection_RefCreditTypeEarned");

//                entity.HasOne(d => d.RefInstructionLanguage)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RefInstructionLanguageId)
//                    .HasConstraintName("FK_CourseSection_RefLanguage");

//                entity.HasOne(d => d.RefSingleSexClassStatus)
//                    .WithMany(p => p.CourseSections)
//                    .HasForeignKey(d => d.RefSingleSexClassStatusId)
//                    .HasConstraintName("FK_CourseSection_RefCourseSectionSingleSexClassStatus");
//            });

//            modelBuilder.Entity<CourseSectionAssessmentReporting>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseSectionAssessmentReportingId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionAssessmentReportingMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.CourseSectionAssessmentReportings)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .HasConstraintName("FK_CourseSectionAssessmentReporting_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CourseSectionAssessmentReportings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CourseSectionAssessmentReporting_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CourseSectionAssessmentReportings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CourseSectionAssessmentReporting_RecordStatus");

//                entity.HasOne(d => d.RefCourseSectionAssessmentReportingMethod)
//                    .WithMany(p => p.CourseSectionAssessmentReportings)
//                    .HasForeignKey(d => d.RefCourseSectionAssessmentReportingMethodId)
//                    .HasConstraintName("FK_CourseSectionAssessmentReporting_RefCSAssessmentReportMethod");
//            });

//            modelBuilder.Entity<CourseSectionLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.CourseSectionLevels)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSectionLevel_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CourseSectionLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CourseSectionLevel_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CourseSectionLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CourseSectionLevel_RecordStatus");

//                entity.HasOne(d => d.RefCourseLevelType)
//                    .WithMany(p => p.CourseSectionLevels)
//                    .HasForeignKey(d => d.RefCourseLevelTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSectionLevel_RefCourseLevelType");
//            });

//            modelBuilder.Entity<CourseSectionLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseSectionLocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.ClassroomId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionLocationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Classroom)
//                    .WithMany(p => p.CourseSectionLocations)
//                    .HasForeignKey(d => d.ClassroomId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSectionLocation_Classroom");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.CourseSectionLocations)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSectionLocation_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CourseSectionLocations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CourseSectionLocation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CourseSectionLocations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CourseSectionLocation_RecordStatus");

//                entity.HasOne(d => d.RefInstructionLocationType)
//                    .WithMany(p => p.CourseSectionLocations)
//                    .HasForeignKey(d => d.RefInstructionLocationTypeId)
//                    .HasConstraintName("FK_CourseSectionLocation_RefInstructionLocationType");
//            });

//            modelBuilder.Entity<CourseSectionSchedule>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseSectionScheduleId).HasComment("Surrogate Key");

//                entity.Property(e => e.ClassBeginningTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ClassEndingTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ClassMeetingDays).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ClassPeriod).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TimeDayIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.CourseSectionSchedules)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CourseSectionSchedule_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CourseSectionSchedules)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CourseSectionSchedule_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CourseSectionSchedules)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CourseSectionSchedule_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialAward>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CredentialAwardEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialAwardStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionAward_CredentialDefinition");

//                entity.HasOne(d => d.CredentialIssuer)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.CredentialIssuerId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialAward_CredentialIssuer");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialAward_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_CredentialAward_Organization");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.PersonId)
//                    .HasConstraintName("FK_CredentialAward_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialAwards)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialAward_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialAwardCredit>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialAward)
//                    .WithMany(p => p.CredentialAwardCredits)
//                    .HasForeignKey(d => d.CredentialAwardId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialAwardCredit_CredentialAward");

//                entity.HasOne(d => d.CredentialCriteriaCourse)
//                    .WithMany(p => p.CredentialAwardCredits)
//                    .HasForeignKey(d => d.CredentialCriteriaCourseId)
//                    .HasConstraintName("FK_CredentialAwardCredit_CredentialCriteriaCourse");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialAwardCredits)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialAwardCredit_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.CredentialAwardCredits)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_CredentialAwardCredit_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialAwardCredits)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialAwardCredit_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialAwardEvidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentResult)
//                    .WithMany(p => p.CredentialAwardEvidences)
//                    .HasForeignKey(d => d.AssessmentResultId)
//                    .HasConstraintName("FK_CredentialAwardEvidence_AssessmentResult");

//                entity.HasOne(d => d.CredentialAward)
//                    .WithMany(p => p.CredentialAwardEvidences)
//                    .HasForeignKey(d => d.CredentialAwardId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialAwardEvidence_CredentialAward");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialAwardEvidences)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialAwardEvidence_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialAwardEvidences)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialAwardEvidence_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialCriteriaCourse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.CredentialCriteriaCourses)
//                    .HasForeignKey(d => d.CourseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialCriteriaCourse_Course");

//                entity.HasOne(d => d.CredentialDefCriteria)
//                    .WithMany(p => p.CredentialCriteriaCourses)
//                    .HasForeignKey(d => d.CredentialDefCriteriaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefCriteriaCourse_CredentialDefCriteria");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialCriteriaCourses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialCriteriaCourse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialCriteriaCourses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialCriteriaCourse_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialDefAgent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialDefAgentRoleTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCtdlorganizationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefAgent_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_CredentialDefAgent_Organization");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.PersonId)
//                    .HasConstraintName("FK_CredentialDefAgent_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefAgent_RecordStatus");

//                entity.HasOne(d => d.RefCredentialDefAgentRoleType)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.RefCredentialDefAgentRoleTypeId)
//                    .HasConstraintName("FK_CredentialDefAgent_RefCredentialDefAgentRoleType");

//                entity.HasOne(d => d.RefCtdlorganizationType)
//                    .WithMany(p => p.CredentialDefAgents)
//                    .HasForeignKey(d => d.RefCtdlorganizationTypeId)
//                    .HasConstraintName("FK_CredentialDefAgent_RefCTDLOrganizationType");
//            });

//            modelBuilder.Entity<CredentialDefAgentCredential>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialDefAgent)
//                    .WithMany(p => p.CredentialDefAgentCredentials)
//                    .HasForeignKey(d => d.CredentialDefAgentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefAgentCredential_CredentialDefAgent");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialDefAgentCredentials)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionDefAgentCredentialDefinition_CredentialDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefAgentCredentials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefAgentCredential_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefAgentCredentials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefAgentCredential_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialDefCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Category).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CategorySystem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialDefCategories)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionDefCategory_CredentialDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefCategories)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefCategory_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefCategories)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefCategory_RecordStatus");
//            });

//            modelBuilder.Entity<CredentialDefCriterion>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Criteria).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CriteriaUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EstimatedDuration)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaximumDuration)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumAge).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumDuration)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialDefAssessMethodTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.CredentialDefCriteria)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .HasConstraintName("FK_CredentialDefCriteria_CompetencySet");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialDefCriteria)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionDefCriteria_CredentialDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefCriteria)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefCriteria_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefCriteria)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefCriteria_RecordStatus");

//                entity.HasOne(d => d.RefCredentialDefAssessMethodType)
//                    .WithMany(p => p.CredentialDefCriteria)
//                    .HasForeignKey(d => d.RefCredentialDefAssessMethodTypeId)
//                    .HasConstraintName("FK_CredentialDefCriteria_RefCredentialDefAssessMethodType");
//            });

//            modelBuilder.Entity<CredentialDefIdentifier>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialIdentifierSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialDefIdentifiers)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionDefIdentifier_CredentialDefinition");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefIdentifiers)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefIdentifier_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefIdentifiers)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefIdentifier_RecordStatus");

//                entity.HasOne(d => d.RefCredentialIdentifierSystem)
//                    .WithMany(p => p.CredentialDefIdentifiers)
//                    .HasForeignKey(d => d.RefCredentialIdentifierSystemId)
//                    .HasConstraintName("FK_CredentialDefIdentifier_RefCredentialDefIdentifierSystem");
//            });

//            modelBuilder.Entity<CredentialDefinition>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AlternateName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialDefDateEffective).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialDefinitionTerminalDegreeIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialNaicsindustryType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EmploymentNaicscode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ImageUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.JurisdictionRegion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.JurisdictionRegionException).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Keywords).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialDefIntendedPurposeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialDefStatusTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialDefVerificationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCtdlaudienceLevelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOnetsococcupationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ValidationMethodDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialDefinition_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialDefinition_RecordStatus");

//                entity.HasOne(d => d.RefCareerCluster)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCareerClusterId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCareerCluster");

//                entity.HasOne(d => d.RefCipCode)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCipCodeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCipCode");

//                entity.HasOne(d => d.RefCredentialDefIntendedPurposeType)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCredentialDefIntendedPurposeTypeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCredentialDefinitionIntendedPurposeType");

//                entity.HasOne(d => d.RefCredentialDefStatusType)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCredentialDefStatusTypeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCredentialDefinitionStatusType");

//                entity.HasOne(d => d.RefCredentialDefVerificationType)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCredentialDefVerificationTypeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCredentialDefinitionVerificationType");

//                entity.HasOne(d => d.RefCtdlaudienceLevelType)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefCtdlaudienceLevelTypeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefCTDLAudienceLevelType");

//                entity.HasOne(d => d.RefOnetsococcupationType)
//                    .WithMany(p => p.CredentialDefinitions)
//                    .HasForeignKey(d => d.RefOnetsococcupationTypeId)
//                    .HasConstraintName("FK_CredentialDefinition_RefONETSOCOccupationType");
//            });

//            modelBuilder.Entity<CredentialIssuer>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RevocationListUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialIssuers)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialIssuer_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.CredentialIssuers)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialIssuer_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialIssuers)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialIssuer_RecordStatus");

//                entity.HasOne(d => d.RefCtdlorganizationType)
//                    .WithMany(p => p.CredentialIssuers)
//                    .HasForeignKey(d => d.RefCtdlorganizationTypeId)
//                    .HasConstraintName("FK_CredentialIssuer_RefCTDLOrganizationType");
//            });

//            modelBuilder.Entity<CredentialOffered>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CredentialOfferedEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialOfferedStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CredentialDefinition)
//                    .WithMany(p => p.CredentialOffereds)
//                    .HasForeignKey(d => d.CredentialDefinitionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialDefinitionOffered_CredentialDefinition");

//                entity.HasOne(d => d.CredentialIssuer)
//                    .WithMany(p => p.CredentialOffereds)
//                    .HasForeignKey(d => d.CredentialIssuerId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CredentialOffered_CredentialIssuer");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CredentialOffereds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CredentialOffered_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CredentialOffereds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CredentialOffered_RecordStatus");
//            });

//            modelBuilder.Entity<CteCourse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AvailableCarnegieUnitCredit).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CoreAcademicCourse).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseAlignedWithStandards).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseDepartmentName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolCourseRequirement).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseGpaapplicabilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditTypeEarnedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCurriculumFrameworkTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseSubjectAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScedcourseCode)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.CourseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CteCourse_Course");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CteCourse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CteCourse_RecordStatus");

//                entity.HasOne(d => d.RefAdditionalCreditType)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefAdditionalCreditTypeId)
//                    .HasConstraintName("FK_CteCourse_RefAdditionalCreditType");

//                entity.HasOne(d => d.RefCareerCluster)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefCareerClusterId)
//                    .HasConstraintName("FK_CteCourse_RefCareerCluster");

//                entity.HasOne(d => d.RefCourseGpaapplicability)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefCourseGpaapplicabilityId)
//                    .HasConstraintName("FK_CteCourse_RefCourseGpaApplicability");

//                entity.HasOne(d => d.RefCreditTypeEarned)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefCreditTypeEarnedId)
//                    .HasConstraintName("FK_CteCourse_RefCreditTypeEarned");

//                entity.HasOne(d => d.RefCurriculumFrameworkType)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefCurriculumFrameworkTypeId)
//                    .HasConstraintName("FK_CteCourse_RefCurriculumFrameworkType");

//                entity.HasOne(d => d.RefScedcourseLevel)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefScedcourseLevelId)
//                    .HasConstraintName("FK_CteCourse_RefSCEDCourseLevel");

//                entity.HasOne(d => d.RefScedcourseSubjectArea)
//                    .WithMany(p => p.CteCourses)
//                    .HasForeignKey(d => d.RefScedcourseSubjectAreaId)
//                    .HasConstraintName("FK_CteCourse_RefSCEDCourseSubjectArea");
//            });

//            modelBuilder.Entity<CteStudentAcademicRecord>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CreditsAttemptedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditsEarnedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DiplomaOrCredentialAwardDate)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalTechnicalCredentialTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.CteStudentAcademicRecords)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_CteStudentAcademicRecord_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.CteStudentAcademicRecords)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_CteStudentAcademicRecord_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.CteStudentAcademicRecords)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_CteStudentAcademicRecord_RecordStatus");

//                entity.HasOne(d => d.RefProfessionalTechnicalCredentialType)
//                    .WithMany(p => p.CteStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefProfessionalTechnicalCredentialTypeId)
//                    .HasConstraintName("FK_CteStudentAcademicRecord_RefProfessionalTechnicalCredential");
//            });

//            modelBuilder.Entity<DataCollection>(entity =>
//            {
//                entity.Property(e => e.DataCollectionAcademicSchoolYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DataCollectionCloseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DataCollectionDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DataCollectionName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DataCollectionOpenDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DataCollectionSchoolYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDataCollectionStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SourceSystemDataCollectionIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SourceSystemName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.RefDataCollectionStatus)
//                    .WithMany(p => p.DataCollections)
//                    .HasForeignKey(d => d.RefDataCollectionStatusId)
//                    .HasConstraintName("FK_DataCollection_RefDataCollectionStatus");
//            });

//            modelBuilder.Entity<EarlyChildhoodCredential>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonCredentialId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodCredentialId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.EarlyChildhoodCredentials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_EarlyChildhoodCredential_DataCollection");

//                entity.HasOne(d => d.PersonCredential)
//                    .WithMany(p => p.EarlyChildhoodCredentials)
//                    .HasForeignKey(d => d.PersonCredentialId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_EarlyChildhoodCredential_PersonCredential");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.EarlyChildhoodCredentials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_EarlyChildhoodCredential_RecordStatus");

//                entity.HasOne(d => d.RefEarlyChildhoodCredential)
//                    .WithMany(p => p.EarlyChildhoodCredentials)
//                    .HasForeignKey(d => d.RefEarlyChildhoodCredentialId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_EarlyChildhoodCredential_RefEarlyChildhoodCredential");
//            });

//            modelBuilder.Entity<EarlyChildhoodProgramTypeOffered>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EarlyChildhoodProgramTypeOfferedId).HasComment("Surrogate Key");

//                entity.Property(e => e.InclusiveSettingIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCommunityBasedTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodProgramEnrollmentTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.EarlyChildhoodProgramTypeOffereds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_EarlyChildhoodProgramTypeOffered_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.EarlyChildhoodProgramTypeOffereds)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_EarlyChildhoodProgramTypeOffered_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.EarlyChildhoodProgramTypeOffereds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_EarlyChildhoodProgramTypeOffered_RecordStatus");

//                entity.HasOne(d => d.RefCommunityBasedType)
//                    .WithMany(p => p.EarlyChildhoodProgramTypeOffereds)
//                    .HasForeignKey(d => d.RefCommunityBasedTypeId)
//                    .HasConstraintName("FK_EarlyChildhoodProgramTypeOffered_RefCommunityBasedType");

//                entity.HasOne(d => d.RefEarlyChildhoodProgramEnrollmentType)
//                    .WithMany(p => p.EarlyChildhoodProgramTypeOffereds)
//                    .HasForeignKey(d => d.RefEarlyChildhoodProgramEnrollmentTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ECProgramTypeOffered_RefEarlyChildhoodProgramType");
//            });

//            modelBuilder.Entity<ElchildDemographic>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FosterCareEndDate).HasComment("CEDS Element has been removed.");

//                entity.Property(e => e.FosterCareStartDate).HasComment("CEDS Element has been removed.");

//                entity.Property(e => e.OtherRaceIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildDemographics)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildDemographic_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildDemographics)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildDemographic_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildDemographics)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildDemographic_RecordStatus");
//            });

//            modelBuilder.Entity<ElchildDevelopmentalAssessment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefChildDevelopmentalScreeningStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEvaluationFindingId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildDevelopmentalAssessments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildDevelopmentalAssessment_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildDevelopmentalAssessments)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildDevelopmentalAssessment_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildDevelopmentalAssessments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildDevelopmentalAssessment_RecordStatus");

//                entity.HasOne(d => d.RefChildDevelopmentalScreeningStatus)
//                    .WithMany(p => p.ElchildDevelopmentalAssessments)
//                    .HasForeignKey(d => d.RefChildDevelopmentalScreeningStatusId)
//                    .HasConstraintName("FK_ELChildDevelopmentalAssessment_RefChildDevelopmentalScreeningStatus");

//                entity.HasOne(d => d.RefDevelopmentalEvaluationFinding)
//                    .WithMany(p => p.ElchildDevelopmentalAssessments)
//                    .HasForeignKey(d => d.RefDevelopmentalEvaluationFindingId)
//                    .HasConstraintName("FK_ELChildDevelopmentalAssessment_RefDevelopmentalEvaluationFinding");
//            });

//            modelBuilder.Entity<ElchildHealth>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScheduledWellChildScreeningId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WellChildScreeningReceivedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildHealths)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildHealth_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildHealths)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildHealth_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildHealths)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildHealth_RecordStatus");

//                entity.HasOne(d => d.RefScheduledWellChildScreening)
//                    .WithMany(p => p.ElchildHealths)
//                    .HasForeignKey(d => d.RefScheduledWellChildScreeningId)
//                    .HasConstraintName("FK_ELChildHealth_RefScheduledWellChildScreening");
//            });

//            modelBuilder.Entity<ElchildIndividualizedProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.IndividualizedProgramId).HasComment("Foreign key - IndividualizedProgram");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaiepstatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeapartCeligibilityCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_IndividualizedProgram");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_RecordStatus");

//                entity.HasOne(d => d.RefIdeaiepstatus)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIdeaiepstatusId)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_RefIDEAIEPStatus");

//                entity.HasOne(d => d.RefIdeapartCeligibilityCategory)
//                    .WithMany(p => p.ElchildIndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIdeapartCeligibilityCategoryId)
//                    .HasConstraintName("FK_ELChildIndividualizedProgram_RefIDEAPartCEligibilityCategory");
//            });

//            modelBuilder.Entity<ElchildOutcomeSummary>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CosprogressAindicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CosprogressBindicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CosprogressCindicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CosratingAid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CosratingBid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CosratingCid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CosratingA)
//                    .WithMany(p => p.ElchildOutcomeSummaryCosratingAs)
//                    .HasForeignKey(d => d.CosratingAid)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_COSRatingA");

//                entity.HasOne(d => d.CosratingB)
//                    .WithMany(p => p.ElchildOutcomeSummaryCosratingBs)
//                    .HasForeignKey(d => d.CosratingBid)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_COSRatingB");

//                entity.HasOne(d => d.CosratingC)
//                    .WithMany(p => p.ElchildOutcomeSummaryCosratingCs)
//                    .HasForeignKey(d => d.CosratingCid)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_COSRatingC");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildOutcomeSummaries)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildOutcomeSummaries)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildOutcomeSummaries)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildOutcomeSummary_RecordStatus");
//            });

//            modelBuilder.Entity<ElchildProgramEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ExpirationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramEligibilityStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildProgramEligibilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildProgramEligibility_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ElchildProgramEligibilities)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildProgramEligibility_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildProgramEligibilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildProgramEligibility_RecordStatus");
//            });

//            modelBuilder.Entity<ElchildService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Eceapeligibility).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EligibilityPriorityPoints).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodServicesOfferedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodServicesReceivedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElserviceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServiceDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildService_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ElchildServices)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildService_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildService_RecordStatus");

//                entity.HasOne(d => d.RefEarlyChildhoodServicesOffered)
//                    .WithMany(p => p.ElchildServiceRefEarlyChildhoodServicesOffereds)
//                    .HasForeignKey(d => d.RefEarlyChildhoodServicesOfferedId)
//                    .HasConstraintName("FK_ELChildService_RefEarlyChildhoodServicesOffered");

//                entity.HasOne(d => d.RefEarlyChildhoodServicesReceived)
//                    .WithMany(p => p.ElchildServiceRefEarlyChildhoodServicesReceiveds)
//                    .HasForeignKey(d => d.RefEarlyChildhoodServicesReceivedId)
//                    .HasConstraintName("FK_ELChildService_RefEarlyChildhoodServicesReceived");

//                entity.HasOne(d => d.RefElserviceType)
//                    .WithMany(p => p.ElchildServices)
//                    .HasForeignKey(d => d.RefElserviceTypeId)
//                    .HasConstraintName("FK_ELChildService_RefELServiceType");
//            });

//            modelBuilder.Entity<ElchildServicesApplication>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ApplicationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElapplicationIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElapplicationRequiredDocument).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElenrollmentApplicationDocumentIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElenrollmentApplicationDocumentName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElenrollmentApplicationDocumentType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElenrollmentApplicationVerificationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElenrollmentApplicationVerificationReasonType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SitePreferenceRank).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildServicesApplications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildServicesApplication_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ElchildServicesApplications)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildServicesApplication_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildServicesApplications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildServicesApplication_RecordStatus");
//            });

//            modelBuilder.Entity<ElchildTransitionPlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DateOfTransitionPlan).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdeapartCtoPartBnotificationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdeapartCtoPartBnotificationOptOutDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IdeapartCtoPartBnotificationOptOutIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IndividualizedProgramId).HasComment("Foreign key - IndividualizedProgram");

//                entity.Property(e => e.PartB619potentialEligibilityInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReasonDelayTransitionConfId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TransitionConferenceDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TransitionConferenceDeclineDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElchildTransitionPlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELChildTransitionPlan_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.ElchildTransitionPlans)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .HasConstraintName("FK_ELChildIDEA_IndividualizedProgram");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElchildTransitionPlans)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELChildIDEA_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElchildTransitionPlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELChildTransitionPlan_RecordStatus");

//                entity.HasOne(d => d.RefReasonDelayTransitionConf)
//                    .WithMany(p => p.ElchildTransitionPlans)
//                    .HasForeignKey(d => d.RefReasonDelayTransitionConfId)
//                    .HasConstraintName("FK_ELChildIDEA_RefReasonDelayTransitionConf");
//            });

//            modelBuilder.Entity<ElclassSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DaysAvailablePerWeek).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElprogramAnnualOperatingWeeks).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GroupSize).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HoursAvailablePerDay).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LanguageTranslationPolicy).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEnvironmentSettingId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceOptionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElclassSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELClassSection_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElclassSections)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELClassSection_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElclassSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELClassSection_RecordStatus");

//                entity.HasOne(d => d.RefEnvironmentSetting)
//                    .WithMany(p => p.ElclassSections)
//                    .HasForeignKey(d => d.RefEnvironmentSettingId)
//                    .HasConstraintName("FK_ELClassSection_RefEnvironmentSetting");

//                entity.HasOne(d => d.RefServiceOption)
//                    .WithMany(p => p.ElclassSections)
//                    .HasForeignKey(d => d.RefServiceOptionId)
//                    .HasConstraintName("FK_ELClassSection_RefServiceOption");
//            });

//            modelBuilder.Entity<ElclassSectionService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElclassSectionServiceId).HasComment("Surrogate Key");

//                entity.Property(e => e.ElclassGroupCurriculumType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OldestAgeServed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElgroupSizeStandardMetId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFrequencyOfServiceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServesChildrenWithSpecialNeeds).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.YoungestAgeServed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElclassSectionServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELClassSectionService_DataCollection");

//                entity.HasOne(d => d.ElclassSection)
//                    .WithMany(p => p.ElclassSectionServices)
//                    .HasForeignKey(d => d.ElclassSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELClassSectionService_ELClassSection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElclassSectionServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELClassSectionService_RecordStatus");

//                entity.HasOne(d => d.RefElgroupSizeStandardMet)
//                    .WithMany(p => p.ElclassSectionServices)
//                    .HasForeignKey(d => d.RefElgroupSizeStandardMetId)
//                    .HasConstraintName("FK_ELClassSectionService_RefELGroupSizeStandardMet");

//                entity.HasOne(d => d.RefFrequencyOfService)
//                    .WithMany(p => p.ElclassSectionServices)
//                    .HasForeignKey(d => d.RefFrequencyOfServiceId)
//                    .HasConstraintName("FK_ELClassSectionService_RefFrequencyOfServiceId");
//            });

//            modelBuilder.Entity<Elenrollment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElclassSectionId).HasComment("Foreign key - ELClassSection.");

//                entity.Property(e => e.EnrollmentDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDaysInAttendance).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElfederalFundingTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFoodServiceParticipationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaenvironmentElid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceOptionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELEnrollment_DataCollection");

//                entity.HasOne(d => d.ElclassSection)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.ElclassSectionId)
//                    .HasConstraintName("FK_ELEnrollment_ELClassSection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_EcProgramEnrollment_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELEnrollment_RecordStatus");

//                entity.HasOne(d => d.RefElfederalFundingType)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.RefElfederalFundingTypeId)
//                    .HasConstraintName("FK_ELEnrollment_RefELFederalFundingType");

//                entity.HasOne(d => d.RefFoodServiceParticipation)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.RefFoodServiceParticipationId)
//                    .HasConstraintName("FK_ELEnrollment_RefFoodServiceParticipation");

//                entity.HasOne(d => d.RefIdeaenvironmentEl)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.RefIdeaenvironmentElid)
//                    .HasConstraintName("FK_ELEnrollment_RefIDEAEnvironmentEL");

//                entity.HasOne(d => d.RefServiceOption)
//                    .WithMany(p => p.Elenrollments)
//                    .HasForeignKey(d => d.RefServiceOptionId)
//                    .HasConstraintName("FK_ELEnrollment_RefServiceOption");
//            });

//            modelBuilder.Entity<ElenrollmentOtherFunding>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElenrollmentOtherFundingId).HasComment("Surrogate key");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElotherFederalFundingSourcesId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElenrollmentOtherFundings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELEnrollmentOtherFunding_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.ElenrollmentOtherFundings)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELEnrollmentOtherFunding_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElenrollmentOtherFundings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELEnrollmentOtherFunding_RecordStatus");
//            });

//            modelBuilder.Entity<ElfacilityLicensing>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElfacilityLicensingId).HasComment("Surrogate Key");

//                entity.Property(e => e.ContinuingLicenseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InitialLicensingDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElfacilityLicensingStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLicenseExemptId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StateLicensedFacilityCapacity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElfacilityLicensings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELFacilityLicensing_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElfacilityLicensings)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELFacilityLicensing_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElfacilityLicensings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELFacilityLicensing_RecordStatus");

//                entity.HasOne(d => d.RefElfacilityLicensingStatus)
//                    .WithMany(p => p.ElfacilityLicensings)
//                    .HasForeignKey(d => d.RefElfacilityLicensingStatusId)
//                    .HasConstraintName("FK_ELFacilityLicensing_RefELFacilityLicensingStatus");

//                entity.HasOne(d => d.RefLicenseExempt)
//                    .WithMany(p => p.ElfacilityLicensings)
//                    .HasForeignKey(d => d.RefLicenseExemptId)
//                    .HasConstraintName("FK_ELFacilityLicensing_RefLicenseExempt");
//            });

//            modelBuilder.Entity<EligibilityEvaluation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.EligibilityEvaluations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_EligibilityEvaluation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.EligibilityEvaluations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_EligibilityEvaluation_RecordStatus");
//            });

//            modelBuilder.Entity<Elorganization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Elorganizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELOrganization_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.Elorganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELOrganization_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Elorganizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELOrganization_RecordStatus");

//                entity.HasOne(d => d.RefProfitStatus)
//                    .WithMany(p => p.Elorganizations)
//                    .HasForeignKey(d => d.RefProfitStatusId)
//                    .HasConstraintName("FK_ELOrganization_RefProfitStatus");
//            });

//            modelBuilder.Entity<ElorganizationAvailability>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AnnualOperatingWeeks).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DaysAvailablePerWeek).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HoursAvailablePerDay).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfClassrooms).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Orgainzation.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEnvironmentSettingId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceOptionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElorganizationAvailabilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELOrganizationAvailability_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElorganizationAvailabilities)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELOrganizationAvailability_Organization1");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElorganizationAvailabilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELOrganizationAvailability_RecordStatus");

//                entity.HasOne(d => d.RefEnvironmentSetting)
//                    .WithMany(p => p.ElorganizationAvailabilities)
//                    .HasForeignKey(d => d.RefEnvironmentSettingId)
//                    .HasConstraintName("FK_ELOrganizationAvailability_RefEnvironmentSetting");

//                entity.HasOne(d => d.RefServiceOption)
//                    .WithMany(p => p.ElorganizationAvailabilities)
//                    .HasForeignKey(d => d.RefServiceOptionId)
//                    .HasConstraintName("FK_ELOrganizationAvailability_RefServiceOption");
//            });

//            modelBuilder.Entity<ElorganizationFund>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBillableBasisTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElfederalFundingTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEllocalRevenueSourceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElotherFederalFundingSourcesId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElstateRevenueSourceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReimbursementTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELOrganizationFunds_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELOrganizationFunds_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RecordStatus");

//                entity.HasOne(d => d.RefBillableBasisType)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefBillableBasisTypeId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefBillableBasisType");

//                entity.HasOne(d => d.RefElfederalFundingType)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefElfederalFundingTypeId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefELFederalFundingType");

//                entity.HasOne(d => d.RefEllocalRevenueSource)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefEllocalRevenueSourceId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefELLocalRevenueSource");

//                entity.HasOne(d => d.RefElotherFederalFundingSources)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefElotherFederalFundingSourcesId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefELOtherFederalFundingSources");

//                entity.HasOne(d => d.RefElstateRevenueSource)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefElstateRevenueSourceId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefELStateRevenueSource");

//                entity.HasOne(d => d.RefReimbursementType)
//                    .WithMany(p => p.ElorganizationFunds)
//                    .HasForeignKey(d => d.RefReimbursementTypeId)
//                    .HasConstraintName("FK_ELOrganizationFunds_RefReimbursementType");
//            });

//            modelBuilder.Entity<ElorganizationMonitoring>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElorganizationMonitoringId).HasComment("Surrogate key");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationMonitoringNotificationsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPurposeOfMonitoringVisitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypeOfMonitoring).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.VisitEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.VisitStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElorganizationMonitorings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELOrganizationMonitoring_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElorganizationMonitorings)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELOrganizationMonitoring_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElorganizationMonitorings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELOrganizationMonitoring_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationMonitoringNotifications)
//                    .WithMany(p => p.ElorganizationMonitorings)
//                    .HasForeignKey(d => d.RefOrganizationMonitoringNotificationsId)
//                    .HasConstraintName("FK_ELOrganizationMonitoring_RefOrganizationMonitoringNotifications");

//                entity.HasOne(d => d.RefPurposeOfMonitoringVisit)
//                    .WithMany(p => p.ElorganizationMonitorings)
//                    .HasForeignKey(d => d.RefPurposeOfMonitoringVisitId)
//                    .HasConstraintName("FK_ELOrganizationMonitoring_RefPurposeOfMonitoringVisit");
//            });

//            modelBuilder.Entity<ElprogramLicensing>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElprogramLicensingId).HasComment("Surrogate Key");

//                entity.Property(e => e.ContinuingLicenseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InitialLicenseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LicenseRevocationStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LicenseSuspensionStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfFatalities).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfInjuries).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramLicenseStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLicenseExemptId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElprogramLicensings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELProgramLicensing_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElprogramLicensings)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELProgramLicensing_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElprogramLicensings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELProgramLicensing_RecordStatus");

//                entity.HasOne(d => d.RefElprogramLicenseStatus)
//                    .WithMany(p => p.ElprogramLicensings)
//                    .HasForeignKey(d => d.RefElprogramLicenseStatusId)
//                    .HasConstraintName("FK_ELProgramLicensing_RefELProgramLicenseStatus");

//                entity.HasOne(d => d.RefLicenseExempt)
//                    .WithMany(p => p.ElprogramLicensings)
//                    .HasForeignKey(d => d.RefLicenseExemptId)
//                    .HasConstraintName("FK_ELProgramLicensing_RefLicenseExempt");
//            });

//            modelBuilder.Entity<ElqualityInitiative>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElqualityInitiativeId).HasComment("Surrogate key");

//                entity.Property(e => e.MaximumScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.ParticipationEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParticipationIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ParticipationStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProgramHeathSafetyChecklistUseStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreLevel).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElqualityInitiatives)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELQualityInitiative_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElqualityInitiatives)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELQualityInitiative_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElqualityInitiatives)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELQualityInitiative_RecordStatus");
//            });

//            modelBuilder.Entity<ElqualityRatingImprovement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ElqualityRatingImprovementId).HasComment("Surrogate Key");

//                entity.Property(e => e.NumberQrisLevels).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.QrisAwardDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.QrisScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.QrisexpirationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefQrisParticipationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElqualityRatingImprovements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELQualityRatingImprovement_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElqualityRatingImprovements)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELQualityRatingImprovement_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElqualityRatingImprovements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELQualityRatingImprovement_RecordStatus");

//                entity.HasOne(d => d.RefQrisParticipation)
//                    .WithMany(p => p.ElqualityRatingImprovements)
//                    .HasForeignKey(d => d.RefQrisParticipationId)
//                    .HasConstraintName("FK_ELQualityRatingImprovement_RefQRISParticipation");
//            });

//            modelBuilder.Entity<ElservicePartner>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.MemorandumOfUnderstandingEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MemorandumOfUnderstandingStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePartnerDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePartnerName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElservicePartners)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELServicePartner_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ElservicePartners)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELServicePartner_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElservicePartners)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELServicePartner_RecordStatus");
//            });

//            modelBuilder.Entity<Elstaff>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefChildDevelopmentAssociateTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Elstaffs)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELStaff_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Elstaffs)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELStaff_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Elstaffs)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELStaff_RecordStatus");

//                entity.HasOne(d => d.RefChildDevelopmentAssociateType)
//                    .WithMany(p => p.Elstaffs)
//                    .HasForeignKey(d => d.RefChildDevelopmentAssociateTypeId)
//                    .HasConstraintName("FK_ELStaff_RefChildDevAssociateType");
//            });

//            modelBuilder.Entity<ElstaffAssignment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ItinerantProvider).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElstaffAssignments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELStaffAssignment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ElstaffAssignments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELStaffAssignment_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElstaffAssignments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELStaffAssignment_RecordStatus");
//            });

//            modelBuilder.Entity<ElstaffEducation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EcdegreeOrCertificateHolder).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEllevelOfSpecializationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprofessionalDevelopmentTopicAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchoolAgeEducationPscredits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TotalApprovedEccreditsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TotalCollegeCreditsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElstaffEducations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELStaffEducation_DataCollection");

//                entity.HasOne(d => d.Elstaff)
//                    .WithMany(p => p.ElstaffEducations)
//                    .HasForeignKey(d => d.ElstaffId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELStaffEducation_ELStaff");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElstaffEducations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELStaffEducation_RecordStatus");

//                entity.HasOne(d => d.RefEllevelOfSpecialization)
//                    .WithMany(p => p.ElstaffEducations)
//                    .HasForeignKey(d => d.RefEllevelOfSpecializationId)
//                    .HasConstraintName("FK_ELStaff_RefELLevelOfSpecialization");

//                entity.HasOne(d => d.RefElprofessionalDevelopmentTopicArea)
//                    .WithMany(p => p.ElstaffEducations)
//                    .HasForeignKey(d => d.RefElprofessionalDevelopmentTopicAreaId)
//                    .HasConstraintName("FK_ELStaffEducation_RefELPDTopicArea");
//            });

//            modelBuilder.Entity<ElstaffEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.HourlyWage).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HoursWorkedPerWeek).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEleducationStaffClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElemploymentSeparationReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElserviceProfessionalStaffClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWageCollectionMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWageVerificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffApprovalIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffEmploymentId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.UnionMembershipStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ELStaffEmployment_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ELStaffEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEleducationStaffClassification)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefEleducationStaffClassificationId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefELEducationStaffClassification");

//                entity.HasOne(d => d.RefElemploymentSeparationReason)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefElemploymentSeparationReasonId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefELEmploymentSeparationReason");

//                entity.HasOne(d => d.RefElserviceProfessionalStaffClassification)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefElserviceProfessionalStaffClassificationId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefELServiceProfessionalStaffClassification");

//                entity.HasOne(d => d.RefEmploymentStatus)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefEmploymentStatusId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefEmploymentStatus");

//                entity.HasOne(d => d.RefWageCollectionMethod)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefWageCollectionMethodId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefWageCollectionMethod");

//                entity.HasOne(d => d.RefWageVerification)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.RefWageVerificationId)
//                    .HasConstraintName("FK_ELStaffEmployment_RefWageVerification");

//                entity.HasOne(d => d.StaffEmployment)
//                    .WithMany(p => p.ElstaffEmployments)
//                    .HasForeignKey(d => d.StaffEmploymentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ELStaffEmployment_StaffEmployment");
//            });

//            modelBuilder.Entity<Facility>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FacilityId)
//                    .ValueGeneratedNever()
//                    .HasComment("Surrogate Key");

//                entity.Property(e => e.BuildingName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BuildingSiteNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBuildingUseTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Facility_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_Facility_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Facility_RecordStatus");

//                entity.HasOne(d => d.RefBuildingHistoricStatus)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RefBuildingHistoricStatusId)
//                    .HasConstraintName("FK_Facility_RefBuildingHistoricStatus");

//                entity.HasOne(d => d.RefBuildingPrimaryUseType)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RefBuildingPrimaryUseTypeId)
//                    .HasConstraintName("FK_Facility_RefBuildingPrimaryUseType");

//                entity.HasOne(d => d.RefBuildingUseType)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RefBuildingUseTypeId)
//                    .HasConstraintName("FK_Facility_RefBuildingUseType");

//                entity.HasOne(d => d.RefCampusStatus)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RefCampusStatusId)
//                    .HasConstraintName("FK_Facility_RefCampusStatus");

//                entity.HasOne(d => d.RefCampusType)
//                    .WithMany(p => p.Facilities)
//                    .HasForeignKey(d => d.RefCampusTypeId)
//                    .HasConstraintName("FK_Facility_RefCampusType");
//            });

//            modelBuilder.Entity<FacilityAudit>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityAudits)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityAudit_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityAudits)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityAudit_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityAudits)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityAudit_RecordStatus");

//                entity.HasOne(d => d.RefFacilityAuditType)
//                    .WithMany(p => p.FacilityAudits)
//                    .HasForeignKey(d => d.RefFacilityAuditTypeId)
//                    .HasConstraintName("FK_FacilityAudit_RefFacilityAuditType");
//            });

//            modelBuilder.Entity<FacilityCompliance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.BuildingSystemComponent)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.BuildingSystemComponentId)
//                    .HasConstraintName("FK_FacilityCompliance_BuildingSystemComponent");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityCompliance_DataCollection");

//                entity.HasOne(d => d.FacilityMandate)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.FacilityMandateId)
//                    .HasConstraintName("FK_FacilityCompliance_FacilityMandate");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityCompliance_RecordStatus");

//                entity.HasOne(d => d.RefFacilityComplianceStatus)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.RefFacilityComplianceStatusId)
//                    .HasConstraintName("FK_FacilityCompliance_RefFacilityComplianceStatus");

//                entity.HasOne(d => d.RefFacilityMaintStandardType)
//                    .WithMany(p => p.FacilityCompliances)
//                    .HasForeignKey(d => d.RefFacilityMaintStandardTypeId)
//                    .HasConstraintName("FK_FacilityCompliance_RefFacilityMaintStandardType");
//            });

//            modelBuilder.Entity<FacilityDesign>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityDesigns)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityDesign_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityDesigns)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityDesign_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityDesigns)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityDesign_RecordStatus");

//                entity.HasOne(d => d.RefBuildingDesignType)
//                    .WithMany(p => p.FacilityDesigns)
//                    .HasForeignKey(d => d.RefBuildingDesignTypeId)
//                    .HasConstraintName("FK_FacilityDesign_RefBuildingDesignType");

//                entity.HasOne(d => d.RefBuildingEnvOrEnergyPerformanceRatingCat)
//                    .WithMany(p => p.FacilityDesigns)
//                    .HasForeignKey(d => d.RefBuildingEnvOrEnergyPerformanceRatingCatId)
//                    .HasConstraintName("FK_FacilityDesign_RefBuildingEnvOrEnergyPerformanceRatingCat");
//            });

//            modelBuilder.Entity<FacilityDesignConstruction>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FacilityAdditionYear).IsFixedLength();

//                entity.Property(e => e.FacilityConstructionYear).IsFixedLength();

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_DataCollection");

//                entity.HasOne(d => d.FacilityDesign)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.FacilityDesignId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityDesignConstruction_FacilityDesign");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RecordStatus");

//                entity.HasOne(d => d.RefBuildingEnergyConservationMeasureType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefBuildingEnergyConservationMeasureTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefBuildingEnergyConservationMeasureType");

//                entity.HasOne(d => d.RefFacilityConstructionDateType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefFacilityConstructionDateTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefFacilityConstructionDateType");

//                entity.HasOne(d => d.RefFacilityConstructionMaterialType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefFacilityConstructionMaterialTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefFacilityConstructionMaterialType");

//                entity.HasOne(d => d.RefFacilityJointDevelopmentType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefFacilityJointDevelopmentTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefFacilityJointDevelopmentType");

//                entity.HasOne(d => d.RefFacilitySiteImprovementLocationType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefFacilitySiteImprovementLocationTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefFacilitySiteImprovementLocationType");

//                entity.HasOne(d => d.RefFacilityStandardType)
//                    .WithMany(p => p.FacilityDesignConstructions)
//                    .HasForeignKey(d => d.RefFacilityStandardTypeId)
//                    .HasConstraintName("FK_FacilityDesignConstruction_RefFacilityStandardType");
//            });

//            modelBuilder.Entity<FacilityEnergy>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityEnergy_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityEnergy_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityEnergy_RecordStatus");

//                entity.HasOne(d => d.RefBuildingEnergySourceType)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.RefBuildingEnergySourceTypeId)
//                    .HasConstraintName("FK_FacilityEnergy_RefBuildingEnergySourceType");

//                entity.HasOne(d => d.RefFacilityUtilityProviderType)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.RefFacilityUtilityProviderTypeId)
//                    .HasConstraintName("FK_FacilityEnergy_RefFacilityUtilityProviderType");

//                entity.HasOne(d => d.RefFacilityUtilityType)
//                    .WithMany(p => p.FacilityEnergies)
//                    .HasForeignKey(d => d.RefFacilityUtilityTypeId)
//                    .HasConstraintName("FK_FacilityEnergy_RefFacilityUtilityType");
//            });

//            modelBuilder.Entity<FacilityFinance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityFinances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityFinance_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityFinances)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityFinance_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityFinances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityFinance_RecordStatus");
//            });

//            modelBuilder.Entity<FacilityFinancial>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityFinancial_DataCollection");

//                entity.HasOne(d => d.FacilityLease)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.FacilityLeaseId)
//                    .HasConstraintName("FK_FacilityFinancial_FacilityLease");

//                entity.HasOne(d => d.FacilityMortgageFee)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.FacilityMortgageFeeId)
//                    .HasConstraintName("FK_FacilityFinancial_FacilityMortgageFee");

//                entity.HasOne(d => d.FacilityMortgage)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.FacilityMortgageId)
//                    .HasConstraintName("FK_FacilityFinancial_FacilityMortgage");

//                entity.HasOne(d => d.OrganizationFinancial)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.OrganizationFinancialId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityFinancial_OrganizationFinancial");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityFinancials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityFinancial_RecordStatus");
//            });

//            modelBuilder.Entity<FacilityHazard>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityHazards)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityHazard_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityHazards)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityHazard_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityHazards)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityHazard_RecordStatus");

//                entity.HasOne(d => d.RefFacilityHazardousMaterialsOrCondType)
//                    .WithMany(p => p.FacilityHazards)
//                    .HasForeignKey(d => d.RefFacilityHazardousMaterialsOrCondTypeId)
//                    .HasConstraintName("FK_FacilityHazard_RefFacilityHazardousMaterialsOrCondType");

//                entity.HasOne(d => d.RefFacilityNaturallyOccurringHazardType)
//                    .WithMany(p => p.FacilityHazards)
//                    .HasForeignKey(d => d.RefFacilityNaturallyOccurringHazardTypeId)
//                    .HasConstraintName("FK_FacilityHazard_RefFacilityNaturallyOccurringHazardType");
//            });

//            modelBuilder.Entity<FacilityJointUse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityJointUse_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityJointUse_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityJointUse_RecordStatus");

//                entity.HasOne(d => d.RefBuildingJointUseRationaleType)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.RefBuildingJointUseRationaleTypeId)
//                    .HasConstraintName("FK_FacilityJointUse_RefBuildingJointUseRationaleType");

//                entity.HasOne(d => d.RefBuildingJointUseSchedulingType)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.RefBuildingJointUseSchedulingTypeId)
//                    .HasConstraintName("FK_FacilityJointUse_RefBuildingJointUseSchedulingType");

//                entity.HasOne(d => d.RefBuildingJointUserType)
//                    .WithMany(p => p.FacilityJointUses)
//                    .HasForeignKey(d => d.RefBuildingJointUserTypeId)
//                    .HasConstraintName("FK_FacilityJointUse_RefBuildingJointUserType");
//            });

//            modelBuilder.Entity<FacilityLease>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityLeases)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityLease_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityLeases)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityLease_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityLeases)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityLease_RecordStatus");

//                entity.HasOne(d => d.RefFacilityLeaseAmountCategory)
//                    .WithMany(p => p.FacilityLeases)
//                    .HasForeignKey(d => d.RefFacilityLeaseAmountCategoryId)
//                    .HasConstraintName("FK_FacilityLease_RefFacilityLeaseAmountCategory");

//                entity.HasOne(d => d.RefFacilityLeaseType)
//                    .WithMany(p => p.FacilityLeases)
//                    .HasForeignKey(d => d.RefFacilityLeaseTypeId)
//                    .HasConstraintName("FK_FacilityLease_RefFacilityLeaseType");
//            });

//            modelBuilder.Entity<FacilityLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityLocations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityLocation_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityLocations)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityLocation_Facility");

//                entity.HasOne(d => d.Location)
//                    .WithMany(p => p.FacilityLocations)
//                    .HasForeignKey(d => d.LocationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityLocation_Location");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityLocations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityLocation_RecordStatus");
//            });

//            modelBuilder.Entity<FacilityManagement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityManagement_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityManagement_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityManagement_RecordStatus");

//                entity.HasOne(d => d.RefBuildingCharterSchoolRealtyAccessType)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RefBuildingCharterSchoolRealtyAccessTypeId)
//                    .HasConstraintName("FK_FacilityManagement_RefBuildingCharterSchoolRealtyAccessType");

//                entity.HasOne(d => d.RefBuildingCleaningStandardType)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RefBuildingCleaningStandardTypeId)
//                    .HasConstraintName("FK_FacilityManagement_RefBuildingCleaningStandardType");

//                entity.HasOne(d => d.RefFacilityCapitalProgramMgmtType)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RefFacilityCapitalProgramMgmtTypeId)
//                    .HasConstraintName("FK_FacilityManagement_RefFacilityCapitalProgramMgmtType");

//                entity.HasOne(d => d.RefFacilityComplianceAgencyType)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RefFacilityComplianceAgencyTypeId)
//                    .HasConstraintName("FK_FacilityManagement_RefFacilityComplianceAgencyType");

//                entity.HasOne(d => d.RefFacilityOperationsMgmtType)
//                    .WithMany(p => p.FacilityManagements)
//                    .HasForeignKey(d => d.RefFacilityOperationsMgmtTypeId)
//                    .HasConstraintName("FK_FacilityManagement_RefFacilityOperationsMgmtType");
//            });

//            modelBuilder.Entity<FacilityManagementPlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityManagementPlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityManagementPlan_DataCollection");

//                entity.HasOne(d => d.FacilityManagement)
//                    .WithMany(p => p.FacilityManagementPlans)
//                    .HasForeignKey(d => d.FacilityManagementId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityManagementPlan_FacilityManagement");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityManagementPlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityManagementPlan_RecordStatus");

//                entity.HasOne(d => d.RefFacilitiesMgmtEmergencyType)
//                    .WithMany(p => p.FacilityManagementPlans)
//                    .HasForeignKey(d => d.RefFacilitiesMgmtEmergencyTypeId)
//                    .HasConstraintName("FK_FacilityManagementPlan_RefFacilitiesMgmtEmergencyType");

//                entity.HasOne(d => d.RefFacilitiesPlanType)
//                    .WithMany(p => p.FacilityManagementPlans)
//                    .HasForeignKey(d => d.RefFacilitiesPlanTypeId)
//                    .HasConstraintName("FK_FacilityManagementPlan_RefFacilitiesPlanType");
//            });

//            modelBuilder.Entity<FacilityMandate>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityMandate_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityMandate_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityMandate_RecordStatus");

//                entity.HasOne(d => d.RefFacilitiesMandateAuthorityType)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.RefFacilitiesMandateAuthorityTypeId)
//                    .HasConstraintName("FK_FacilityMandate_RefFacilitiesMandateAuthorityType");

//                entity.HasOne(d => d.RefFacilityApplicableFederalMandateType)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.RefFacilityApplicableFederalMandateTypeId)
//                    .HasConstraintName("FK_FacilityMandate_RefFacilityApplicableFederalMandateType");

//                entity.HasOne(d => d.RefFacilityFederalMandateInterestType)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.RefFacilityFederalMandateInterestTypeId)
//                    .HasConstraintName("FK_FacilityMandate_RefFacilityFederalMandateInterestType");

//                entity.HasOne(d => d.RefFacilityStateOrLocalMandateInterestType)
//                    .WithMany(p => p.FacilityMandates)
//                    .HasForeignKey(d => d.RefFacilityStateOrLocalMandateInterestTypeId)
//                    .HasConstraintName("FK_FacilityMandate_RefFacilityStateOrLocalMandateInterestType");
//            });

//            modelBuilder.Entity<FacilityMortgage>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityMortgages)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityMortgage_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityMortgages)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityMortgage_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityMortgages)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityMortgage_RecordStatus");

//                entity.HasOne(d => d.RefFacilityMortgageInterestType)
//                    .WithMany(p => p.FacilityMortgages)
//                    .HasForeignKey(d => d.RefFacilityMortgageInterestTypeId)
//                    .HasConstraintName("FK_FacilityMortgage_RefFacilityMortgageInterestType");

//                entity.HasOne(d => d.RefFacilityMortgageType)
//                    .WithMany(p => p.FacilityMortgages)
//                    .HasForeignKey(d => d.RefFacilityMortgageTypeId)
//                    .HasConstraintName("FK_FacilityMortgage_RefFacilityMortgageType");
//            });

//            modelBuilder.Entity<FacilityMortgageFee>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityMortgageFees)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityMortgageFee_DataCollection");

//                entity.HasOne(d => d.FacilityMortgage)
//                    .WithMany(p => p.FacilityMortgageFees)
//                    .HasForeignKey(d => d.FacilityMortgageId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityMortgageFee_FacilityMortgage");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityMortgageFees)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityMortgageFee_RecordStatus");

//                entity.HasOne(d => d.RefFacilityFinancingFeeType)
//                    .WithMany(p => p.FacilityMortgageFees)
//                    .HasForeignKey(d => d.RefFacilityFinancingFeeTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityMortgageFee_RefFacilityFinancingFeeType");
//            });

//            modelBuilder.Entity<FacilityRelationship>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityRelationships)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityRelationship_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityRelationshipFacilities)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityRelationship_Facility");

//                entity.HasOne(d => d.ParentFacility)
//                    .WithMany(p => p.FacilityRelationshipParentFacilities)
//                    .HasForeignKey(d => d.ParentFacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityRelationship_Parent_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityRelationships)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityRelationship_RecordStatus");
//            });

//            modelBuilder.Entity<FacilitySchoolDesign>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilitySchoolDesigns)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilitySchoolDesign_DataCollection");

//                entity.HasOne(d => d.FacilityDesign)
//                    .WithMany(p => p.FacilitySchoolDesigns)
//                    .HasForeignKey(d => d.FacilityDesignId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilitySchoolDesign_FacilityDesign");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilitySchoolDesigns)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilitySchoolDesign_RecordStatus");

//                entity.HasOne(d => d.RefBuildingSchoolDesignType)
//                    .WithMany(p => p.FacilitySchoolDesigns)
//                    .HasForeignKey(d => d.RefBuildingSchoolDesignTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilitySchoolDesign_RefBuildingSchoolDesignType");
//            });

//            modelBuilder.Entity<FacilitySite>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilitySites)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilitySite_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilitySites)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilitySite_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilitySites)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilitySite_RecordStatus");

//                entity.HasOne(d => d.RefBuildingSiteUseRestrictionsType)
//                    .WithMany(p => p.FacilitySites)
//                    .HasForeignKey(d => d.RefBuildingSiteUseRestrictionsTypeId)
//                    .HasConstraintName("FK_FacilitySite_RefBuildingSiteUseRestrictionsType");

//                entity.HasOne(d => d.RefFacilitySiteOutdoorAreaType)
//                    .WithMany(p => p.FacilitySites)
//                    .HasForeignKey(d => d.RefFacilitySiteOutdoorAreaTypeId)
//                    .HasConstraintName("FK_FacilitySite_RefFacilitySiteOutdoorAreaType");
//            });

//            modelBuilder.Entity<FacilityUtilization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FacilityUtilizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FacilityUtilization_DataCollection");

//                entity.HasOne(d => d.Facility)
//                    .WithMany(p => p.FacilityUtilizations)
//                    .HasForeignKey(d => d.FacilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FacilityUtilization_Facility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FacilityUtilizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FacilityUtilization_RecordStatus");
//            });

//            modelBuilder.Entity<FinancialAccount>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FinancialAccountId).HasComment("Surrogate Key");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialAccountNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialExpenditureProjectReportingCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountBalanceSheetCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountFundClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountProgramCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountRevenueCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureFunctionCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureLevelOfInstructionCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureObjectCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FinancialAccount_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FinancialAccount_RecordStatus");

//                entity.HasOne(d => d.RefFinancialAccountBalanceSheetCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialAccountBalanceSheetCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialBalanceSheetAccountCode");

//                entity.HasOne(d => d.RefFinancialAccountCategory)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialAccountCategoryId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialAccountCategory");

//                entity.HasOne(d => d.RefFinancialAccountFundClassification)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialAccountFundClassificationId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialAccountFundClassification");

//                entity.HasOne(d => d.RefFinancialAccountProgramCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialAccountProgramCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialAccountProgramCode");

//                entity.HasOne(d => d.RefFinancialAccountRevenueCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialAccountRevenueCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialAccountRevenueCode");

//                entity.HasOne(d => d.RefFinancialExpenditureFunctionCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialExpenditureFunctionCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialExpenditureFunctionCode");

//                entity.HasOne(d => d.RefFinancialExpenditureLevelOfInstructionCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialExpenditureLevelOfInstructionCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialExpenditureLevelOfInstructionCode");

//                entity.HasOne(d => d.RefFinancialExpenditureObjectCode)
//                    .WithMany(p => p.FinancialAccounts)
//                    .HasForeignKey(d => d.RefFinancialExpenditureObjectCodeId)
//                    .HasConstraintName("FK_FinancialAccount_RefFinancialExpenditureObjectCode");
//            });

//            modelBuilder.Entity<FinancialAccountProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FinancialAccountProgramId).HasComment("Surrogate Key");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProgramNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FinancialAccountPrograms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FinancialAccountProgram_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FinancialAccountPrograms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FinancialAccountProgram_RecordStatus");
//            });

//            modelBuilder.Entity<FinancialAidApplication>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FinancialAidApplicationId).HasComment("Surrogate Key");

//                entity.Property(e => e.FinancialAidYearDesignator)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidApplicationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FinancialAidApplications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FinancialAidApplication_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.FinancialAidApplications)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FinancialAidApplication_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FinancialAidApplications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FinancialAidApplication_RecordStatus");

//                entity.HasOne(d => d.RefFinancialAidApplicationType)
//                    .WithMany(p => p.FinancialAidApplications)
//                    .HasForeignKey(d => d.RefFinancialAidApplicationTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FinancialAidApplication_RefFinancialAidApplType");
//            });

//            modelBuilder.Entity<FinancialAidAward>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FinancialAidAwardId).HasComment("Surrogate Key");

//                entity.Property(e => e.FinancialAidAwardAmount).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialAidYearDesignator)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizatinPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidAwardTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.FinancialAidAwards)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_FinancialAidAward_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.FinancialAidAwards)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_FinancialAidAward_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.FinancialAidAwards)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_FinancialAidAward_RecordStatus");

//                entity.HasOne(d => d.RefFinancialAidAwardType)
//                    .WithMany(p => p.FinancialAidAwards)
//                    .HasForeignKey(d => d.RefFinancialAidAwardTypeId)
//                    .HasConstraintName("FK_FinancialAidAward_RefFinancialAidAwardType");

//                entity.HasOne(d => d.RefFinancialAidStatus)
//                    .WithMany(p => p.FinancialAidAwards)
//                    .HasForeignKey(d => d.RefFinancialAidStatusId)
//                    .HasConstraintName("FK_FinancialAidAward_RefFinancialAidAwardStatus");
//            });

//            modelBuilder.Entity<Goal>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.Goals)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .HasConstraintName("FK_Goal_CompetencySet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Goals)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Goal_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Goals)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_Goal_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Goals)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Goal_RecordStatus");
//            });

//            modelBuilder.Entity<GoalMeasurement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.GoalMeasurements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_GoalMeasurement_DataCollection");

//                entity.HasOne(d => d.Goal)
//                    .WithMany(p => p.GoalMeasurements)
//                    .HasForeignKey(d => d.GoalId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_GoalMeasurement_Goal");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.GoalMeasurements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_GoalMeasurement_RecordStatus");

//                entity.HasOne(d => d.RefGoalMeasurementType)
//                    .WithMany(p => p.GoalMeasurements)
//                    .HasForeignKey(d => d.RefGoalMeasurementTypeId)
//                    .HasConstraintName("FK_GoalMeasurement_RefGoalMeasurementType");
//            });

//            modelBuilder.Entity<GoalMeasurementCriterion>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.GoalMeasurementCriteria)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_GoalMeasurementCriterion_DataCollection");

//                entity.HasOne(d => d.GoalMeasurement)
//                    .WithMany(p => p.GoalMeasurementCriteria)
//                    .HasForeignKey(d => d.GoalMeasurementId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_GoalMeasurementCriterion_GoalMeasurement");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.GoalMeasurementCriteria)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_GoalMeasurementCriterion_RecordStatus");
//            });

//            modelBuilder.Entity<GoalPerformance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.GoalPerformances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_GoalPerformance_DataCollection");

//                entity.HasOne(d => d.Goal)
//                    .WithMany(p => p.GoalPerformances)
//                    .HasForeignKey(d => d.GoalId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_GoalPerformance_Goal");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.GoalPerformances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_GoalPerformance_RecordStatus");

//                entity.HasOne(d => d.RefGoalStatusType)
//                    .WithMany(p => p.GoalPerformances)
//                    .HasForeignKey(d => d.RefGoalStatusTypeId)
//                    .HasConstraintName("FK_GoalPerformance_RefGoalStatusType");
//            });

//            modelBuilder.Entity<IdeaeligibilityEvaluationCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IdeaeligibilityEvaluationCategories)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IDEAEligibilityEvaluationCategory_DataCollection");

//                entity.HasOne(d => d.EligibilityEvaluation)
//                    .WithMany(p => p.IdeaeligibilityEvaluationCategories)
//                    .HasForeignKey(d => d.EligibilityEvaluationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IDEAEligibilityEvaluationCategory_EligibilityEvaluation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IdeaeligibilityEvaluationCategories)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IDEAEligibilityEvaluationCategory_RecordStatus");

//                entity.HasOne(d => d.RefIdeaeligibilityEvaluationCategory)
//                    .WithMany(p => p.IdeaeligibilityEvaluationCategories)
//                    .HasForeignKey(d => d.RefIdeaeligibilityEvaluationCategoryId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IDEAEligibilityEvaluationCategory_RefIDEAEligibilityEvaluationCategory");
//            });

//            modelBuilder.Entity<Iepauthorization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AuthorizationDocument)
//                    .WithMany(p => p.Iepauthorizations)
//                    .HasForeignKey(d => d.AuthorizationDocumentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IEPAuthorization_AuthorizationDocument");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Iepauthorizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IEPAuthorization_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.Iepauthorizations)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IEPAuthorization_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Iepauthorizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IEPAuthorization_RecordStatus");

//                entity.HasOne(d => d.RefIepauthorizationDocumentType)
//                    .WithMany(p => p.Iepauthorizations)
//                    .HasForeignKey(d => d.RefIepauthorizationDocumentTypeId)
//                    .HasConstraintName("FK_IEPAuthorization_RefIEPAuthorizationDocumentType");
//            });

//            modelBuilder.Entity<IepauthorizationRejected>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IepauthorizationRejecteds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IEPAuthorizationRejected_DataCollection");

//                entity.HasOne(d => d.Iepauthorization)
//                    .WithMany(p => p.IepauthorizationRejecteds)
//                    .HasForeignKey(d => d.IepauthorizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IEPAuthorizationRejected_IEPAuthorization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IepauthorizationRejecteds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IEPAuthorizationRejected_RecordStatus");
//            });

//            modelBuilder.Entity<IeppresentLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IeppresentLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IEPPresentLevel_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IeppresentLevels)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IEPPresentLevel_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IeppresentLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IEPPresentLevel_RecordStatus");
//            });

//            modelBuilder.Entity<Incident>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.IncidentId).HasComment("Surrogate Key");

//                entity.Property(e => e.IncidentCost).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentReporterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRoleId.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFirearmTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentBehaviorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentBehaviorSecondaryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentInjuryTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentLocationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentMultipleOffenseTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPerpetratorInjuryTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentReporterTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentTimeDescriptionCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWeaponTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RegulationViolatedDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RelatedToDisabilityManifestationInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReportedToLawEnforcementInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Incident_DataCollection");

//                entity.HasOne(d => d.IncidentReporter)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.IncidentReporterId)
//                    .HasConstraintName("FK_Incident_Person");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_Incident_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Incident_RecordStatus");

//                entity.HasOne(d => d.RefFirearmType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefFirearmTypeId)
//                    .HasConstraintName("FK_Incident_RefFirearmType");

//                entity.HasOne(d => d.RefIncidentBehavior)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentBehaviorId)
//                    .HasConstraintName("FK_Incident_RefRefIncidentBehavior");

//                entity.HasOne(d => d.RefIncidentBehaviorSecondary)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentBehaviorSecondaryId)
//                    .HasConstraintName("FK_Incident_RefRefIncidentBehaviorSecondary");

//                entity.HasOne(d => d.RefIncidentInjuryType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentInjuryTypeId)
//                    .HasConstraintName("FK_Incident_RefIncidentInjuryType");

//                entity.HasOne(d => d.RefIncidentLocation)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentLocationId)
//                    .HasConstraintName("FK_Incident_RefIncidentLocation");

//                entity.HasOne(d => d.RefIncidentMultipleOffenseType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentMultipleOffenseTypeId)
//                    .HasConstraintName("FK_Incident_RefIncidentMultipleOffenseType");

//                entity.HasOne(d => d.RefIncidentPerpetratorInjuryType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentPerpetratorInjuryTypeId)
//                    .HasConstraintName("FK_Incident_RefIncidentPerpetratorInjuryType");

//                entity.HasOne(d => d.RefIncidentReporterType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentReporterTypeId)
//                    .HasConstraintName("FK_Incident_RefIncidentReporterType");

//                entity.HasOne(d => d.RefIncidentTimeDescriptionCode)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefIncidentTimeDescriptionCodeId)
//                    .HasConstraintName("FK_Incident_RefIncidentTimeDescriptionCode");

//                entity.HasOne(d => d.RefWeaponType)
//                    .WithMany(p => p.Incidents)
//                    .HasForeignKey(d => d.RefWeaponTypeId)
//                    .HasConstraintName("FK_Incident_RefWeaponType");
//            });

//            modelBuilder.Entity<IncidentPerson>(entity =>
//            {
//                entity.HasKey(e => e.IncidentPersonId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPersonRoleTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPersonTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IncidentPerson_DataCollection");

//                entity.HasOne(d => d.Incident)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.IncidentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IncidentPerson_Incident");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IncidentPerson_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IncidentPerson_RecordStatus");

//                entity.HasOne(d => d.RefIncidentPersonRoleType)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.RefIncidentPersonRoleTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IncidentPerson_RefIncidentPersonRoleType");

//                entity.HasOne(d => d.RefIncidentPersonType)
//                    .WithMany(p => p.IncidentPeople)
//                    .HasForeignKey(d => d.RefIncidentPersonTypeId)
//                    .HasConstraintName("FK_IncidentPerson_RefIncidentPersonType");
//            });

//            modelBuilder.Entity<IndividualizedProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.IndividualizedProgramId).HasComment("Surrogate key");

//                entity.Property(e => e.InclusionMinutesPerWeek).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IndividualizedProgramDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NonInclusionMinutesPerWeek).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramDateType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramLocationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramTransitionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStudentSupportServiceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanMeetingParticipants).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanReevaluationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanSignatureDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ServicePlanSignedBy).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgram_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgram_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgram_RecordStatus");

//                entity.HasOne(d => d.RefIndividualizedProgramDateTypeNavigation)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIndividualizedProgramDateType)
//                    .HasConstraintName("FK_IndividualizedProgram_RefIndivProgramDateType");

//                entity.HasOne(d => d.RefIndividualizedProgramLocation)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIndividualizedProgramLocationId)
//                    .HasConstraintName("FK_IndividualizedProgram_RefIndivProgramLocation");

//                entity.HasOne(d => d.RefIndividualizedProgramTransitionType)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIndividualizedProgramTransitionTypeId)
//                    .HasConstraintName("FK_IndividualizedProgram_RefIndivProgramTransitionType");

//                entity.HasOne(d => d.RefIndividualizedProgramType)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RefIndividualizedProgramTypeId)
//                    .HasConstraintName("FK_IndividualizedProgram_RefIndividualizedProgramType");

//                entity.HasOne(d => d.RefStudentSupportServiceType)
//                    .WithMany(p => p.IndividualizedPrograms)
//                    .HasForeignKey(d => d.RefStudentSupportServiceTypeId)
//                    .HasConstraintName("FK_IndividualizedProgram_RefStudentSupportServiceType");
//            });

//            modelBuilder.Entity<IndividualizedProgramAccommodation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramAccommodations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodation_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramAccommodations)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodation_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramAccommodations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodation_RecordStatus");

//                entity.HasOne(d => d.RefAccommodationType)
//                    .WithMany(p => p.IndividualizedProgramAccommodations)
//                    .HasForeignKey(d => d.RefAccommodationTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodation_RefAccommodationType");
//            });

//            modelBuilder.Entity<IndividualizedProgramAccommodationSubject>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramAccommodationSubjects)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodationSubject_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgramAccommodation)
//                    .WithMany(p => p.IndividualizedProgramAccommodationSubjects)
//                    .HasForeignKey(d => d.IndividualizedProgramAccommodationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodationSubject_IndividualizedProgramAccommodation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramAccommodationSubjects)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodationSubject_RecordStatus");

//                entity.HasOne(d => d.RefScedcourseSubjectArea)
//                    .WithMany(p => p.IndividualizedProgramAccommodationSubjects)
//                    .HasForeignKey(d => d.RefScedcourseSubjectAreaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAccommodationSubject_RefSCEDCourseSubjectArea");
//            });

//            modelBuilder.Entity<IndividualizedProgramAmendment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramAmendments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramAmendment_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramAmendments)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAmendment_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramAmendments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramAmendment_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramAssessment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Assessment)
//                    .WithMany(p => p.IndividualizedProgramAssessments)
//                    .HasForeignKey(d => d.AssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAssessment_Assessment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramAssessments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramAssessment_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramAssessments)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAssessment_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramAssessments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramAssessment_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramAssessmentAccommodation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentAccommodation)
//                    .WithMany(p => p.IndividualizedProgramAssessmentAccommodations)
//                    .HasForeignKey(d => d.AssessmentAccommodationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAssessmentAccommodation_AssessmentAccommodation");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramAssessmentAccommodations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramAssessmentAccommodation_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgramAssessment)
//                    .WithMany(p => p.IndividualizedProgramAssessmentAccommodations)
//                    .HasForeignKey(d => d.IndividualizedProgramAssessmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramAssessmentAccommodation_IndividualizedProgramAssessment");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramAssessmentAccommodations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramAssessmentAccommodation_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramEligibilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramEligibility_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramEligibilities)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramEligibility_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramEligibilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramEligibility_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramEligibilityEvaluation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramEligibilityEvaluations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramEligibilityEvaluation_DataCollection");

//                entity.HasOne(d => d.EligibilityEvaluation)
//                    .WithMany(p => p.IndividualizedProgramEligibilityEvaluations)
//                    .HasForeignKey(d => d.EligibilityEvaluationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramEligibilityEvaluation_EligibilityEvaluation");

//                entity.HasOne(d => d.IndividualizedProgramEligibility)
//                    .WithMany(p => p.IndividualizedProgramEligibilityEvaluations)
//                    .HasForeignKey(d => d.IndividualizedProgramEligibilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramEligibilityEvaluation_IndividualizedProgramEligibility");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramEligibilityEvaluations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramEligibilityEvaluation_RecordStatus");

//                entity.HasOne(d => d.RefIepeligibilityEvaluationType)
//                    .WithMany(p => p.IndividualizedProgramEligibilityEvaluations)
//                    .HasForeignKey(d => d.RefIepeligibilityEvaluationTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramEligibilityEvaluation_RefIEPEligibilityEvaluationType");
//            });

//            modelBuilder.Entity<IndividualizedProgramGoal>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramGoals)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramGoal_DataCollection");

//                entity.HasOne(d => d.Goal)
//                    .WithMany(p => p.IndividualizedProgramGoals)
//                    .HasForeignKey(d => d.GoalId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramGoal_Goal");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramGoals)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramGoal_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramGoals)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramGoal_RecordStatus");

//                entity.HasOne(d => d.RefIepgoalType)
//                    .WithMany(p => p.IndividualizedProgramGoals)
//                    .HasForeignKey(d => d.RefIepgoalTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramGoal_RefIEPGoalType");
//            });

//            modelBuilder.Entity<IndividualizedProgramMeeting>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramMeetings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramMeeting_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramMeetings)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramMeeting_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramMeetings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramMeeting_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramMeetingAttendee>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramMeetingAttendees)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramMeetingAttendee_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgramMeeting)
//                    .WithMany(p => p.IndividualizedProgramMeetingAttendees)
//                    .HasForeignKey(d => d.IndividualizedProgramMeetingId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramMeetingAttendee_IndividualizedProgramMeeting");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.IndividualizedProgramMeetingAttendees)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramMeetingAttendee_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramMeetingAttendees)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramMeetingAttendee_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramProgressGoal>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramProgressGoals)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressGoal_DataCollection");

//                entity.HasOne(d => d.GoalPerformance)
//                    .WithMany(p => p.IndividualizedProgramProgressGoals)
//                    .HasForeignKey(d => d.GoalPerformanceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramProgressGoal_GoalPerformance");

//                entity.HasOne(d => d.IndividualizedProgramProgressReport)
//                    .WithMany(p => p.IndividualizedProgramProgressGoals)
//                    .HasForeignKey(d => d.IndividualizedProgramProgressReportId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramProgressGoal_IndividualizedProgramProgressReport");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramProgressGoals)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressGoal_RecordStatus");
//            });

//            modelBuilder.Entity<IndividualizedProgramProgressReport>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramProgressReports)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReport_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramProgressReports)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReport_IndividualizedProgram");

//                entity.HasOne(d => d.IndividualizedProgramProgressReportPlan)
//                    .WithMany(p => p.IndividualizedProgramProgressReports)
//                    .HasForeignKey(d => d.IndividualizedProgramProgressReportPlanId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReport_IndividualizedProgramProgressReportPlan");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramProgressReports)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReport_RecordStatus");

//                entity.HasOne(d => d.RefIpspprogressReportType)
//                    .WithMany(p => p.IndividualizedProgramProgressReports)
//                    .HasForeignKey(d => d.RefIpspprogressReportTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReport_RefIPSPProgressReportType");
//            });

//            modelBuilder.Entity<IndividualizedProgramProgressReportPlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramProgressReportPlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReportPlan_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramProgressReportPlans)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReportPlan_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramProgressReportPlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReportPlan_RecordStatus");

//                entity.HasOne(d => d.RefIpspprogressReportSchedule)
//                    .WithMany(p => p.IndividualizedProgramProgressReportPlans)
//                    .HasForeignKey(d => d.RefIpspprogressReportScheduleId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReportPlan_RefIPSPProgressReportSchedule");

//                entity.HasOne(d => d.RefIpspprogressReportType)
//                    .WithMany(p => p.IndividualizedProgramProgressReportPlans)
//                    .HasForeignKey(d => d.RefIpspprogressReportTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramProgressReportPlan_RefIPSPProgressReportType");
//            });

//            modelBuilder.Entity<IndividualizedProgramService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.IndividualizedProgramServiceId).HasComment("Surrogate key");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person");

//                entity.Property(e => e.PlannedServiceDuration).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PlannedServiceStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramPlannedServiceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMethodOfServiceDeliveryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceFrequencyId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramService_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramService_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramService_RecordStatus");

//                entity.HasOne(d => d.RefIndividualizedProgramPlannedServiceType)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.RefIndividualizedProgramPlannedServiceTypeId)
//                    .HasConstraintName("FK_IndividualizedProgramService_RefIndividualizedProgramPlannedServiceType");

//                entity.HasOne(d => d.RefMethodOfServiceDelivery)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.RefMethodOfServiceDeliveryId)
//                    .HasConstraintName("FK_IndividualizedProgramService_RefMethodOfServiceDelivery");

//                entity.HasOne(d => d.RefServiceFrequency)
//                    .WithMany(p => p.IndividualizedProgramServices)
//                    .HasForeignKey(d => d.RefServiceFrequencyId)
//                    .HasConstraintName("FK_IndividualizedProgramService_RefServiceFrequency");
//            });

//            modelBuilder.Entity<IndividualizedProgramServicesReceived>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.IndividualizedProgramServicesReceiveds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IndividualizedProgramServicesReceived_DataCollection");

//                entity.HasOne(d => d.IndividualizedProgram)
//                    .WithMany(p => p.IndividualizedProgramServicesReceiveds)
//                    .HasForeignKey(d => d.IndividualizedProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramServicesReceived_IndividualizedProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.IndividualizedProgramServicesReceiveds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IndividualizedProgramServicesReceived_RecordStatus");

//                entity.HasOne(d => d.ServicesReceived)
//                    .WithMany(p => p.IndividualizedProgramServicesReceiveds)
//                    .HasForeignKey(d => d.ServicesReceivedId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IndividualizedProgramServicesReceived_ServicesReceived");
//            });

//            modelBuilder.Entity<Ipedsfinance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_IPEDSFinance_DataCollection");

//                entity.HasOne(d => d.OrganizationFinancial)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.OrganizationFinancialId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_IPEDSFinance_OrganizationFinancial");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_IPEDSFinance_RecordStatus");

//                entity.HasOne(d => d.RefIpedsfasbfinancialPosition)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbfinancialPositionId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBFinancialPosition");

//                entity.HasOne(d => d.RefIpedsfasbfunctionalExpense)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbfunctionalExpenseId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBFunctionalExpense");

//                entity.HasOne(d => d.RefIpedsfasbpellGrantTransactions)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbpellGrantTransactionsId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBPellGrantTransactions");

//                entity.HasOne(d => d.RefIpedsfasbrevenue)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbrevenueId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBRevenue");

//                entity.HasOne(d => d.RefIpedsfasbrevenueRestriction)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbrevenueRestrictionId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBRevenueRestriction");

//                entity.HasOne(d => d.RefIpedsfasbscholarshipsandFellowshipsRevenue)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsfasbscholarshipsandFellowshipsRevenueId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSFASBScholarshipsandFellowshipsRevenue");

//                entity.HasOne(d => d.RefIpedsgasbfinancialPosition)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsgasbfinancialPositionId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSGASBFinancialPosition");

//                entity.HasOne(d => d.RefIpedsgasbfunctionalExpense)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsgasbfunctionalExpenseId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSGASBFunctionalExpense");

//                entity.HasOne(d => d.RefIpedsgasbrevenue)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsgasbrevenueId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSGASBRevenue");

//                entity.HasOne(d => d.RefIpedsgasbscholarshipsandFellowshipsRevenue)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsgasbscholarshipsandFellowshipsRevenueId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSGASBScholarshipsandFellowshipsRevenue");

//                entity.HasOne(d => d.RefIpedsintercollegiateAthleticsExpenses)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsintercollegiateAthleticsExpensesId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSIntercollegiateAthleticsExpenses");

//                entity.HasOne(d => d.RefIpedsnaturalExpense)
//                    .WithMany(p => p.Ipedsfinances)
//                    .HasForeignKey(d => d.RefIpedsnaturalExpenseId)
//                    .HasConstraintName("FK_IPEDSFinance_RefIPEDSNaturalExpense");
//            });

//            modelBuilder.Entity<K12charterSchoolAuthorizerAgency>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12charterSchoolAuthorizerAgencyId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCharterSchoolAuthorizerTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12charterSchoolAuthorizerAgencies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12CharterSchoolAuthorizerAgency_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12charterSchoolAuthorizerAgencies)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_K12CharterSchoolAuthorizerAgency_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12charterSchoolAuthorizerAgencies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12CharterSchoolAuthorizerAgency_RecordStatus");

//                entity.HasOne(d => d.RefCharterSchoolAuthorizerType)
//                    .WithMany(p => p.K12charterSchoolAuthorizerAgencies)
//                    .HasForeignKey(d => d.RefCharterSchoolAuthorizerTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12CharterSchoolAuthorizerAgency_RefCharterSchoolAuthorizerType");
//            });

//            modelBuilder.Entity<K12charterSchoolManagementOrganization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12charterSchoolManagementOrganizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12CharterSchoolManagementOrganization_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12charterSchoolManagementOrganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_Organization_K12CharterSchoolManagementOrganization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12charterSchoolManagementOrganizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12CharterSchoolManagementOrganization_RecordStatus");

//                entity.HasOne(d => d.RefCharterSchoolManagementOrganizationType)
//                    .WithMany(p => p.K12charterSchoolManagementOrganizations)
//                    .HasForeignKey(d => d.RefCharterSchoolManagementOrganizationTypeId)
//                    .HasConstraintName("FK_K12CharterSchoolManagementOrganization_Organization");
//            });

//            modelBuilder.Entity<K12course>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AvailableCarnegieUnitCredit).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CoreAcademicCourse).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseAlignedWithStandards).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseDepartmentName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FamilyConsumerSciencesCourseInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FundingProgram).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolCourseRequirement).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBlendedLearningModelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseGpaapplicabilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInteractionModeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditTypeEarnedId).HasComment("Foreign key - RefCreditTypeEarned");

//                entity.Property(e => e.RefCurriculumFrameworkTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12endOfCourseRequirementId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseSubjectAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWorkbasedLearningOpportunityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScedcourseCode)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScedgradeSpan)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.CourseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12Course_Course");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12Course_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12Course_RecordStatus");

//                entity.HasOne(d => d.RefAdditionalCreditType)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefAdditionalCreditTypeId)
//                    .HasConstraintName("FK_K12Course_RefAdditionalCreditType");

//                entity.HasOne(d => d.RefBlendedLearningModelType)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefBlendedLearningModelTypeId)
//                    .HasConstraintName("FK_K12Course_RefBlendedLearningModel");

//                entity.HasOne(d => d.RefCareerCluster)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefCareerClusterId)
//                    .HasConstraintName("FK_K12Course_RefCareerCluster");

//                entity.HasOne(d => d.RefCourseGpaapplicability)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefCourseGpaapplicabilityId)
//                    .HasConstraintName("FK_K12Course_RefCourseGpaApplicability");

//                entity.HasOne(d => d.RefCourseInteractionMode)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefCourseInteractionModeId)
//                    .HasConstraintName("FK_K12Course_RefCourseInteractionMode");

//                entity.HasOne(d => d.RefCreditTypeEarned)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefCreditTypeEarnedId)
//                    .HasConstraintName("FK_K12Course_RefCreditTypeEarned");

//                entity.HasOne(d => d.RefCurriculumFrameworkType)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefCurriculumFrameworkTypeId)
//                    .HasConstraintName("FK_K12Course_RefCurriculumFrameworkType");

//                entity.HasOne(d => d.RefK12endOfCourseRequirement)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefK12endOfCourseRequirementId)
//                    .HasConstraintName("FK_K12Course_RefK12EndOfCourseRequirement");

//                entity.HasOne(d => d.RefScedcourseLevel)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefScedcourseLevelId)
//                    .HasConstraintName("FK_K12Course_RefSCEDCourseLevel");

//                entity.HasOne(d => d.RefScedcourseSubjectArea)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefScedcourseSubjectAreaId)
//                    .HasConstraintName("FK_K12Course_RefSCEDCourseSubjectArea");

//                entity.HasOne(d => d.RefWorkbasedLearningOpportunityType)
//                    .WithMany(p => p.K12courses)
//                    .HasForeignKey(d => d.RefWorkbasedLearningOpportunityTypeId)
//                    .HasConstraintName("FK_K12Course_RefWorkbasedLearningOpportunityType");
//            });

//            modelBuilder.Entity<K12federalFundAllocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12FederalFundAllocation_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12FederalFundAllocation_OrganizationCalendarSession");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12FederalFundAllocation_RecordStatus");

//                entity.HasOne(d => d.RefFederalProgramFundingAllocationType)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.RefFederalProgramFundingAllocationTypeId)
//                    .HasConstraintName("FK_K12FederalFundAllocation_RefFederalFundingAllocation");

//                entity.HasOne(d => d.RefLeaFundsTransferType)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.RefLeaFundsTransferTypeId)
//                    .HasConstraintName("FK_K12FederalFundAllocation_RefLEAFundsTransferType");

//                entity.HasOne(d => d.RefReapAlternativeFundingStatus)
//                    .WithMany(p => p.K12federalFundAllocations)
//                    .HasForeignKey(d => d.RefReapAlternativeFundingStatusId)
//                    .HasConstraintName("FK_K12FederalFundAllocation_REAPAlternativeFundingStatus");
//            });

//            modelBuilder.Entity<K12lea>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaImprovementStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPublicSchoolChoiceStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SupervisoryUnionIdentificationNumber)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12Lea_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_K12Lea_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12Lea_RecordStatus");

//                entity.HasOne(d => d.RefCharterLeaStatus)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.RefCharterLeaStatusId)
//                    .HasConstraintName("FK_K12Lea_RefCharterLeaStatus");

//                entity.HasOne(d => d.RefLeaImprovementStatus)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.RefLeaImprovementStatusId)
//                    .HasConstraintName("FK_K12Lea_RefLeaImprovementStatus");

//                entity.HasOne(d => d.RefLeaType)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.RefLeaTypeId)
//                    .HasConstraintName("FK_K12Lea_RefLeaType");

//                entity.HasOne(d => d.RefPublicSchoolChoiceStatus)
//                    .WithMany(p => p.K12leas)
//                    .HasForeignKey(d => d.RefPublicSchoolChoiceStatusId)
//                    .HasConstraintName("FK_K12Lea_RefPublicSchoolChoiceStatus");
//            });

//            modelBuilder.Entity<K12leaFederalFund>(entity =>
//            {
//                entity.HasKey(e => e.K12leaFederalFundsId)
//                    .HasName("PK_K12LEAFederalFunds");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaFederalFunds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaFederalFunds_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.K12leaFederalFunds)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaFederalFunds_OrganizationCalendarSession");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaFederalFunds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaFederalFunds_RecordStatus");

//                entity.HasOne(d => d.RefRlisProgramUse)
//                    .WithMany(p => p.K12leaFederalFunds)
//                    .HasForeignKey(d => d.RefRlisProgramUseId)
//                    .HasConstraintName("FK_K12LeaFederalFunds_RefRlisProgramUse");
//            });

//            modelBuilder.Entity<K12leaFederalReporting>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DesegregationOrderOrPlan).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HarassmentOrBullyingPolicy).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticSportParticipantsFemale).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticSportParticipantsMale).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticSportsFemaleOnly).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticSportsMaleOnly).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticTeamsFemaleOnly).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InterscholasticTeamsMaleOnly).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBarrierToEducatingHomelessId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIntegratedTechnologyStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StateAssessStandardsFunding).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StateAssessmentAdminFunding).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TerminatedTitleIiiprogramFailure).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaFederalReportings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaFederalReporting_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaFederalReportings)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaFederalReporting_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaFederalReportings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaFederalReporting_RecordStatus");

//                entity.HasOne(d => d.RefBarrierToEducatingHomeless)
//                    .WithMany(p => p.K12leaFederalReportings)
//                    .HasForeignKey(d => d.RefBarrierToEducatingHomelessId)
//                    .HasConstraintName("FK_K12LeaFederalReporting_RefBarrierToEducatingHomeless");

//                entity.HasOne(d => d.RefIntegratedTechnologyStatus)
//                    .WithMany(p => p.K12leaFederalReportings)
//                    .HasForeignKey(d => d.RefIntegratedTechnologyStatusId)
//                    .HasConstraintName("FK_K12LeaFederalReporting_RefIntegratedTechnologyStatus");
//            });

//            modelBuilder.Entity<K12leaGradeLevelsApproved>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaGradeLevelsApproveds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaGradeLevelsApproved_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaGradeLevelsApproveds)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaGradeLevelsApproved_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaGradeLevelsApproveds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaGradeLevelsApproved_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevel)
//                    .WithMany(p => p.K12leaGradeLevelsApproveds)
//                    .HasForeignKey(d => d.RefGradeLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaGradeLevelsApproved_RefGradeLevel");
//            });

//            modelBuilder.Entity<K12leaGradeOffered>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaGradeOffereds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaGradeOffered_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaGradeOffereds)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaGradeOffered_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaGradeOffereds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaGradeOffered_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevel)
//                    .WithMany(p => p.K12leaGradeOffereds)
//                    .HasForeignKey(d => d.RefGradeLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaGradeOffered_RefGradeLevel");
//            });

//            modelBuilder.Entity<K12leaPreKeligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12leapreKeligibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrekindergartenEligibilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaPreKeligibilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaPreKEligibility_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaPreKeligibilities)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaPreKEligibility_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaPreKeligibilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaPreKEligibility_RecordStatus");

//                entity.HasOne(d => d.RefPrekindergartenEligibility)
//                    .WithMany(p => p.K12leaPreKeligibilities)
//                    .HasForeignKey(d => d.RefPrekindergartenEligibilityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaPreKEligibility_RefPrekindergartenEligibility");
//            });

//            modelBuilder.Entity<K12leaPreKeligibleAgesIdea>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12leapreKeligibleAgesIdeaid).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPreKeligibleAgesNonIdeaid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaPreKeligibleAgesIdeas)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaPreKEligibleAgesIDEA_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaPreKeligibleAgesIdeas)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaPreKEligibleAgesIDEA_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaPreKeligibleAgesIdeas)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaPreKEligibleAgesIDEA_RecordStatus");

//                entity.HasOne(d => d.RefPreKeligibleAgesNonIdea)
//                    .WithMany(p => p.K12leaPreKeligibleAgesIdeas)
//                    .HasForeignKey(d => d.RefPreKeligibleAgesNonIdeaid)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaPreKEligibleAgesIDEA_RefPreKEligibleAgesNonIDEA");
//            });

//            modelBuilder.Entity<K12leaSafeDrugFree>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Baseline).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BaselineYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CollectionFrequency).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IndicatorName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Instrument).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MostRecentCollection).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Performance).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Target).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaSafeDrugFrees)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaSafeDrugFree_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaSafeDrugFrees)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaSafeDrugFree_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaSafeDrugFrees)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaSafeDrugFree_RecordStatus");
//            });

//            modelBuilder.Entity<K12leaTitleIiiprofessionalDevelopment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12leatitleIiiprofessionalDevelopmentId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiiprofessionalDevelopmentTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaTitleIiiprofessionalDevelopments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaTitleIIIProfessionalDevelopment_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaTitleIiiprofessionalDevelopments)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaTitleIIIProfessionalDev_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaTitleIiiprofessionalDevelopments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaTitleIIIProfessionalDevelopment_RecordStatus");

//                entity.HasOne(d => d.RefTitleIiiprofessionalDevelopmentType)
//                    .WithMany(p => p.K12leaTitleIiiprofessionalDevelopments)
//                    .HasForeignKey(d => d.RefTitleIiiprofessionalDevelopmentTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LEATitleIIIProfessionalDev_TitleIIIProfessionalDevType");
//            });

//            modelBuilder.Entity<K12leaTitleIsupportService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12leaTitleIsupportServiceId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12leaTitleIsupportServiceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12leaTitleIsupportServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12LeaTitleISupportService_DataCollection");

//                entity.HasOne(d => d.K12lea)
//                    .WithMany(p => p.K12leaTitleIsupportServices)
//                    .HasForeignKey(d => d.K12leaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaTitleISupportService_K12Lea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12leaTitleIsupportServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12LeaTitleISupportService_RecordStatus");

//                entity.HasOne(d => d.RefK12leaTitleIsupportService)
//                    .WithMany(p => p.K12leaTitleIsupportServices)
//                    .HasForeignKey(d => d.RefK12leaTitleIsupportServiceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaTitleISupportService_RefK12LeaTitleISupportService");
//            });

//            modelBuilder.Entity<K12organizationStudentResponsibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12organizationStudentResponsibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12responsibilityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStudentSchoolAffiliationStateDefinedStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12organizationStudentResponsibilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12OrganizationStudentResponsibility_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12organizationStudentResponsibilities)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12OrgStudentResponsibility_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12organizationStudentResponsibilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12OrganizationStudentResponsibility_RecordStatus");

//                entity.HasOne(d => d.RefK12responsibilityType)
//                    .WithMany(p => p.K12organizationStudentResponsibilities)
//                    .HasForeignKey(d => d.RefK12responsibilityTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12OrgStudentResponsibility_RefK12ResponsibilityType");

//                entity.HasOne(d => d.RefStudentSchoolAffiliationStateDefinedStatus)
//                    .WithMany(p => p.K12organizationStudentResponsibilities)
//                    .HasForeignKey(d => d.RefStudentSchoolAffiliationStateDefinedStatusId)
//                    .HasConstraintName("FK_K12OrganizationStudentResponsibility_RefStudentSchoolAffiliationStateDefinedStatus");
//            });

//            modelBuilder.Entity<K12programOrService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from K12LEA.");

//                entity.Property(e => e.ProgramInMultiplePurposeFacility).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefKindergartenDailyLengthId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepProjectTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepSessionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrekindergartenDailyLengthId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramGiftedEligibilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIinstructionalServicesId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIprogramTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12ProgramOrService_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaProgramOrService_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12ProgramOrService_RecordStatus");

//                entity.HasOne(d => d.RefKindergartenDailyLength)
//                    .WithMany(p => p.K12programOrServiceRefKindergartenDailyLengths)
//                    .HasForeignKey(d => d.RefKindergartenDailyLengthId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefProgramDayLength1");

//                entity.HasOne(d => d.RefMepProjectType)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RefMepProjectTypeId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefMepProjectType");

//                entity.HasOne(d => d.RefMepSessionType)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RefMepSessionTypeId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefMepSessionType");

//                entity.HasOne(d => d.RefPrekindergartenDailyLength)
//                    .WithMany(p => p.K12programOrServiceRefPrekindergartenDailyLengths)
//                    .HasForeignKey(d => d.RefPrekindergartenDailyLengthId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefProgramDayLength");

//                entity.HasOne(d => d.RefProgramGiftedEligibility)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RefProgramGiftedEligibilityId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefProgramGiftedEligibility");

//                entity.HasOne(d => d.RefTitleIinstructionalServices)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RefTitleIinstructionalServicesId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefTitleIInstructServices");

//                entity.HasOne(d => d.RefTitleIprogramType)
//                    .WithMany(p => p.K12programOrServices)
//                    .HasForeignKey(d => d.RefTitleIprogramTypeId)
//                    .HasConstraintName("FK_K12LEAProgramOrService_RefTitleIProgramType");
//            });

//            modelBuilder.Entity<K12school>(entity =>
//            {
//                entity.HasKey(e => e.K12schoolId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AccreditationAgencyName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolApprovalYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolContractApprovalDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolContractIdNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolContractRenewalDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CharterSchoolOpenEnrollmentIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.K12charterSchoolManagementOrganizationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdministrativeFundingControlId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCharterSchoolTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncreasedLearningTimeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStatePovertyDesignationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12School_DataCollection");

//                entity.HasOne(d => d.K12charterSchoolAuthorizerAgency)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.K12charterSchoolAuthorizerAgencyId)
//                    .HasConstraintName("FK_K12School_K12CharterSchoolAuthorizerAgency");

//                entity.HasOne(d => d.K12charterSchoolManagementOrganization)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.K12charterSchoolManagementOrganizationId)
//                    .HasConstraintName("FK_K12School_K12CharterSchoolManagementOrganization");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12School_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12School_RecordStatus");

//                entity.HasOne(d => d.RefAdministrativeFundingControl)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefAdministrativeFundingControlId)
//                    .HasConstraintName("FK_K12School_RefAdminFundingControl");

//                entity.HasOne(d => d.RefCharterSchoolType)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefCharterSchoolTypeId)
//                    .HasConstraintName("FK_K12School_RefCharterSchoolType");

//                entity.HasOne(d => d.RefIncreasedLearningTimeType)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefIncreasedLearningTimeTypeId)
//                    .HasConstraintName("FK_K12School_RefIncreasedLearningTimeType");

//                entity.HasOne(d => d.RefSchoolLevel)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefSchoolLevelId)
//                    .HasConstraintName("FK_K12School_RefSchoolLevel");

//                entity.HasOne(d => d.RefSchoolType)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefSchoolTypeId)
//                    .HasConstraintName("FK_K12School_RefSchoolType");

//                entity.HasOne(d => d.RefStatePovertyDesignation)
//                    .WithMany(p => p.K12schools)
//                    .HasForeignKey(d => d.RefStatePovertyDesignationId)
//                    .HasConstraintName("FK_K12School_RefStatePovertyDesignation");
//            });

//            modelBuilder.Entity<K12schoolCorrectiveAction>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolCorrectiveActions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolCorrectiveAction_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolCorrectiveActions)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolCorrectiveAction_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolCorrectiveActions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolCorrectiveAction_RecordStatus");

//                entity.HasOne(d => d.RefCorrectiveActionType)
//                    .WithMany(p => p.K12schoolCorrectiveActions)
//                    .HasForeignKey(d => d.RefCorrectiveActionTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolCorrectiveAction_RefCorrectiveActionType");
//            });

//            modelBuilder.Entity<K12schoolGradeLevelsApproved>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolGradeLevelsApproveds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolGradeLevelsApproved_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolGradeLevelsApproveds)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolGradeLevelsApproved_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolGradeLevelsApproveds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolGradeLevelsApproved_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevel)
//                    .WithMany(p => p.K12schoolGradeLevelsApproveds)
//                    .HasForeignKey(d => d.RefGradeLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolGradeLevelsApproved_RefGradeLevel");
//            });

//            modelBuilder.Entity<K12schoolGradeOffered>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolGradeOffereds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolGradeOffered_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolGradeOffereds)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolGradeOffered_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolGradeOffereds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolGradeOffered_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevel)
//                    .WithMany(p => p.K12schoolGradeOffereds)
//                    .HasForeignKey(d => d.RefGradeLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolGradeOffered_RefGradeLevel");
//            });

//            modelBuilder.Entity<K12schoolImprovement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchoolImprovementExitDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolImprovement_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolImprovement_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolImprovement_RecordStatus");

//                entity.HasOne(d => d.RefSchoolImprovementFunds)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.RefSchoolImprovementFundsId)
//                    .HasConstraintName("FK_K12SchoolImprovement_RefSchoolImprovementFunds");

//                entity.HasOne(d => d.RefSchoolImprovementStatus)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.RefSchoolImprovementStatusId)
//                    .HasConstraintName("FK_K12SchoolImprovement_RefSchoolImprovementStatus");

//                entity.HasOne(d => d.RefSigInterventionType)
//                    .WithMany(p => p.K12schoolImprovements)
//                    .HasForeignKey(d => d.RefSigInterventionTypeId)
//                    .HasConstraintName("FK_K12SchoolImprovement_RefSIGInterventionType");
//            });

//            modelBuilder.Entity<K12schoolIndicatorStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_RecordStatus");

//                entity.HasOne(d => d.RefIndicatorStateDefinedStatus)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.RefIndicatorStateDefinedStatusId)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_RefIndicatorStateDefinedStatus");

//                entity.HasOne(d => d.RefIndicatorStatusCustomType)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.RefIndicatorStatusCustomTypeId)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_RefIndicatorStatusCustomType");

//                entity.HasOne(d => d.RefIndicatorStatusSubgroupType)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.RefIndicatorStatusSubgroupTypeId)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_RefIndicatorStatusSubgroupType");

//                entity.HasOne(d => d.RefIndicatorStatusType)
//                    .WithMany(p => p.K12schoolIndicatorStatuses)
//                    .HasForeignKey(d => d.RefIndicatorStatusTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolIndicatorStatus_RefIndicatorStatusType");
//            });

//            modelBuilder.Entity<K12schoolStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProgressAcheivingEnglishLearnerProficiencyStateDefinedStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBlendedLearningModelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgressAchievingEnglishLanguageProficiencyIndicatorStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SchoolStatus_DataCollection");

//                entity.HasOne(d => d.K12school)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.K12schoolId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SchoolStatus_K12School");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RecordStatus");

//                entity.HasOne(d => d.RefAlternativeSchoolFocus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefAlternativeSchoolFocusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefAlternativeSchoolFocus");

//                entity.HasOne(d => d.RefBlendedLearningModelType)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefBlendedLearningModelTypeId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefBlendedLearningModelType");

//                entity.HasOne(d => d.RefComprehensiveAndTargetedSupport)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefComprehensiveAndTargetedSupportId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefComprehensiveAndTargetedSupport");

//                entity.HasOne(d => d.RefComprehensiveSupport)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefComprehensiveSupportId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefComprehensiveSupport");

//                entity.HasOne(d => d.RefInternetAccess)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefInternetAccessId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefInternetAccess");

//                entity.HasOne(d => d.RefMagnetSpecialProgram)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefMagnetSpecialProgramId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefMagnetSpecialProgram");

//                entity.HasOne(d => d.RefNationalSchoolLunchProgramStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefNationalSchoolLunchProgramStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefNationalSchoolLunchProgramStatus");

//                entity.HasOne(d => d.RefNslpstatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefNslpstatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefNSLPStatus");

//                entity.HasOne(d => d.RefProgressAchievingEnglishLanguageProficiencyIndicatorStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefProgressAchievingEnglishLanguageProficiencyIndicatorStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefProgressAchievingEnglishLanguageProficiencyIndicatorStatus");

//                entity.HasOne(d => d.RefRestructuringAction)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefRestructuringActionId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefRestructuringAction");

//                entity.HasOne(d => d.RefSchoolDangerousStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefSchoolDangerousStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefSchoolDangerousStatus");

//                entity.HasOne(d => d.RefSchoolImprovementStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefSchoolImprovementStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefSchoolImprovementStatus");

//                entity.HasOne(d => d.RefTargetedSupport)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefTargetedSupportId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefTargetedSupport");

//                entity.HasOne(d => d.RefTitleIschoolStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefTitleIschoolStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefTitle1SchoolStatus");

//                entity.HasOne(d => d.RefVirtualSchoolStatus)
//                    .WithMany(p => p.K12schoolStatuses)
//                    .HasForeignKey(d => d.RefVirtualSchoolStatusId)
//                    .HasConstraintName("FK_K12SchoolStatus_RefVirtualSchoolStatus");
//            });

//            modelBuilder.Entity<K12sea>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateAnsicodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12seas)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12Sea_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12seas)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_K12Sea_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12seas)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12Sea_RecordStatus");

//                entity.HasOne(d => d.RefStateAnsicode)
//                    .WithMany(p => p.K12seas)
//                    .HasForeignKey(d => d.RefStateAnsicodeId)
//                    .HasConstraintName("FK_K12Sea_RefStateANSICode");
//            });

//            modelBuilder.Entity<K12seaAlternateFundUse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAlternateFundUsesId).HasComment("CEDS Element has been removed.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12seaAlternateFundUses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SeaAlternateFundUse_DataCollection");

//                entity.HasOne(d => d.K12seaFederalFunds)
//                    .WithMany(p => p.K12seaAlternateFundUses)
//                    .HasForeignKey(d => d.K12seaFederalFundsId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SeaAlternateFundUse_K12SeaFederalFunds");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12seaAlternateFundUses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SeaAlternateFundUse_RecordStatus");

//                entity.HasOne(d => d.RefAlternateFundUses)
//                    .WithMany(p => p.K12seaAlternateFundUses)
//                    .HasForeignKey(d => d.RefAlternateFundUsesId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SeaAlternateFundUse_RefAlternateFundUses");
//            });

//            modelBuilder.Entity<K12seaFederalFund>(entity =>
//            {
//                entity.HasKey(e => e.K12seaFederalFundsId)
//                    .HasName("PK_K12SEAFederalFunds");

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DateStateReceivedTitleIiiallocation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DateTitleIiifundsAvailableToSubgrantees).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDaysForTitleIiisubgrants).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StateTransferabilityOfFunds).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12seaFederalFunds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12SeaFederalFunds_DataCollection");

//                entity.HasOne(d => d.K12sea)
//                    .WithMany(p => p.K12seaFederalFunds)
//                    .HasForeignKey(d => d.K12seaId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12SeaFederalFunds_K12Sea");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12seaFederalFunds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12SeaFederalFunds_RecordStatus");
//            });

//            modelBuilder.Entity<K12staffAssignment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEdfactsTeacherInexperiencedStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12staffClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOutOfFieldStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StaffAssignment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_K12StaffAssignment_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StaffAssignment_RecordStatus");

//                entity.HasOne(d => d.RefClassroomPositionType)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefClassroomPositionTypeId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefClassroomPositionType");

//                entity.HasOne(d => d.RefEdfactsTeacherInexperiencedStatus)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefEdfactsTeacherInexperiencedStatusId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefEDFactsTeacherInexperiencedStatus");

//                entity.HasOne(d => d.RefEmergencyOrProvisionalCredentialStatus)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefEmergencyOrProvisionalCredentialStatusId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefEmergencyOrProvisionalCredentialStatus");

//                entity.HasOne(d => d.RefK12staffClassification)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefK12staffClassificationId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefEducationStaffClassification");

//                entity.HasOne(d => d.RefMepStaffCategory)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefMepStaffCategoryId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefMepStaffCategory");

//                entity.HasOne(d => d.RefOutOfFieldStatus)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefOutOfFieldStatusId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefOutOfFieldStatus");

//                entity.HasOne(d => d.RefProfessionalEducationJobClassification)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefProfessionalEducationJobClassificationId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefProfessionalEducationJobClassification");

//                entity.HasOne(d => d.RefSpecialEducationAgeGroupTaught)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefSpecialEducationAgeGroupTaughtId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefSpecialEducationAgeGroupTaught");

//                entity.HasOne(d => d.RefSpecialEducationStaffCategory)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefSpecialEducationStaffCategoryId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefSpecialEducationStaffCategory");

//                entity.HasOne(d => d.RefTeachingAssignmentRole)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefTeachingAssignmentRoleId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefTeachingAssignmentRole");

//                entity.HasOne(d => d.RefTitleIprogramStaffCategory)
//                    .WithMany(p => p.K12staffAssignments)
//                    .HasForeignKey(d => d.RefTitleIprogramStaffCategoryId)
//                    .HasConstraintName("FK_K12StaffAssignment_RefTitleIProgramStaffCategory");
//            });

//            modelBuilder.Entity<K12staffEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ContractDaysOfServicePerYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MepPersonnelIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12staffClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SalaryForTeachingAssignmentOnlyIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffEmploymentId).HasComment("Foreign key - StaffEmployment");

//                entity.Property(e => e.TitleItargetedAssistanceStaffFunded).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12staffEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StaffEmployment_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12staffEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StaffEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEmploymentStatus)
//                    .WithMany(p => p.K12staffEmployments)
//                    .HasForeignKey(d => d.RefEmploymentStatusId)
//                    .HasConstraintName("FK_K12StaffEmployment_RefEmploymentStatus");

//                entity.HasOne(d => d.RefK12staffClassification)
//                    .WithMany(p => p.K12staffEmployments)
//                    .HasForeignKey(d => d.RefK12staffClassificationId)
//                    .HasConstraintName("FK_K12StaffEmployment_RefEduStaffClassification");

//                entity.HasOne(d => d.StaffEmployment)
//                    .WithMany(p => p.K12staffEmployments)
//                    .HasForeignKey(d => d.StaffEmploymentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StaffEmployment_StaffEmployment");
//            });

//            modelBuilder.Entity<K12studentAcademicHonor>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12studentAcademicHonorId).HasComment("Surrogate Key");

//                entity.Property(e => e.HonorDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicHonorTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentAcademicHonors)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentAcademicHonor_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentAcademicHonors)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentAcademicHonor_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentAcademicHonors)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentAcademicHonor_RecordStatus");

//                entity.HasOne(d => d.RefAcademicHonorType)
//                    .WithMany(p => p.K12studentAcademicHonors)
//                    .HasForeignKey(d => d.RefAcademicHonorTypeId)
//                    .HasConstraintName("FK_K12StudentAcademicHonor_RefAcademicHonorType");
//            });

//            modelBuilder.Entity<K12studentAcademicRecord>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ClassRankingDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditsAttemptedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditsEarnedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DiplomaOrCredentialAwardDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradePointAverageCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradePointsEarnedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolStudentClassRank).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProjectedGraduationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGpaWeightedIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolDiplomaDistinctionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolDiplomaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPreAndPostTestIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalTechnicalCredentialTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgressLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentActionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnologyLiteracyStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TotalNumberInClass).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RecordStatus");

//                entity.HasOne(d => d.RefGpaWeightedIndicator)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefGpaWeightedIndicatorId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefGpaWeightedIndicator");

//                entity.HasOne(d => d.RefHighSchoolDiplomaDistinctionType)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefHighSchoolDiplomaDistinctionTypeId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefHSDiplomaDistinctionType");

//                entity.HasOne(d => d.RefHighSchoolDiplomaType)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefHighSchoolDiplomaTypeId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefHighSchoolDiplomaType");

//                entity.HasOne(d => d.RefPreAndPostTestIndicator)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefPreAndPostTestIndicatorId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefPreAndPostTestIndicator");

//                entity.HasOne(d => d.RefProfessionalTechnicalCredentialType)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefProfessionalTechnicalCredentialTypeId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefProfessionalTechnicalCredential");

//                entity.HasOne(d => d.RefProgressLevel)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefProgressLevelId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefProgressLevel");

//                entity.HasOne(d => d.RefPsEnrollmentAction)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefPsEnrollmentActionId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefPsEnrollmentAction");

//                entity.HasOne(d => d.RefTechnologyLiteracyStatus)
//                    .WithMany(p => p.K12studentAcademicRecords)
//                    .HasForeignKey(d => d.RefTechnologyLiteracyStatusId)
//                    .HasConstraintName("FK_K12StudentAcademicRecord_RefTechnologyLiteracyStatus");
//            });

//            modelBuilder.Entity<K12studentActivity>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ActivityTimeInvolved).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefActivityTimeMeasurementTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentActivities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentActivity_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentActivities)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentActivity_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentActivities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentActivity_RecordStatus");

//                entity.HasOne(d => d.RefActivityTimeMeasurementType)
//                    .WithMany(p => p.K12studentActivities)
//                    .HasForeignKey(d => d.RefActivityTimeMeasurementTypeId)
//                    .HasConstraintName("FK_K12StudentActivity_RefActivityTimeMeasurementType");
//            });

//            modelBuilder.Entity<K12studentCohort>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CohortDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CohortGraduationYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CohortYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GraduationRateSurveyCohortYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GraduationRateSurveyIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentCohorts)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentCohort_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentCohorts)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentCohort_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentCohorts)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentCohort_RecordStatus");
//            });

//            modelBuilder.Entity<K12studentCourseSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ExitWithdrawalDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradeEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradeValueQualifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsAttempted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseGpaapplicabilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseRepeatCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionEnrollmentStatusTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionEntryTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionExitTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditTypeEarnedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefExitOrWithdrawalStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelWhenCourseTakenId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPreAndPostTestIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgressLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TuitionFunded).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentCourseSection_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_K12StudentCourseSection_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RecordStatus");

//                entity.HasOne(d => d.RefAdditionalCreditType)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefAdditionalCreditTypeId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefAdditionalCreditType");

//                entity.HasOne(d => d.RefCourseGpaapplicability)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCourseGpaapplicabilityId)
//                    .HasConstraintName("FK_K12StudentCourseSection _RefCourseGpaApplicability");

//                entity.HasOne(d => d.RefCourseRepeatCode)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCourseRepeatCodeId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefCourseRepeatCode");

//                entity.HasOne(d => d.RefCourseSectionEnrollmentStatusType)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCourseSectionEnrollmentStatusTypeId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefCourseSectionEnrollmentStatusType");

//                entity.HasOne(d => d.RefCourseSectionEntryType)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCourseSectionEntryTypeId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefCourseSectionEntryType");

//                entity.HasOne(d => d.RefCourseSectionExitType)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCourseSectionExitTypeId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefCourseSectionExitType");

//                entity.HasOne(d => d.RefCreditTypeEarned)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefCreditTypeEarnedId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefCreditTypeEarned");

//                entity.HasOne(d => d.RefExitOrWithdrawalStatus)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefExitOrWithdrawalStatusId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefExitOrWithdrawalStatus");

//                entity.HasOne(d => d.RefGradeLevelWhenCourseTaken)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefGradeLevelWhenCourseTakenId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefGradeLevel");

//                entity.HasOne(d => d.RefPreAndPostTestIndicator)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefPreAndPostTestIndicatorId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefPreAndPostTestIndicator");

//                entity.HasOne(d => d.RefProgressLevel)
//                    .WithMany(p => p.K12studentCourseSections)
//                    .HasForeignKey(d => d.RefProgressLevelId)
//                    .HasConstraintName("FK_K12StudentCourseSection_RefProgressLevel");
//            });

//            modelBuilder.Entity<K12studentCourseSectionMark>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12studentCourseSectionMarkId).HasComment("Surrogate Key");

//                entity.Property(e => e.FinalIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradeEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradeValueQualifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MarkingPeriodName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MidTermMark).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StudentCourseSectionGradeNarrative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentCourseSectionMarks)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentCourseSectionMark_DataCollection");

//                entity.HasOne(d => d.K12studentCourseSection)
//                    .WithMany(p => p.K12studentCourseSectionMarks)
//                    .HasForeignKey(d => d.K12studentCourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentCourseSectionMark_K12StudentCourseSection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentCourseSectionMarks)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentCourseSectionMark_RecordStatus");
//            });

//            modelBuilder.Entity<K12studentDiscipline>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12studentDisciplineId).HasComment("Surrogate Key");

//                entity.Property(e => e.DisciplinaryActionEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DisciplinaryActionStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DurationOfDisciplinaryAction).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EducationalServicesAfterRemoval).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FullYearExpulsion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IepplacementMeetingIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncidentId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplinaryActionTakenId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineLengthDifferenceReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineMethodFirearmsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineMethodOfCwdId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaInterimRemovalId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaInterimRemovalReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeadisciplineMethodFirearmId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RelatedToZeroTolerancePolicy).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ShortenedExpulsion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentDiscipline_DataCollection");

//                entity.HasOne(d => d.Incident)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.IncidentId)
//                    .HasConstraintName("FK_K12StudentDiscipline_K12Incident");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_K12StudentDiscipline_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RecordStatus");

//                entity.HasOne(d => d.RefDisciplinaryActionTaken)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefDisciplinaryActionTakenId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefDisciplinaryActionTaken");

//                entity.HasOne(d => d.RefDisciplineLengthDifferenceReason)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefDisciplineLengthDifferenceReasonId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefDisciplineLengthDifference");

//                entity.HasOne(d => d.RefDisciplineMethodFirearms)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefDisciplineMethodFirearmsId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefDisciplineMethodFirearms");

//                entity.HasOne(d => d.RefDisciplineMethodOfCwd)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefDisciplineMethodOfCwdId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefDisciplineMethodOfCwd");

//                entity.HasOne(d => d.RefDisciplineReason)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefDisciplineReasonId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefDisciplineReason1");

//                entity.HasOne(d => d.RefIdeaInterimRemoval)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefIdeaInterimRemovalId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefIDEAInterimRemovalId");

//                entity.HasOne(d => d.RefIdeaInterimRemovalReason)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefIdeaInterimRemovalReasonId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefIDESInterimRemovalReason");

//                entity.HasOne(d => d.RefIdeadisciplineMethodFirearm)
//                    .WithMany(p => p.K12studentDisciplines)
//                    .HasForeignKey(d => d.RefIdeadisciplineMethodFirearmId)
//                    .HasConstraintName("FK_K12StudentDiscipline_RefIDEADisciplineMethodFirearm");
//            });

//            modelBuilder.Entity<K12studentEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EmploymentNaicsCode)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate Key - Foreign key: OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedAfterExitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedWhileEnrolledId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentEmployment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentEmployments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentEmployment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEmployedAfterExit)
//                    .WithMany(p => p.K12studentEmployments)
//                    .HasForeignKey(d => d.RefEmployedAfterExitId)
//                    .HasConstraintName("FK_K12StudentEmployment_RefEmployedAfterExit");

//                entity.HasOne(d => d.RefEmployedWhileEnrolled)
//                    .WithMany(p => p.K12studentEmployments)
//                    .HasForeignKey(d => d.RefEmployedWhileEnrolledId)
//                    .HasConstraintName("FK_K12StudentEmployment_RefEmployedWhileEnrolled");
//            });

//            modelBuilder.Entity<K12studentEnrollment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefExitGradeLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentEnrollment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .HasConstraintName("FK_K12EnrollmentMember_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RecordStatus");

//                entity.HasOne(d => d.RefDirectoryInformationBlockStatus)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefDirectoryInformationBlockStatusId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefDirectoryInformationBlockStatus");

//                entity.HasOne(d => d.RefEndOfTermStatus)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefEndOfTermStatusId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefEndOfTermStatus");

//                entity.HasOne(d => d.RefEnrollmentStatus)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefEnrollmentStatusId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefEnrollmentStatus");

//                entity.HasOne(d => d.RefEntryGradeLevel)
//                    .WithMany(p => p.K12studentEnrollmentRefEntryGradeLevels)
//                    .HasForeignKey(d => d.RefEntryGradeLevelId)
//                    .HasConstraintName("FK_K12EnrollmentMember_RefGrade");

//                entity.HasOne(d => d.RefEntryTypeNavigation)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefEntryType)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefEntryType");

//                entity.HasOne(d => d.RefExitGradeLevel)
//                    .WithMany(p => p.K12studentEnrollmentRefExitGradeLevels)
//                    .HasForeignKey(d => d.RefExitGradeLevelId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefGradeLevel");

//                entity.HasOne(d => d.RefExitOrWithdrawalStatus)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefExitOrWithdrawalStatusId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefExitOrWithdrawalStatus");

//                entity.HasOne(d => d.RefExitOrWithdrawalType)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefExitOrWithdrawalTypeId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefExitOrWithdrawalType");

//                entity.HasOne(d => d.RefFoodServiceEligibility)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefFoodServiceEligibilityId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefFoodServiceEligibility");

//                entity.HasOne(d => d.RefNonPromotionReason)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefNonPromotionReasonId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefNonPromotionReason");

//                entity.HasOne(d => d.RefPromotionReason)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefPromotionReasonId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefPromotionReason");

//                entity.HasOne(d => d.RefPublicSchoolResidenceNavigation)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefPublicSchoolResidence)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefPublicSchoolResidence");

//                entity.HasOne(d => d.RefStudentEnrollmentAccessType)
//                    .WithMany(p => p.K12studentEnrollments)
//                    .HasForeignKey(d => d.RefStudentEnrollmentAccessTypeId)
//                    .HasConstraintName("FK_K12StudentEnrollment_RefStudentEnrollmentAccessType");
//            });

//            modelBuilder.Entity<K12studentGraduationPlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CreditsRequired).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.K12courseId).HasComment("Foreign key - K12Course.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelWhenCourseTakenId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseSubjectAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_DataCollection");

//                entity.HasOne(d => d.K12course)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.K12courseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_K12Course");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_OrganizationPerson");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_RecordStatus");

//                entity.HasOne(d => d.RefGradeLevelWhenCourseTaken)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.RefGradeLevelWhenCourseTakenId)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_RefGradeLevel");

//                entity.HasOne(d => d.RefScedcourseSubjectArea)
//                    .WithMany(p => p.K12studentGraduationPlans)
//                    .HasForeignKey(d => d.RefScedcourseSubjectAreaId)
//                    .HasConstraintName("FK_K12StudentGraduationPlan_RefSCEDCourseSubjectArea");
//            });

//            modelBuilder.Entity<K12studentHomeLanguageSurvey>(entity =>
//            {
//                entity.Property(e => e.HomeLanguageSurveyAdministrationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HomeLanguageSurveyAdministrationIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentHomeLanguageSurveys)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentHomeLanguageSurvey_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentHomeLanguageSurveys)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentHomeLanguageSurvey_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentHomeLanguageSurveys)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentHomeLanguageSurvey_RecordStatus");
//            });

//            modelBuilder.Entity<K12studentLiteracyAssessment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LiteracyGoalMetStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LiteracyPostTestStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LiteracyPreTestStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLiteracyAssessmentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentLiteracyAssessments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentLiteracyAssessment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentLiteracyAssessments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentLiteracyAssessment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentLiteracyAssessments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentLiteracyAssessment_RecordStatus");

//                entity.HasOne(d => d.RefLiteracyAssessment)
//                    .WithMany(p => p.K12studentLiteracyAssessments)
//                    .HasForeignKey(d => d.RefLiteracyAssessmentId)
//                    .HasConstraintName("FK_K12StudentLiteracyAssessment_RefLiteracyAssessment");
//            });

//            modelBuilder.Entity<K12studentSession>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12studentSessionId).HasComment("Surrogate Key");

//                entity.Property(e => e.GradePointAverageGivenSession).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarSessionId).HasComment("Foreign key to Session.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key to OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12studentSessions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12StudentSession_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.K12studentSessions)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .HasConstraintName("FK_K12StudentSession_OrganizationCalendarSession");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.K12studentSessions)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12StudentSession_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12studentSessions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12StudentSession_RecordStatus");
//            });

//            modelBuilder.Entity<K12titleIiilanguageInstruction>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.K12titleIiilanguageInstructionId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiilanguageInstructionProgramTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.K12titleIiilanguageInstructions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_K12TitleIIILanguageInstruction_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.K12titleIiilanguageInstructions)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaTitleIIILanguageInstruction_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.K12titleIiilanguageInstructions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_K12TitleIIILanguageInstruction_RecordStatus");

//                entity.HasOne(d => d.RefTitleIiilanguageInstructionProgramType)
//                    .WithMany(p => p.K12titleIiilanguageInstructions)
//                    .HasForeignKey(d => d.RefTitleIiilanguageInstructionProgramTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_K12LeaTitleIIILangInstruction_RefTitleIIILangInstructionPrgm");
//            });

//            modelBuilder.Entity<LearnerAction>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearnerActionId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentItemResponseId).HasComment("Foreign key - AssessmentItemResponse");

//                entity.Property(e => e.LearnerActionActorIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearnerActionDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearnerActionObjectDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearnerActionObjectIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearnerActionObjectType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentItemResponse)
//                    .WithMany(p => p.LearnerActions)
//                    .HasForeignKey(d => d.AssessmentItemResponseId)
//                    .HasConstraintName("FK_AssessmentItemLearnerAction_AssessmentItemResponse");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearnerActions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearnerAction_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearnerActions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearnerAction_RecordStatus");

//                entity.HasOne(d => d.RefLearnerActionType)
//                    .WithMany(p => p.LearnerActions)
//                    .HasForeignKey(d => d.RefLearnerActionTypeId)
//                    .HasConstraintName("FK_LearnerAction_RefLearnerActionType");
//            });

//            modelBuilder.Entity<LearnerActivity>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearnerActivityId).HasComment("Surrogate Key");

//                entity.Property(e => e.AssessmentRegistrationId).HasComment("Foreign key - AssessmentRegistration.");

//                entity.Property(e => e.AssignedByPersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.CourseSectionId).HasComment("Surrogate key from CourseSection.");

//                entity.Property(e => e.CreationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DueDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DueTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LeaOrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.MaximumAttemptsAllowed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MaximumTimeAllowed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarSessionId).HasComment("Foreign key - Session");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.PossiblePoints).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Prerequisite).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActivityAddToGradeBookFlagId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActivityMaximumTimeAllowedUnitsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActivityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReleaseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RubricUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchoolOrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Weight).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentRegistration)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.AssessmentRegistrationId)
//                    .HasConstraintName("FK_LearnerActivity_AssessmentRegistration");

//                entity.HasOne(d => d.AssignedByPerson)
//                    .WithMany(p => p.LearnerActivityAssignedByPeople)
//                    .HasForeignKey(d => d.AssignedByPersonId)
//                    .HasConstraintName("FK_LearnerActivity_Person1");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .HasConstraintName("FK_LearnerActivity_CourseSection");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearnerActivity_DataCollection");

//                entity.HasOne(d => d.LeaOrganization)
//                    .WithMany(p => p.LearnerActivityLeaOrganizations)
//                    .HasForeignKey(d => d.LeaOrganizationId)
//                    .HasConstraintName("FK_LearnerActivity_Organization1");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .HasConstraintName("FK_LearnerActivity_OrganizationCalendarSession");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.LearnerActivityPeople)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearnerActivity_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearnerActivity_RecordStatus");

//                entity.HasOne(d => d.RefLearnerActivityMaximumTimeAllowedUnits)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.RefLearnerActivityMaximumTimeAllowedUnitsId)
//                    .HasConstraintName("FK_LearnerActivity_RefLearnerActivityMaximumTimeAllowedUnits");

//                entity.HasOne(d => d.RefLearnerActivityType)
//                    .WithMany(p => p.LearnerActivities)
//                    .HasForeignKey(d => d.RefLearnerActivityTypeId)
//                    .HasConstraintName("FK_LearnerActivity_RefLearnerActivityType");

//                entity.HasOne(d => d.SchoolOrganization)
//                    .WithMany(p => p.LearnerActivitySchoolOrganizations)
//                    .HasForeignKey(d => d.SchoolOrganizationId)
//                    .HasConstraintName("FK_LearnerActivity_Organization");
//            });

//            modelBuilder.Entity<LearnerActivityLearningResource>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearnerActivityLearningResourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.LearnerActivityId).HasComment("Foreign key - LearnerActivity");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearnerActivityLearningResources)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearnerActivity_LearningResource_DataCollection");

//                entity.HasOne(d => d.LearnerActivity)
//                    .WithMany(p => p.LearnerActivityLearningResources)
//                    .HasForeignKey(d => d.LearnerActivityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearnerAssignment_LearningResource_LearnerAssignment");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearnerActivityLearningResources)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearnerAssignment_LearningResource_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearnerActivityLearningResources)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearnerActivity_LearningResource_RecordStatus");
//            });

//            modelBuilder.Entity<LearningResource>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.AdaptedFromUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AssistiveTechnologiesCompatibleInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BasedOnUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ConceptKeyword).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CopyrightHolderName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CopyrightYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Creator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DateCreated).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceAuthorEmail).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceAuthorUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceDateModified).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceLicenseUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourcePublisherEmail).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourcePublisherUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PeerRatingSampleSize).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PublishedDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PublisherName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessApitypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessHazardTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessModeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessRightsUrlId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAuthorTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceBookFormatTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceControlFlexibilityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceDigitalMediaSubTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceDigitalMediaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceEducationalUseId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceIntendedEndUserRoleId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceInteractionModeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceInteractivityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SubjectCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SubjectCodeSystem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SubjectName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexitySystem).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TextComplexityValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TimeRequired).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypicalAgeRangeMaximum).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TypicalAgeRangeMinimum).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Url).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Version).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResource_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResource_RecordStatus");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .HasConstraintName("FK_LearningResource_RefLanguage");

//                entity.HasOne(d => d.RefLearningResourceAccessApitype)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceAccessApitypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceAccessAPIType");

//                entity.HasOne(d => d.RefLearningResourceAccessHazardType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceAccessHazardTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceAccessHazardType");

//                entity.HasOne(d => d.RefLearningResourceAccessModeType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceAccessModeTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceAccessModeType");

//                entity.HasOne(d => d.RefLearningResourceAccessRightsUrl)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceAccessRightsUrlId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceAccessRightsUrl");

//                entity.HasOne(d => d.RefLearningResourceAuthorType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceAuthorTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceAuthorType");

//                entity.HasOne(d => d.RefLearningResourceBookFormatType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceBookFormatTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceBookFormatTypeId");

//                entity.HasOne(d => d.RefLearningResourceControlFlexibilityType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceControlFlexibilityTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceControlFlexibilityType");

//                entity.HasOne(d => d.RefLearningResourceDigitalMediaSubType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceDigitalMediaSubTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceDigitalMediaSubType");

//                entity.HasOne(d => d.RefLearningResourceDigitalMediaType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceDigitalMediaTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceDigitalMediaType");

//                entity.HasOne(d => d.RefLearningResourceEducationalUse)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceEducationalUseId)
//                    .HasConstraintName("FK_LearningResource_RefLREducationalUse");

//                entity.HasOne(d => d.RefLearningResourceIntendedEndUserRole)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceIntendedEndUserRoleId)
//                    .HasConstraintName("FK_LearningResource_RefLRIntendedEndUserRole");

//                entity.HasOne(d => d.RefLearningResourceInteractionMode)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceInteractionModeId)
//                    .HasConstraintName("FK_LearningResource_RefLearningResourceInteractionMode");

//                entity.HasOne(d => d.RefLearningResourceInteractivityType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceInteractivityTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLRInteractivityType");

//                entity.HasOne(d => d.RefLearningResourceType)
//                    .WithMany(p => p.LearningResources)
//                    .HasForeignKey(d => d.RefLearningResourceTypeId)
//                    .HasConstraintName("FK_LearningResource_RefLRType");
//            });

//            modelBuilder.Entity<LearningResourceAdaptation>(entity =>
//            {
//                entity.HasKey(e => e.LearningResourceAdaptationId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourceAdaptationId).HasComment("Surrogate key");

//                entity.Property(e => e.AdaptationUrl).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key to LearningResource");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResourceAdaptations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResourceAdaptation_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearningResourceAdaptations)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourceAdaptation_LR");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResourceAdaptations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResourceAdaptation_RecordStatus");
//            });

//            modelBuilder.Entity<LearningResourceEducationLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourceEducationLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEducationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResourceEducationLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResourceEducationLevel_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearningResourceEducationLevels)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResource_GradeLevel_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResourceEducationLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResourceEducationLevel_RecordStatus");

//                entity.HasOne(d => d.RefEducationLevel)
//                    .WithMany(p => p.LearningResourceEducationLevels)
//                    .HasForeignKey(d => d.RefEducationLevelId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourceEducationLevel_RefEducationLevel");
//            });

//            modelBuilder.Entity<LearningResourceMediaFeature>(entity =>
//            {
//                entity.HasKey(e => e.LearningResourceMediaFeatureId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourceMediaFeatureId).HasComment("Surrogate key");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key to LearningResource");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceMediaFeatureTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResourceMediaFeatures)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResourceMediaFeature_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearningResourceMediaFeatures)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourceMediaFeature_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResourceMediaFeatures)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResourceMediaFeature_RecordStatus");

//                entity.HasOne(d => d.RefLearningResourceMediaFeatureType)
//                    .WithMany(p => p.LearningResourceMediaFeatures)
//                    .HasForeignKey(d => d.RefLearningResourceMediaFeatureTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourceMediaFeature_RefLearningResourceMediaFeatureType");
//            });

//            modelBuilder.Entity<LearningResourcePeerRating>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourcePeerRatingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Date).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key - LearningResource");

//                entity.Property(e => e.PeerRatingSystemId).HasComment("Foreign key - PeerRatingSystem");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResourcePeerRatings)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResourcePeerRating_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearningResourcePeerRatings)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourcePeerRating_LearningResource");

//                entity.HasOne(d => d.PeerRatingSystem)
//                    .WithMany(p => p.LearningResourcePeerRatings)
//                    .HasForeignKey(d => d.PeerRatingSystemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourcePeerRating_PeerRatingSystem");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.LearningResourcePeerRatings)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourcePeerRating_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResourcePeerRatings)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResourcePeerRating_RecordStatus");
//            });

//            modelBuilder.Entity<LearningResourcePhysicalMedium>(entity =>
//            {
//                entity.HasKey(e => e.LearningResourcePhysicalMediaId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LearningResourcePhysicalMediaId).HasComment("Surrogate key");

//                entity.Property(e => e.LearningResourceId).HasComment("Foreign key to LearningResource");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourcePhysicalMediaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LearningResourcePhysicalMedia)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LearningResourcePhysicalMedia_DataCollection");

//                entity.HasOne(d => d.LearningResource)
//                    .WithMany(p => p.LearningResourcePhysicalMedia)
//                    .HasForeignKey(d => d.LearningResourceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourcePhysicalMedia_LearningResource");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LearningResourcePhysicalMedia)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LearningResourcePhysicalMedia_RecordStatus");

//                entity.HasOne(d => d.RefLearningResourcePhysicalMediaType)
//                    .WithMany(p => p.LearningResourcePhysicalMedia)
//                    .HasForeignKey(d => d.RefLearningResourcePhysicalMediaTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_LearningResourcePhysicalMedia_RefLearningResourcePhysicalMediaType");
//            });

//            modelBuilder.Entity<Location>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.LocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Locations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Location_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Locations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Location_RecordStatus");
//            });

//            modelBuilder.Entity<LocationAddress>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ApartmentRoomOrSuiteNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BuildingSiteNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.City).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CountyName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Latitude).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LocationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Longitude).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PostalCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountryId).HasComment("Surrogate key from RefCountry identifying the country code.");

//                entity.Property(e => e.RefCountyId).HasComment("Surrogate key from RefCounty identifying the county code.");

//                entity.Property(e => e.RefErsruralUrbanContinuumCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateId).HasComment("Surrogate key from RefStateAbbreviation identifying the state.");

//                entity.Property(e => e.StreetNumberAndName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_LocationAddress_DataCollection");

//                entity.HasOne(d => d.Location)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.LocationId)
//                    .HasConstraintName("FK_LocationAddress_Location");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_LocationAddress_RecordStatus");

//                entity.HasOne(d => d.RefCountry)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.RefCountryId)
//                    .HasConstraintName("FK_LocationAddress_RefCountry");

//                entity.HasOne(d => d.RefCounty)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.RefCountyId)
//                    .HasConstraintName("FK_LocationAddress_RefCounty");

//                entity.HasOne(d => d.RefErsruralUrbanContinuumCode)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.RefErsruralUrbanContinuumCodeId)
//                    .HasConstraintName("FK_LocationAddress_RefERSRuralUrbanContinuumCode");

//                entity.HasOne(d => d.RefState)
//                    .WithMany(p => p.LocationAddresses)
//                    .HasForeignKey(d => d.RefStateId)
//                    .HasConstraintName("FK_LocationAddress_RefState");
//            });

//            modelBuilder.Entity<Organization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Organizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Organization_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Organizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Organization_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationAccreditation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationAccreditationId).HasComment("Surrogate Key");

//                entity.Property(e => e.AccreditationAgencyName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AccreditationAwardDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AccreditationExpirationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AccreditationStatus).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAccreditationAgencyId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SeekingAccreditationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationAccreditations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationAccreditation_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationAccreditations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationAccreditation_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationAccreditations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationAccreditation_RecordStatus");

//                entity.HasOne(d => d.RefAccreditationAgency)
//                    .WithMany(p => p.OrganizationAccreditations)
//                    .HasForeignKey(d => d.RefAccreditationAgencyId)
//                    .HasConstraintName("FK_OrganizationAccreditation_RefAccreditationAgency");

//                entity.HasOne(d => d.RefHigherEducationInstitutionAccreditationStatus)
//                    .WithMany(p => p.OrganizationAccreditations)
//                    .HasForeignKey(d => d.RefHigherEducationInstitutionAccreditationStatusId)
//                    .HasConstraintName("FK_OrganizationAccreditation_RefHigherEducationInstitutionAccreditationStatus");
//            });

//            modelBuilder.Entity<OrganizationCalendar>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarId).HasComment("Surrogate Key");

//                entity.Property(e => e.CalendarCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CalendarDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CalendarYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationCalendars)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationCalendar_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationCalendars)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationCalendar_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationCalendars)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationCalendar_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationCalendarCrisis>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarCrisisId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CrisisDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CrisisEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Type).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationCalendarCrises)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationCalendarCrisis_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationCalendarCrises)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationCalendarCrisis_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationCalendarCrises)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationCalendarCrisis_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationCalendarDay>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarDayId).HasComment("Surrogate Key");

//                entity.Property(e => e.AlternateDayName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DayName).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarId).HasComment("Foreign key - OrgainzationCalendar");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationCalendarDays)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationCalendarDay_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendar)
//                    .WithMany(p => p.OrganizationCalendarDays)
//                    .HasForeignKey(d => d.OrganizationCalendarId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationCalendarDay_OrganizationCalendar1");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationCalendarDays)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationCalendarDay_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationCalendarEvent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarEventId).HasComment("Surrogate Key");

//                entity.Property(e => e.EndTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EventDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarId).HasComment("Foreign key - OrganizationCalendar");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCalendarEventType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationCalendarEvents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationCalendarEvent_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendar)
//                    .WithMany(p => p.OrganizationCalendarEvents)
//                    .HasForeignKey(d => d.OrganizationCalendarId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationCalendarEvent_OrganizationCalendar");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationCalendarEvents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationCalendarEvent_RecordStatus");

//                entity.HasOne(d => d.RefCalendarEventTypeNavigation)
//                    .WithMany(p => p.OrganizationCalendarEvents)
//                    .HasForeignKey(d => d.RefCalendarEventType)
//                    .HasConstraintName("FK_OrganizationCalendarEvent_RefCalendarEventType");
//            });

//            modelBuilder.Entity<OrganizationCalendarSession>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationCalendarSessionId).HasComment("Surrogate Key");

//                entity.Property(e => e.AttendanceTermIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BeginDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DaysInSession).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Designator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FirstInstructionDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalMinutes).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LastInstructionDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MarkingTermIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinutesPerDay).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarId).HasComment("Surrogate key from OrganizationCalendar.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicTermDesignatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSessionTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchedulingTermIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SessionEndTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SessionStartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationCalendarSessions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationCalendarSession_DataCollection");

//                entity.HasOne(d => d.OrganizationCalendar)
//                    .WithMany(p => p.OrganizationCalendarSessions)
//                    .HasForeignKey(d => d.OrganizationCalendarId)
//                    .HasConstraintName("FK_OrganizationCalendarSession_OrganizationCalendar");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationCalendarSessions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationCalendarSession_RecordStatus");

//                entity.HasOne(d => d.RefAcademicTermDesignator)
//                    .WithMany(p => p.OrganizationCalendarSessions)
//                    .HasForeignKey(d => d.RefAcademicTermDesignatorId)
//                    .HasConstraintName("FK_OrganizationCalendarSession_RefAcademicTermDesignator");

//                entity.HasOne(d => d.RefSessionType)
//                    .WithMany(p => p.OrganizationCalendarSessions)
//                    .HasForeignKey(d => d.RefSessionTypeId)
//                    .HasConstraintName("FK_OrganizationCalendarSession_RefSessionType");
//            });

//            modelBuilder.Entity<OrganizationDetail>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RegionGeoJson).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ShortName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationDetails)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationDetail_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationDetails)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationDetail_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationDetails)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationDetail_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationType)
//                    .WithMany(p => p.OrganizationDetails)
//                    .HasForeignKey(d => d.RefOrganizationTypeId)
//                    .HasConstraintName("FK_OrganizationDetail_RefOrganizationType");
//            });

//            modelBuilder.Entity<OrganizationEmail>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationEmailId).HasComment("Surrogate Key");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ElectronicMailAddress).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmailTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationEmails)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationEmail_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationEmails)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Organization_Email_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationEmails)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationEmail_RecordStatus");

//                entity.HasOne(d => d.RefEmailType)
//                    .WithMany(p => p.OrganizationEmails)
//                    .HasForeignKey(d => d.RefEmailTypeId)
//                    .HasConstraintName("FK_Organization_Email_RefEmailType");
//            });

//            modelBuilder.Entity<OrganizationEmployeeBenefit>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationEmployeeBenefits)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationEmployeeBenefit_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationEmployeeBenefits)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationEmployeeBenefit_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationEmployeeBenefits)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationEmployeeBenefit_RecordStatus");

//                entity.HasOne(d => d.RefEmployeeBenefit)
//                    .WithMany(p => p.OrganizationEmployeeBenefits)
//                    .HasForeignKey(d => d.RefEmployeeBenefitId)
//                    .HasConstraintName("FK_OrganizationEmployeeBenefit_RefEmployeeBenefit");
//            });

//            modelBuilder.Entity<OrganizationFederalAccountability>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationFederalAccountabilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.AccountabilityReportTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AlternateAypApproachIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AmaoAypProgressAttainmentLepStudents).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AmaoProficiencyAttainmentLepStudents).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AmaoProgressAttainmentLepStudents).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AypAppealChangedDesignation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AypAppealProcessDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AypAppealProcessDesignation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.PersistentlyDangerousStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalTargetedSupportAndImprovementStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAypStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefComprehensiveSupportAndImprovementStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCteGraduationRateInclusionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElementaryMiddleAdditionalId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGunFreeSchoolsActReportingStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolGraduationRateIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefParticipationStatusMathId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefParticipationStatusRlaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProficiencyTargetStatusMathId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProficiencyTargetStatusRlaid).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReconstitutedStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTargetedSupportAndImprovementStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AmaoAypProgressAttainmentLepStudentsNavigation)
//                    .WithMany(p => p.OrganizationFederalAccountabilityAmaoAypProgressAttainmentLepStudentsNavigations)
//                    .HasForeignKey(d => d.AmaoAypProgressAttainmentLepStudents)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefAMAOAttainmentLEPStudents");

//                entity.HasOne(d => d.AmaoProficiencyAttainmentLepStudentsNavigation)
//                    .WithMany(p => p.OrganizationFederalAccountabilityAmaoProficiencyAttainmentLepStudentsNavigations)
//                    .HasForeignKey(d => d.AmaoProficiencyAttainmentLepStudents)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefAMAOAttainmentLEPStudents1");

//                entity.HasOne(d => d.AmaoProgressAttainmentLepStudentsNavigation)
//                    .WithMany(p => p.OrganizationFederalAccountabilityAmaoProgressAttainmentLepStudentsNavigations)
//                    .HasForeignKey(d => d.AmaoProgressAttainmentLepStudents)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefAMAOAttainmentLEPStudents2");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RecordStatus");

//                entity.HasOne(d => d.RefAdditionalTargetedSupportAndImprovementStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefAdditionalTargetedSupportAndImprovementStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefAdditionalTargetedSupportAndImprovementStatus");

//                entity.HasOne(d => d.RefAypStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefAypStatusId)
//                    .HasConstraintName("FK_OrganizationFederaAccountability_RefAypStatus");

//                entity.HasOne(d => d.RefComprehensiveSupportAndImprovementStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefComprehensiveSupportAndImprovementStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefComprehensiveSupportAndImprovementStatus");

//                entity.HasOne(d => d.RefCteGraduationRateInclusion)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefCteGraduationRateInclusionId)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefCteGraduationRateInclusion");

//                entity.HasOne(d => d.RefElementaryMiddleAdditional)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefElementaryMiddleAdditionalId)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefElementaryMiddleAdditional");

//                entity.HasOne(d => d.RefGunFreeSchoolsActReportingStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefGunFreeSchoolsActReportingStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefGunFreeSchoolsActStatus");

//                entity.HasOne(d => d.RefHighSchoolGraduationRateIndicator)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefHighSchoolGraduationRateIndicatorId)
//                    .HasConstraintName("FK_OrganizationFedAccountability_RefHSGraduationRateIndicator");

//                entity.HasOne(d => d.RefParticipationStatusMath)
//                    .WithMany(p => p.OrganizationFederalAccountabilityRefParticipationStatusMaths)
//                    .HasForeignKey(d => d.RefParticipationStatusMathId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefParticipationStatusAyp2");

//                entity.HasOne(d => d.RefParticipationStatusRla)
//                    .WithMany(p => p.OrganizationFederalAccountabilityRefParticipationStatusRlas)
//                    .HasForeignKey(d => d.RefParticipationStatusRlaId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefParticipationStatusAyp3");

//                entity.HasOne(d => d.RefProficiencyTargetStatusMath)
//                    .WithMany(p => p.OrganizationFederalAccountabilityRefProficiencyTargetStatusMaths)
//                    .HasForeignKey(d => d.RefProficiencyTargetStatusMathId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefProficiencyTargetAyp");

//                entity.HasOne(d => d.RefProficiencyTargetStatusRla)
//                    .WithMany(p => p.OrganizationFederalAccountabilityRefProficiencyTargetStatusRlas)
//                    .HasForeignKey(d => d.RefProficiencyTargetStatusRlaid)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefProficiencyTargetAyp1");

//                entity.HasOne(d => d.RefReconstitutedStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefReconstitutedStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefReconstitutedStatus");

//                entity.HasOne(d => d.RefTargetedSupportAndImprovementStatus)
//                    .WithMany(p => p.OrganizationFederalAccountabilities)
//                    .HasForeignKey(d => d.RefTargetedSupportAndImprovementStatusId)
//                    .HasConstraintName("FK_OrganizationFederalAccountability_RefTargetedSupportAndImprovementStatus");
//            });

//            modelBuilder.Entity<OrganizationFinancial>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationFinancialId).HasComment("Surrogate key");

//                entity.Property(e => e.ActualValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BudgetedValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Date).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EncumberedValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialAccountId).HasComment("Foreign key to FinancialAccount");

//                entity.Property(e => e.FinancialAccountProgramId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FiscalPeriodBeginDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FiscalPeriodEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FiscalYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationCalendarSessionId).HasComment("Foreign key to OrganizationCalendarSession");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationFinancials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationFinancial_DataCollection");

//                entity.HasOne(d => d.FinancialAccount)
//                    .WithMany(p => p.OrganizationFinancials)
//                    .HasForeignKey(d => d.FinancialAccountId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationFinancial_FinancialAccount");

//                entity.HasOne(d => d.FinancialAccountProgram)
//                    .WithMany(p => p.OrganizationFinancials)
//                    .HasForeignKey(d => d.FinancialAccountProgramId)
//                    .HasConstraintName("FK_OrganizationFinancial_FinancialAccountProgram");

//                entity.HasOne(d => d.OrganizationCalendarSession)
//                    .WithMany(p => p.OrganizationFinancials)
//                    .HasForeignKey(d => d.OrganizationCalendarSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationFinancial_OrgCalendarSession");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationFinancials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationFinancial_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationIdentifier>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationIdentifierId).HasComment("Surrogate Key");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationIdentificationSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationIdentifierTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationIdentifiers)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationIdentifier_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationIdentifiers)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationIdentifier_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationIdentifiers)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationIdentifier_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationIdentificationSystem)
//                    .WithMany(p => p.OrganizationIdentifiers)
//                    .HasForeignKey(d => d.RefOrganizationIdentificationSystemId)
//                    .HasConstraintName("FK_OrganizationIdentifier_RefIdentifierOrganization");

//                entity.HasOne(d => d.RefOrganizationIdentifierType)
//                    .WithMany(p => p.OrganizationIdentifiers)
//                    .HasForeignKey(d => d.RefOrganizationIdentifierTypeId)
//                    .HasConstraintName("FK_OrganizationIdentifier_RefOrganizationIdentifierType");
//            });

//            modelBuilder.Entity<OrganizationImage>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationImages)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationImage_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationImages)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationImage_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationImages)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationImage_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationIndicators)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationIndicator_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationIndicators)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationIndicator_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationIndicators)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationIndicator_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationIndicator)
//                    .WithMany(p => p.OrganizationIndicators)
//                    .HasForeignKey(d => d.RefOrganizationIndicatorId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationIndicator_RefOrganizationIndicator");
//            });

//            modelBuilder.Entity<OrganizationLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationLocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.LocationId).HasComment("Foreign key - Location.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationLocationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationLocations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationLocation_DataCollection");

//                entity.HasOne(d => d.Location)
//                    .WithMany(p => p.OrganizationLocations)
//                    .HasForeignKey(d => d.LocationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationLocation_Location");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationLocations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationLocation_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationLocations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationLocation_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationLocationType)
//                    .WithMany(p => p.OrganizationLocations)
//                    .HasForeignKey(d => d.RefOrganizationLocationTypeId)
//                    .HasConstraintName("FK_OrganizationLocation_RefOrganizationLocationType");
//            });

//            modelBuilder.Entity<OrganizationOperationalStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationOperationalStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.OperationalStatusEffectiveDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOperationalStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationOperationalStatuses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationOperationalStatus_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationOperationalStatuses)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationOperationalStatus_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationOperationalStatuses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationOperationalStatus_RecordStatus");

//                entity.HasOne(d => d.RefOperationalStatus)
//                    .WithMany(p => p.OrganizationOperationalStatuses)
//                    .HasForeignKey(d => d.RefOperationalStatusId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationOperationalStatus_RefOperationalStatus");
//            });

//            modelBuilder.Entity<OrganizationPersonRole>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.EntryDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ExitDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RoleId).HasComment("Surrogate key from Role.  The name of the role, e.g. Student, Staff, Employee");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPersonRoles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPersonRole_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationPersonRoles)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRole_Organization");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.OrganizationPersonRoles)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRole_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationPersonRoles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationPersonRole_RecordStatus");

//                entity.HasOne(d => d.Role)
//                    .WithMany(p => p.OrganizationPersonRoles)
//                    .HasForeignKey(d => d.RoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrgranizationPersonRole_Role");
//            });

//            modelBuilder.Entity<OrganizationPersonRoleApplication>(entity =>
//            {
//                entity.Property(e => e.ApplicationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPersonRoleApplications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPersonRoleApplication_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.OrganizationPersonRoleApplications)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRoleApplication_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationPersonRoleApplications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationPersonRoleApplication_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationPersonRoleFte>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FullTimeEquivalency).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPersonRoleFtes)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPersonRoleFTE_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.OrganizationPersonRoleFtes)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRoleFTE_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationPersonRoleFtes)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationPersonRoleFTE_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationPersonRoleRelationship>(entity =>
//            {
//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPersonRoleRelationships)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPersonRoleRelationship_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.OrganizationPersonRoleRelationshipOrganizationPersonRoles)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRoleRelationship_OrganizationPersonRole");

//                entity.HasOne(d => d.OrganizationPersonRoleIdParentNavigation)
//                    .WithMany(p => p.OrganizationPersonRoleRelationshipOrganizationPersonRoleIdParentNavigations)
//                    .HasForeignKey(d => d.OrganizationPersonRoleIdParent)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPersonRoleRelationship_OrganizationPersonRole_Parent");
//            });

//            modelBuilder.Entity<OrganizationPolicy>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationPolicyId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.PolicyType).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Value).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPolicies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPolicy_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationPolicies)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPolicy_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationPolicies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationPolicy_RecordStatus");
//            });

//            modelBuilder.Entity<OrganizationPopulationServed>(entity =>
//            {
//                entity.Property(e => e.OldestAgeServed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPopulationServedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.YoungestAgeServed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationPopulationServeds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationPopulationServed_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationPopulationServeds)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationPopulationServed_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationPopulationServeds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationPopulationServed_RecordStatus");

//                entity.HasOne(d => d.RefPopulationServed)
//                    .WithMany(p => p.OrganizationPopulationServeds)
//                    .HasForeignKey(d => d.RefPopulationServedId)
//                    .HasConstraintName("FK_OrganizationPopulationServed_RefPopulationServed");
//            });

//            modelBuilder.Entity<OrganizationProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationProgramTypes)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationProgramType_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationProgramTypes)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationProgramType_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationProgramTypes)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationProgramType_RecordStatus");

//                entity.HasOne(d => d.RefProgramType)
//                    .WithMany(p => p.OrganizationProgramTypes)
//                    .HasForeignKey(d => d.RefProgramTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationProgramType_RefProgramType");
//            });

//            modelBuilder.Entity<OrganizationRelationship>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationRelationshipId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.ParentOrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationRelationshipId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationRelationships)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationRelationship_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationRelationshipOrganizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationRelationship_Organization_Child");

//                entity.HasOne(d => d.ParentOrganization)
//                    .WithMany(p => p.OrganizationRelationshipParentOrganizations)
//                    .HasForeignKey(d => d.ParentOrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizatinoRelationship_Organization_Parent");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationRelationships)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationRelationship_RecordStatus");

//                entity.HasOne(d => d.RefOrganizationRelationship)
//                    .WithMany(p => p.OrganizationRelationships)
//                    .HasForeignKey(d => d.RefOrganizationRelationshipId)
//                    .HasConstraintName("FK_OrganizationRelationship_RefOrganizationRelationshipType");
//            });

//            modelBuilder.Entity<OrganizationService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationService_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationServices)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationService_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationService_RecordStatus");

//                entity.HasOne(d => d.RefStudentSupportServiceType)
//                    .WithMany(p => p.OrganizationServices)
//                    .HasForeignKey(d => d.RefStudentSupportServiceTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationService_RefStudentSupportServiceType");
//            });

//            modelBuilder.Entity<OrganizationTechnicalAssistance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationTechnicalAssistanceId).HasComment("Surrogate key");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceDeliveryTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TechnicalAssistanceApprovedInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationTechnicalAssistances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationTechnicalAssistance_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationTechnicalAssistances)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationTechnicalAssistance_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationTechnicalAssistances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationTechnicalAssistance_RecordStatus");

//                entity.HasOne(d => d.RefTechnicalAssistanceDeliveryType)
//                    .WithMany(p => p.OrganizationTechnicalAssistances)
//                    .HasForeignKey(d => d.RefTechnicalAssistanceDeliveryTypeId)
//                    .HasConstraintName("FK_OrganizationTechnicalAssistance_RefTechnicalAssistanceDeliveryType");

//                entity.HasOne(d => d.RefTechnicalAssistanceType)
//                    .WithMany(p => p.OrganizationTechnicalAssistances)
//                    .HasForeignKey(d => d.RefTechnicalAssistanceTypeId)
//                    .HasConstraintName("FK_OrganizationTechnicalAssistance_RefTechnicalAssistanceType");
//            });

//            modelBuilder.Entity<OrganizationTelephone>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationTelephoneId).HasComment("Surrogate Key");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.PrimaryTelephoneNumberIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstitutionTelephoneTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTelephoneNumberListedStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TelephoneNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationTelephones)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationTelephone_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationTelephones)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationTelephone_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationTelephones)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationTelephone_RecordStatus");

//                entity.HasOne(d => d.RefInstitutionTelephoneType)
//                    .WithMany(p => p.OrganizationTelephones)
//                    .HasForeignKey(d => d.RefInstitutionTelephoneTypeId)
//                    .HasConstraintName("FK_LocationPhone_RefInstitutionTelephoneType");

//                entity.HasOne(d => d.RefTelephoneNumberListedStatus)
//                    .WithMany(p => p.OrganizationTelephones)
//                    .HasForeignKey(d => d.RefTelephoneNumberListedStatusId)
//                    .HasConstraintName("FK_OrganizationTelephone_RefTelephoneNumberListedStatus");
//            });

//            modelBuilder.Entity<OrganizationWebsite>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Website).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.OrganizationWebsites)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_OrganizationWebsite_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.OrganizationWebsites)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_OrganizationWebsite_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.OrganizationWebsites)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_OrganizationWebsite_RecordStatus");
//            });

//            modelBuilder.Entity<PdactivityEducationLevel>(entity =>
//            {
//                entity.HasKey(e => e.PdactivityEducationLevelId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PdactivityEducationLevelId).HasComment("Surrogate key");

//                entity.Property(e => e.ProfessionalDevelopmentActivityId).HasComment("Foreign key to ProfessionalDevelopmentActivity");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityEducationLevelsAddressedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PdactivityEducationLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PDActivityEducationLevel_DataCollection");

//                entity.HasOne(d => d.ProfessionalDevelopmentActivity)
//                    .WithMany(p => p.PdactivityEducationLevels)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentActivityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDActivityEducationLevel_PDActivity");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PdactivityEducationLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PDActivityEducationLevel_RecordStatus");
//            });

//            modelBuilder.Entity<PeerRatingSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PeerRatingSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.MaximumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MinimumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Name).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OptimumValue).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PeerRatingSystems)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PeerRatingSystem_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PeerRatingSystems)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PeerRatingSystem_RecordStatus");
//            });

//            modelBuilder.Entity<Person>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.People)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Person_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.People)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Person_RecordStatus");
//            });

//            modelBuilder.Entity<PersonAddress>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonAddressId).HasComment("Surrogate Key");

//                entity.Property(e => e.AddressCountyName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ApartmentRoomOrSuiteNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.City).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Latitude).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Longitude).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.PostalCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountyId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefPersonLocationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonalInformationVerificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StreetNumberAndName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonAddress_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonAddress_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonAddress_RecordStatus");

//                entity.HasOne(d => d.RefCountry)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RefCountryId)
//                    .HasConstraintName("FK_PersonAddress_RefCountry");

//                entity.HasOne(d => d.RefCounty)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RefCountyId)
//                    .HasConstraintName("FK_PersonAddress_RefCounty");

//                entity.HasOne(d => d.RefPersonLocationType)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RefPersonLocationTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonAddress_RefPersonLocationType");

//                entity.HasOne(d => d.RefPersonalInformationVerification)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RefPersonalInformationVerificationId)
//                    .HasConstraintName("FK_PersonAddress_RefPersonalInformationVerification");

//                entity.HasOne(d => d.RefState)
//                    .WithMany(p => p.PersonAddresses)
//                    .HasForeignKey(d => d.RefStateId)
//                    .HasConstraintName("FK_PersonAddress_RefState");
//            });

//            modelBuilder.Entity<PersonAddressNcesSide>(entity =>
//            {
//                entity.Property(e => e.NcesSideDateProcessed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NcesSideEstimate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NcesSideStandardError).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NcesSideVintageBeginYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NcesSideVintageEndYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonAddressNcesSides)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonAddressNcesSide_DataCollection");

//                entity.HasOne(d => d.PersonAddress)
//                    .WithMany(p => p.PersonAddressNcesSides)
//                    .HasForeignKey(d => d.PersonAddressId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonAddressNcesSide_PersonAddress");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonAddressNcesSides)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonAddressNcesSide_RecordStatus");
//            });

//            modelBuilder.Entity<PersonAllergy>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonAllergyId).HasComment("Surrogate key.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.ReactionDescription).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAllergySeverityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAllergyTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonAllergies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonAllergy_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonAllergies)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonAllergy_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonAllergies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonAllergy_RecordStatus");

//                entity.HasOne(d => d.RefAllergySeverity)
//                    .WithMany(p => p.PersonAllergies)
//                    .HasForeignKey(d => d.RefAllergySeverityId)
//                    .HasConstraintName("FK_PersonAllergy_RefAllergySeverity");

//                entity.HasOne(d => d.RefAllergyType)
//                    .WithMany(p => p.PersonAllergies)
//                    .HasForeignKey(d => d.RefAllergyTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonAllergy_RefAllergyTypeId");
//            });

//            modelBuilder.Entity<PersonAssessmentPersonalNeedsProfile>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.AssessmentPersonalNeedsProfile)
//                    .WithMany(p => p.PersonAssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.AssessmentPersonalNeedsProfileId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Person_AssessmentPersonalNeedsProfile_AssessmentPersonalNeedsProfile");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonAssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Person_AssessmentPersonalNeedsProfile_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonAssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Person_AssessmentPersonalNeedsProfile_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonAssessmentPersonalNeedsProfiles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Person_AssessmentPersonalNeedsProfile_RecordStatus");
//            });

//            modelBuilder.Entity<PersonBirthplace>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.City).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonBirthplaces)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonBirthplace_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonBirthplaces)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonBirthplace_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonBirthplaces)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonBirthplace_RecordStatus");

//                entity.HasOne(d => d.RefCountry)
//                    .WithMany(p => p.PersonBirthplaces)
//                    .HasForeignKey(d => d.RefCountryId)
//                    .HasConstraintName("FK_PersonBirthplace_RefCountry");

//                entity.HasOne(d => d.RefState)
//                    .WithMany(p => p.PersonBirthplaces)
//                    .HasForeignKey(d => d.RefStateId)
//                    .HasConstraintName("FK_PersonBirthplace_RefState");
//            });

//            modelBuilder.Entity<PersonCareerEducationPlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonCareerEducationPlanId).HasComment("Surrogate key.");

//                entity.Property(e => e.LastUpdated).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.ProfessionalDevelopmentPlanApprovedBySupervisor).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProfessionalDevelopmentPlanCompletion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerEducationPlanTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TuitionFunded).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonCareerEducationPlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonCareerEducationPlan_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonCareerEducationPlans)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonCareerEducationPlan_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonCareerEducationPlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonCareerEducationPlan_RecordStatus");

//                entity.HasOne(d => d.RefCareerEducationPlanType)
//                    .WithMany(p => p.PersonCareerEducationPlans)
//                    .HasForeignKey(d => d.RefCareerEducationPlanTypeId)
//                    .HasConstraintName("FK_PersonCareerEducationPlan_RefCareerEduPlanType");
//            });

//            modelBuilder.Entity<PersonCredential>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonCredentialId).HasComment("Surrogate Key");

//                entity.Property(e => e.CredentialName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CredentialOrLicenseAwardEntity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ExpirationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IssuanceDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.ProfessionalCertificateOrLicenseNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIssuingStateId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonCredentials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonCredential_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonCredentials)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonCredential_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonCredentials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonCredential_RecordStatus");

//                entity.HasOne(d => d.RefCredentialType)
//                    .WithMany(p => p.PersonCredentials)
//                    .HasForeignKey(d => d.RefCredentialTypeId)
//                    .HasConstraintName("FK_PersonCredential_RefCredentialType");

//                entity.HasOne(d => d.RefIssuingState)
//                    .WithMany(p => p.PersonCredentials)
//                    .HasForeignKey(d => d.RefIssuingStateId)
//                    .HasConstraintName("FK_PersonCredential_RefState");
//            });

//            modelBuilder.Entity<PersonDegreeOrCertificate>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonDegreeOrCertificateId).HasComment("Surrogate Key");

//                entity.Property(e => e.AwardDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DegreeOrCertificateTitleOrSubject).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NameOfInstitution).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDegreeOrCertificateTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEducationVerificationMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHigherEducationInstitutionAccreditationStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_RecordStatus");

//                entity.HasOne(d => d.RefDegreeOrCertificateType)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.RefDegreeOrCertificateTypeId)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_RefDegree");

//                entity.HasOne(d => d.RefEducationVerificationMethod)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.RefEducationVerificationMethodId)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_RefEducationVerificationMethod");

//                entity.HasOne(d => d.RefHigherEducationInstitutionAccreditationStatus)
//                    .WithMany(p => p.PersonDegreeOrCertificates)
//                    .HasForeignKey(d => d.RefHigherEducationInstitutionAccreditationStatusId)
//                    .HasConstraintName("FK_PersonDegreeOrCertificate_RefHigherEdInstitutionAccredStatus");
//            });

//            modelBuilder.Entity<PersonDemographicRace>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonDemographicRaceId).HasComment("Surrogate Key");

//                entity.Property(e => e.FederalRaceAndEthnicityDeclined).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRaceId).HasComment("Foreign key - RefRace.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDemographicRaces)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDemographicRace_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonDemographicRaces)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonDemographicRace_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDemographicRaces)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDemographicRace_RecordStatus");

//                entity.HasOne(d => d.RefRace)
//                    .WithMany(p => p.PersonDemographicRaces)
//                    .HasForeignKey(d => d.RefRaceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_DemographicRace_RefRace");
//            });

//            modelBuilder.Entity<PersonDetail>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Birthdate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BirthdateVerification).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FirstName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GenerationCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HispanicLatinoEthnicity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LastName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MiddleName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Prefix).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighestEducationLevelCompletedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProofOfResidencyTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSexId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateOfResidenceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTribalAffiliationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefUscitizenshipStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefVisaTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDetail_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonDetail_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDetail_RecordStatus");

//                entity.HasOne(d => d.RefHighestEducationLevelCompleted)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefHighestEducationLevelCompletedId)
//                    .HasConstraintName("FK_PersonDetail_RefEducationLevel");

//                entity.HasOne(d => d.RefProofOfResidencyType)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefProofOfResidencyTypeId)
//                    .HasConstraintName("FK_PersonDetail_RefProofOfResidencyType");

//                entity.HasOne(d => d.RefSex)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefSexId)
//                    .HasConstraintName("FK_PersonDetail_RefSex");

//                entity.HasOne(d => d.RefStateOfResidence)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefStateOfResidenceId)
//                    .HasConstraintName("FK_PersonDetail_RefState");

//                entity.HasOne(d => d.RefTribalAffiliation)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefTribalAffiliationId)
//                    .HasConstraintName("FK_PersonDetail_RefTribalAffiliation");

//                entity.HasOne(d => d.RefUscitizenshipStatus)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefUscitizenshipStatusId)
//                    .HasConstraintName("FK_PersonDetail_RefUSCitizenshipStatus");

//                entity.HasOne(d => d.RefVisaType)
//                    .WithMany(p => p.PersonDetails)
//                    .HasForeignKey(d => d.RefVisaTypeId)
//                    .HasConstraintName("FK_PersonDetail_RefVisaType");
//            });

//            modelBuilder.Entity<PersonDigitalAccess>(entity =>
//            {
//                entity.Property(e => e.InternetAccessInResidence).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBarrierToInternetAccessInResidenceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInternetAccessTypeInResidenceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInternetPerformanceInResidenceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDigitalAccess_DataCollection");

//                entity.HasOne(d => d.PersonAddress)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.PersonAddressId)
//                    .HasConstraintName("FK_PersonDigitalAccess_PersonAddress");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonDigitalAccess_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDigitalAccess_RecordStatus");

//                entity.HasOne(d => d.RefBarrierToInternetAccessInResidence)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.RefBarrierToInternetAccessInResidenceId)
//                    .HasConstraintName("FK_PersonDigitalAccess_RefBarrierToInternetAccessInResidence");

//                entity.HasOne(d => d.RefInternetAccessTypeInResidence)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.RefInternetAccessTypeInResidenceId)
//                    .HasConstraintName("FK_PersonDigitalAccess_RefInternetAccessTypeInResidence");

//                entity.HasOne(d => d.RefInternetPerformanceInResidence)
//                    .WithMany(p => p.PersonDigitalAccesses)
//                    .HasForeignKey(d => d.RefInternetPerformanceInResidenceId)
//                    .HasConstraintName("FK_PersonDigitalAccess_RefInternetPerformanceInResidence");
//            });

//            modelBuilder.Entity<PersonDigitalAccessSpeed>(entity =>
//            {
//                entity.Property(e => e.InternetDownloadSpeed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InternetSpeedTestDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InternetUploadSpeed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDigitalAccessSpeeds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDigitalAccessSpeed_DataCollection");

//                entity.HasOne(d => d.PersonDigitalAccess)
//                    .WithMany(p => p.PersonDigitalAccessSpeeds)
//                    .HasForeignKey(d => d.PersonDigitalAccessId)
//                    .HasConstraintName("FK_PersonDigitalAccessSpeed_PersonDigitalAccess");

//                entity.HasOne(d => d.PersonLearningDevice)
//                    .WithMany(p => p.PersonDigitalAccessSpeeds)
//                    .HasForeignKey(d => d.PersonLearningDeviceId)
//                    .HasConstraintName("FK_PersonDigitalAccessSpeed_PersonLearningDevice");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDigitalAccessSpeeds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDigitalAccessSpeed_RecordStatus");
//            });

//            modelBuilder.Entity<PersonDisability>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonDisability_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonDisability_Person");

//                entity.HasOne(d => d.PrimaryDisabilityType)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.PrimaryDisabilityTypeId)
//                    .HasConstraintName("FK_PersonDisability_RefDisabilityType");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonDisability_RecordStatus");

//                entity.HasOne(d => d.RefAccommodationsNeededType)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RefAccommodationsNeededTypeId)
//                    .HasConstraintName("FK_PersonDisability_RefAccommodationsNeededType");

//                entity.HasOne(d => d.RefDisabilityConditionStatusCode)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RefDisabilityConditionStatusCodeId)
//                    .HasConstraintName("FK_PersonDisability_RefDisabilityConditionStatusCode");

//                entity.HasOne(d => d.RefDisabilityConditionType)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RefDisabilityConditionTypeId)
//                    .HasConstraintName("FK_PersonDisability_RefDisabilityConditionType");

//                entity.HasOne(d => d.RefDisabilityDeterminationSourceType)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RefDisabilityDeterminationSourceTypeId)
//                    .HasConstraintName("FK_PersonDisability_RefDisabilityDeterminationSourceType");

//                entity.HasOne(d => d.RefIdeadisabilityType)
//                    .WithMany(p => p.PersonDisabilities)
//                    .HasForeignKey(d => d.RefIdeadisabilityTypeId)
//                    .HasConstraintName("FK_PersonDisability_RefIDEADisabilityType");
//            });

//            modelBuilder.Entity<PersonEmailAddress>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonEmailAddressId).HasComment("Surrogate Key");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EmailAddress).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmailTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonEmailAddresses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonEmailAddress_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonEmailAddresses)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Person_Email_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonEmailAddresses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonEmailAddress_RecordStatus");

//                entity.HasOne(d => d.RefEmailType)
//                    .WithMany(p => p.PersonEmailAddresses)
//                    .HasForeignKey(d => d.RefEmailTypeId)
//                    .HasConstraintName("FK_PersonEmailAddress_RefEmailType");
//            });

//            modelBuilder.Entity<PersonFamily>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonFamilyId).HasComment("Surrogate Key");

//                entity.Property(e => e.FamilyIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FamilyIncome).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IncludedInCountedFamilySize).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfHouseholdCollegeStudents).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfPeopleInFamily).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfPeopleInHousehold).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCommunicationMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramEligibilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFamilyIncomeSourceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighestEducationLevelCompletedId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncomeCalculationMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProofOfResidencyTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonFamily_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonFamily_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonFamily_RecordStatus");

//                entity.HasOne(d => d.RefCommunicationMethod)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefCommunicationMethodId)
//                    .HasConstraintName("FK_PersonFamily_RefCommunicationMethod");

//                entity.HasOne(d => d.RefElprogramEligibility)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefElprogramEligibilityId)
//                    .HasConstraintName("FK_PersonFamily_RefELProgramEligibility");

//                entity.HasOne(d => d.RefFamilyIncomeSource)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefFamilyIncomeSourceId)
//                    .HasConstraintName("FK_PersonFamily_RefFamilyIncomeSource");

//                entity.HasOne(d => d.RefHighestEducationLevelCompleted)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefHighestEducationLevelCompletedId)
//                    .HasConstraintName("FK_PersonFamily_RefEducationLevel");

//                entity.HasOne(d => d.RefIncomeCalculationMethod)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefIncomeCalculationMethodId)
//                    .HasConstraintName("FK_PersonFamily_RefIncomeCalculation");

//                entity.HasOne(d => d.RefProofOfResidencyType)
//                    .WithMany(p => p.PersonFamilies)
//                    .HasForeignKey(d => d.RefProofOfResidencyTypeId)
//                    .HasConstraintName("FK_PersonFamily_RefProofOfResidencyType");
//            });

//            modelBuilder.Entity<PersonHealth>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonHealthId).HasComment("Surrogate Key");

//                entity.Property(e => e.DentalScreeningDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HealthScreeningEquipmentUsed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HealthScreeningFollowUpRecommendation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HearingScreeningDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDentalInsuranceCoverageTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDentalScreeningStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHealthInsuranceCoverageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHearingScreeningStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMedicalAlertIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefVisionScreeningStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.VisionScreeningDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonHealth_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonHealth_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonHealth_RecordStatus");

//                entity.HasOne(d => d.RefDentalInsuranceCoverageType)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefDentalInsuranceCoverageTypeId)
//                    .HasConstraintName("FK_PersonHealth_RefDentalInsuraceCoverageType");

//                entity.HasOne(d => d.RefDentalScreeningStatus)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefDentalScreeningStatusId)
//                    .HasConstraintName("FK_PersonHealth_RefDentalScreeningStatus");

//                entity.HasOne(d => d.RefHealthInsuranceCoverage)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefHealthInsuranceCoverageId)
//                    .HasConstraintName("FK_PersonHealth_RefHealthInsuranceCoverage");

//                entity.HasOne(d => d.RefHearingScreeningStatus)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefHearingScreeningStatusId)
//                    .HasConstraintName("FK_PersonHealth_RefHearingScreeningStatus");

//                entity.HasOne(d => d.RefMedicalAlertIndicator)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefMedicalAlertIndicatorId)
//                    .HasConstraintName("FK_PersonHealth_RefMedicalAlertIndicator");

//                entity.HasOne(d => d.RefVisionScreeningStatus)
//                    .WithMany(p => p.PersonHealths)
//                    .HasForeignKey(d => d.RefVisionScreeningStatusId)
//                    .HasConstraintName("FK_PersonHealth_RefVisionScreeningStatus");
//            });

//            modelBuilder.Entity<PersonHealthBirth>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.MultipleBirthIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTrimesterWhenPrenatalCareBeganId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WeeksOfGestation).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WeightAtBirth).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonHealthBirths)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonHealthBirth_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonHealthBirths)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonHealthBirth_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonHealthBirths)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonHealthBirth_RecordStatus");

//                entity.HasOne(d => d.RefTrimesterWhenPrenatalCareBegan)
//                    .WithMany(p => p.PersonHealthBirths)
//                    .HasForeignKey(d => d.RefTrimesterWhenPrenatalCareBeganId)
//                    .HasConstraintName("FK_PersonHealthBirth_RefTrimesterWhenPrenatalCareBegan");
//            });

//            modelBuilder.Entity<PersonHomelessness>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.HomelessnessStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHomelessNighttimeResidenceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonHomelessnesses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonHomelessness_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonHomelessnesses)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_HomelessPrimaryNighttimeResidence_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonHomelessnesses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonHomelessness_RecordStatus");

//                entity.HasOne(d => d.RefHomelessNighttimeResidence)
//                    .WithMany(p => p.PersonHomelessnesses)
//                    .HasForeignKey(d => d.RefHomelessNighttimeResidenceId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_HomelessPrimaryNighttimeResidence_RefHomelessNighttimeResid");
//            });

//            modelBuilder.Entity<PersonIdentifier>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonIdentifierId).HasComment("Surrogate Key");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonIdentificationSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonalInformationVerificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonIdentifiers)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonIdentifier_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonIdentifiers)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonIdentifier_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonIdentifiers)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonIdentifier_RecordStatus");

//                entity.HasOne(d => d.RefPersonIdentificationSystem)
//                    .WithMany(p => p.PersonIdentifiers)
//                    .HasForeignKey(d => d.RefPersonIdentificationSystemId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonIdentifier_RefIdentifierPerson");

//                entity.HasOne(d => d.RefPersonalInformationVerification)
//                    .WithMany(p => p.PersonIdentifiers)
//                    .HasForeignKey(d => d.RefPersonalInformationVerificationId)
//                    .HasConstraintName("FK_PersonIdentifier_RefPersonInfoVerification");
//            });

//            modelBuilder.Entity<PersonImmunization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonImmunizationId).HasComment("PK");

//                entity.Property(e => e.ImmunizationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefImmunizationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonImmunizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonImmunization_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonImmunizations)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonImmunization_Person1");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonImmunizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonImmunization_RecordStatus");

//                entity.HasOne(d => d.RefImmunizationType)
//                    .WithMany(p => p.PersonImmunizations)
//                    .HasForeignKey(d => d.RefImmunizationTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonImmunization_RefImmunization");
//            });

//            modelBuilder.Entity<PersonLanguage>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonLanguageId).HasComment("Surrogate Key");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageUseTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonLanguages)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonLanguage_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonLanguages)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonLanguage_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonLanguages)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonLanguage_RecordStatus");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.PersonLanguages)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonLanguage_RefLanguage");

//                entity.HasOne(d => d.RefLanguageUseType)
//                    .WithMany(p => p.PersonLanguages)
//                    .HasForeignKey(d => d.RefLanguageUseTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonLanguage_RefLanguageUseType");
//            });

//            modelBuilder.Entity<PersonLearningDevice>(entity =>
//            {
//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrimaryLearningDeviceAccessId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrimaryLearningDeviceAwayFromSchoolId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrimaryLearningDeviceProviderId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonLearningDevice_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonLearningDevice_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonLearningDevice_RecordStatus");

//                entity.HasOne(d => d.RefPrimaryLearningDeviceAccess)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.RefPrimaryLearningDeviceAccessId)
//                    .HasConstraintName("FK_PersonLearningDevice_RefPrimaryLearningDeviceAccess");

//                entity.HasOne(d => d.RefPrimaryLearningDeviceAwayFromSchool)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.RefPrimaryLearningDeviceAwayFromSchoolId)
//                    .HasConstraintName("FK_PersonLearningDevice_RefPrimaryLearningDeviceAwayFromSchool");

//                entity.HasOne(d => d.RefPrimaryLearningDeviceProvider)
//                    .WithMany(p => p.PersonLearningDevices)
//                    .HasForeignKey(d => d.RefPrimaryLearningDeviceProviderId)
//                    .HasConstraintName("FK_PersonLearningDevice_RefPrimaryLearningDeviceProvider");
//            });

//            modelBuilder.Entity<PersonMaster>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonMasterId).ValueGeneratedNever();

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonMasters)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonMaster_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonMasters)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonMaster_RecordStatus");
//            });

//            modelBuilder.Entity<PersonMilitary>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryActiveStudentIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryBranchId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryConnectedStudentIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryVeteranStudentIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonMilitary_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonMilitary_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonMilitary_RecordStatus");

//                entity.HasOne(d => d.RefMilitaryActiveStudentIndicator)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.RefMilitaryActiveStudentIndicatorId)
//                    .HasConstraintName("FK_PersonMilitary_RefMilitaryActiveStudentIndicator");

//                entity.HasOne(d => d.RefMilitaryBranch)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.RefMilitaryBranchId)
//                    .HasConstraintName("FK_PersonMilitary_RefMilitaryBranch");

//                entity.HasOne(d => d.RefMilitaryConnectedStudentIndicator)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.RefMilitaryConnectedStudentIndicatorId)
//                    .HasConstraintName("FK_PersonMilitary_RefMilitaryConnectedStudentIndicator");

//                entity.HasOne(d => d.RefMilitaryVeteranStudentIndicator)
//                    .WithMany(p => p.PersonMilitaries)
//                    .HasForeignKey(d => d.RefMilitaryVeteranStudentIndicatorId)
//                    .HasConstraintName("FK_PersonMilitary_RefMilitaryVeteranStudentIndicator");
//            });

//            modelBuilder.Entity<PersonOtherName>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonOtherNameId).HasComment("Surrogate Key");

//                entity.Property(e => e.FirstName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LastName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MiddleName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OtherName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOtherNameTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonOtherNames)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonOtherName_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonOtherNames)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonOtherName_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonOtherNames)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonOtherName_RecordStatus");

//                entity.HasOne(d => d.RefOtherNameType)
//                    .WithMany(p => p.PersonOtherNames)
//                    .HasForeignKey(d => d.RefOtherNameTypeId)
//                    .HasConstraintName("FK_PersonOtherName__RefOtherNameType");
//            });

//            modelBuilder.Entity<PersonPersonalInformationVerification>(entity =>
//            {
//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonalInformationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonalInformationVerificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_DataCollection");

//                entity.HasOne(d => d.PersonAddress)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.PersonAddressId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_PersonAddress");

//                entity.HasOne(d => d.PersonDetail)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.PersonDetailId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_PersonDetail");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_Person");

//                entity.HasOne(d => d.PersonTelephone)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.PersonTelephoneId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_PersonTelephone");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_RecordStatus");

//                entity.HasOne(d => d.RefPersonalInformationType)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.RefPersonalInformationTypeId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_RefPersonalInformationType");

//                entity.HasOne(d => d.RefPersonalInformationVerification)
//                    .WithMany(p => p.PersonPersonalInformationVerifications)
//                    .HasForeignKey(d => d.RefPersonalInformationVerificationId)
//                    .HasConstraintName("FK_PersonPersonalInformationVerification_RefPersonalInformationVerification");
//            });

//            modelBuilder.Entity<PersonProgramParticipation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramEntryReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonProgramParticipation_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonProgramParticipation_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonProgramParticipation_RecordStatus");

//                entity.HasOne(d => d.RefParticipationType)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.RefParticipationTypeId)
//                    .HasConstraintName("FK_PersonProgramParticipation_RefParticipationType");

//                entity.HasOne(d => d.RefProgramEntryReason)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.RefProgramEntryReasonId)
//                    .HasConstraintName("FK_PersonProgramParticipation_RefProgramEntryReason");

//                entity.HasOne(d => d.RefProgramExitReason)
//                    .WithMany(p => p.PersonProgramParticipations)
//                    .HasForeignKey(d => d.RefProgramExitReasonId)
//                    .HasConstraintName("FK_PersonProgramParticipation_RefProgramExitReason");
//            });

//            modelBuilder.Entity<PersonReferral>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonReferralId).HasComment("Surrogate key");

//                entity.Property(e => e.PersonId).HasComment("Surrogate key from Person");

//                entity.Property(e => e.Reason).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReferralOutcomeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReferralDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReferralTypeReceived).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReferredTo).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Source).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonReferrals)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonReferral_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonReferrals)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonReferral_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonReferrals)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonReferral_RecordStatus");

//                entity.HasOne(d => d.RefReferralOutcome)
//                    .WithMany(p => p.PersonReferrals)
//                    .HasForeignKey(d => d.RefReferralOutcomeId)
//                    .HasConstraintName("FK_PersonReferral_RefReferralOutcome");
//            });

//            modelBuilder.Entity<PersonRelationship>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonRelationshipId).HasComment("Surrogate Key");

//                entity.Property(e => e.ContactPriorityNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ContactRestrictions).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CustodialRelationshipIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EmergencyContactInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LivesWithIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.PrimaryContactIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonRelationshipTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RelatedPersonId).HasComment("Foreign key - Person.  Identifies the other person.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonRelationships)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonRelationship_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonRelationshipPeople)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonRelationship_Person_Primary");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonRelationships)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonRelationship_RecordStatus");

//                entity.HasOne(d => d.RefPersonRelationshipType)
//                    .WithMany(p => p.PersonRelationships)
//                    .HasForeignKey(d => d.RefPersonRelationshipTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonRelationship_RefRelationship");

//                entity.HasOne(d => d.RelatedPerson)
//                    .WithMany(p => p.PersonRelationshipRelatedPeople)
//                    .HasForeignKey(d => d.RelatedPersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonRelationship_Person_Secondary");
//            });

//            modelBuilder.Entity<PersonStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonStatusTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusValue).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonStatuses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonStatus_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonStatuses)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonStatus_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonStatuses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonStatus_RecordStatus");

//                entity.HasOne(d => d.RefPersonStatusType)
//                    .WithMany(p => p.PersonStatuses)
//                    .HasForeignKey(d => d.RefPersonStatusTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonStatus_RefPersonStatusType");
//            });

//            modelBuilder.Entity<PersonTelephone>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PersonTelephoneId).HasComment("Surrogate Key");

//                entity.Property(e => e.DoNotPublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person.");

//                entity.Property(e => e.PrimaryTelephoneNumberIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonTelephoneNumberTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTelephoneNumberListedStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TelephoneNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PersonTelephones)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PersonTelephone_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.PersonTelephones)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PersonPhone_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PersonTelephones)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PersonTelephone_RecordStatus");

//                entity.HasOne(d => d.RefPersonTelephoneNumberType)
//                    .WithMany(p => p.PersonTelephones)
//                    .HasForeignKey(d => d.RefPersonTelephoneNumberTypeId)
//                    .HasConstraintName("FK_PersonPhone_RefPersonTelephoneType");

//                entity.HasOne(d => d.RefTelephoneNumberListedStatus)
//                    .WithMany(p => p.PersonTelephones)
//                    .HasForeignKey(d => d.RefTelephoneNumberListedStatusId)
//                    .HasConstraintName("FK_PersonTelephone_RefTelephoneNumberListedStatus");
//            });

//            modelBuilder.Entity<ProfessionalDevelopmentActivity>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProfessionalDevelopmentActivityId).HasComment("Surrogate Key");

//                entity.Property(e => e.ActivityCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActivityIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ApprovalCode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Cost).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseId).HasComment("Foreign key - Course.");

//                entity.Property(e => e.Credits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Objective).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProfessionalDevelopmentActivityStateApprovedStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProfessionalDevelopmentRequirementId).HasComment("Foreign key - ProfessionaDevelopmentRequirement.");

//                entity.Property(e => e.PublishIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditUnitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityApprovedPurposeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdaudienceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalDevelopmentFinancialSupportId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScholarshipStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.CourseId)
//                    .HasConstraintName("FK_PDSession_Course");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_DataCollection");

//                entity.HasOne(d => d.ProfessionalDevelopmentRequirement)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentRequirementId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDSession_PDRequirement");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RecordStatus");

//                entity.HasOne(d => d.RefCourseCreditUnit)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefCourseCreditUnitId)
//                    .HasConstraintName("FK_PDSession_RefCourseCreditUnit");

//                entity.HasOne(d => d.RefPdactivityApprovedPurpose)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefPdactivityApprovedPurposeId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RefPDActivityApprovedFor");

//                entity.HasOne(d => d.RefPdactivityCreditType)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefPdactivityCreditTypeId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RefPDActivityCreditType");

//                entity.HasOne(d => d.RefPdactivityLevel)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefPdactivityLevelId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RefPDActivityLevel");

//                entity.HasOne(d => d.RefPdactivityType)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefPdactivityTypeId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RefPDActivityType");

//                entity.HasOne(d => d.RefPdaudienceType)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefPdaudienceTypeId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentActivity_RefPDAudienceType");

//                entity.HasOne(d => d.RefProfessionalDevelopmentFinancialSupport)
//                    .WithMany(p => p.ProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefProfessionalDevelopmentFinancialSupportId)
//                    .HasConstraintName("FK_PDSession_RefProfDevFinancialSupport");
//            });

//            modelBuilder.Entity<ProfessionalDevelopmentRequirement>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProfessionalDevelopmentRequirementId).HasComment("Surrogate Key");

//                entity.Property(e => e.CompetencySetId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RequiredTrainingClockHours).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CompetencySet)
//                    .WithMany(p => p.ProfessionalDevelopmentRequirements)
//                    .HasForeignKey(d => d.CompetencySetId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentRequirement_CompetencySet");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProfessionalDevelopmentRequirements)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentRequirement_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ProfessionalDevelopmentRequirements)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProfessionalDevelopmentRequirement_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProfessionalDevelopmentRequirements)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentRequirement_RecordStatus");
//            });

//            modelBuilder.Entity<ProfessionalDevelopmentSession>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProfessionalDevelopmentSessionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Capacity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EvaluationMethod).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EvaluationScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ExpirationDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FundingSource).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.LocationName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProfessionalDevelopmentActivityId).HasComment("Foreign key - Professional Development Activity");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEltrainerCoreKnowledgeAreaId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPddeliveryMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdinstructionalDeliveryModeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdsessionStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SessionIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SponsoringAgencyName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TrainingAndTechnicalAssistanceLevel).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentSession_DataCollection");

//                entity.HasOne(d => d.ProfessionalDevelopmentActivity)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentActivityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDSession_PDActivity");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentSession_RecordStatus");

//                entity.HasOne(d => d.RefEltrainerCoreKnowledgeArea)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.RefEltrainerCoreKnowledgeAreaId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentSession_RefELTrainerCoreKnowledgeArea");

//                entity.HasOne(d => d.RefLanguage)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.RefLanguageId)
//                    .HasConstraintName("FK_PDSession_RefLanguage");

//                entity.HasOne(d => d.RefPdinstructionalDeliveryMode)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.RefPdinstructionalDeliveryModeId)
//                    .HasConstraintName("FK_PDSession_RefPDInstructionalDeliveryMode");

//                entity.HasOne(d => d.RefPdsessionStatus)
//                    .WithMany(p => p.ProfessionalDevelopmentSessions)
//                    .HasForeignKey(d => d.RefPdsessionStatusId)
//                    .HasConstraintName("FK_PDSession_RefPDSessionStatus");
//            });

//            modelBuilder.Entity<ProfessionalDevelopmentSessionInstructor>(entity =>
//            {
//                entity.HasKey(e => e.ProfessionalDevelopmentSessionInstructorId)
//                    .IsClustered(false);

//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ProfessionalDevelopmentSessionInstructorId).HasComment("Surrogate key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key to OrganizationPersonRole");

//                entity.Property(e => e.ProfessionalDevelopmentSessionId).HasComment("Foreign key to ProfessionalDevelopmentSession");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProfessionalDevelopmentSessionInstructors)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentSessionInstructor_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ProfessionalDevelopmentSessionInstructors)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDSessionInstructor_OrgPersonRole");

//                entity.HasOne(d => d.ProfessionalDevelopmentSession)
//                    .WithMany(p => p.ProfessionalDevelopmentSessionInstructors)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDSessionInstructor_PDSession");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProfessionalDevelopmentSessionInstructors)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProfessionalDevelopmentSessionInstructor_RecordStatus");
//            });

//            modelBuilder.Entity<Program>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CreditsRequired).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate key from Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Programs)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Program_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.Programs)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_Program_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Programs)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Program_RecordStatus");
//            });

//            modelBuilder.Entity<ProgramParticipationAe>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OutOfWorkforceIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdultEducationProgramExitReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationAE_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationAE_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RecordStatus");

//                entity.HasOne(d => d.RefAdultEducationProgramExitReason)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAdultEducationProgramExitReasonId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefAdultEducationProgramExitReason");

//                entity.HasOne(d => d.RefAeFunctioningLevelAtIntake)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAeFunctioningLevelAtIntakeId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefAeFunctioningLevelAtIntake");

//                entity.HasOne(d => d.RefAeFunctioningLevelAtPosttest)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAeFunctioningLevelAtPosttestId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefAeFunctioningLevelAtPosttest");

//                entity.HasOne(d => d.RefAeInstructionalProgramType)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAeInstructionalProgramTypeId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefAeInstructionalProgramType");

//                entity.HasOne(d => d.RefAePostsecondaryTransitionAction)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAePostsecondaryTransitionActionId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefAePostsecondaryTransitionAction");

//                entity.HasOne(d => d.RefAeSpecialProgramType)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefAeSpecialProgramTypeId)
//                    .HasConstraintName("FK_ProgramParticipation_RefAeSpecialProgramType");

//                entity.HasOne(d => d.RefCorrectionalEducationFacilityType)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefCorrectionalEducationFacilityTypeId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefCorrectionalEducationFacilityType");

//                entity.HasOne(d => d.RefGoalsForAttendingAdultEducation)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefGoalsForAttendingAdultEducationId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefGoalsForAttendingAdultEducation");

//                entity.HasOne(d => d.RefWorkbasedLearningOpportunityType)
//                    .WithMany(p => p.ProgramParticipationAes)
//                    .HasForeignKey(d => d.RefWorkbasedLearningOpportunityTypeId)
//                    .HasConstraintName("FK_ProgramParticipationAE_RefWorkbasedLearningOpportunityType");
//            });

//            modelBuilder.Entity<ProgramParticipationAttainment>(entity =>
//            {
//                entity.Property(e => e.AecredentialAttainmentEmployedIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AecredentialAttainmentPscredentialIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AecredentialAttainmentPsenrollmentIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEdFactsAcademicOrCareerAndTechnicalOutcomeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationAttainments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationAttainment_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationAttainments)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationAttainment_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationAttainments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationAttainment_RecordStatus");

//                entity.HasOne(d => d.RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitType)
//                    .WithMany(p => p.ProgramParticipationAttainments)
//                    .HasForeignKey(d => d.RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitTypeId)
//                    .HasConstraintName("FK_ProgramParticipationAttainment_RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitType");

//                entity.HasOne(d => d.RefEdFactsAcademicOrCareerAndTechnicalOutcomeType)
//                    .WithMany(p => p.ProgramParticipationAttainments)
//                    .HasForeignKey(d => d.RefEdFactsAcademicOrCareerAndTechnicalOutcomeTypeId)
//                    .HasConstraintName("FK_ProgramParticipationAttainment_RefEdFactsAcademicOrCareerAndTechnicalOutcomeType");
//            });

//            modelBuilder.Entity<ProgramParticipationCte>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CareerPathwaysProgramParticipationExitDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OutOfWorkforceIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationCtes)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationCte_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationCtes)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationCte_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationCtes)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationCte_RecordStatus");

//                entity.HasOne(d => d.RefNonTraditionalGenderStatus)
//                    .WithMany(p => p.ProgramParticipationCtes)
//                    .HasForeignKey(d => d.RefNonTraditionalGenderStatusId)
//                    .HasConstraintName("FK_ProgramParticipationCte_RefNonTraditionalGenderStatus");

//                entity.HasOne(d => d.RefWorkbasedLearningOpportunityType)
//                    .WithMany(p => p.ProgramParticipationCtes)
//                    .HasForeignKey(d => d.RefWorkbasedLearningOpportunityTypeId)
//                    .HasConstraintName("FK_ProgramParticipationCte_RefWorkbasedLearningOpportunityType");
//            });

//            modelBuilder.Entity<ProgramParticipationFoodService>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationFoodServices)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationFoodService_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationFoodServices)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationFoodSrvc_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationFoodServices)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationFoodService_RecordStatus");

//                entity.HasOne(d => d.RefSchoolFoodServiceProgram)
//                    .WithMany(p => p.ProgramParticipationFoodServices)
//                    .HasForeignKey(d => d.RefSchoolFoodServiceProgramId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationFoodSrvc_RefSchoolFoodServiceProgram");
//            });

//            modelBuilder.Entity<ProgramParticipationMigrant>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefQualifyingMoveFromCountryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_DataCollection");

//                entity.HasOne(d => d.DesignatedGraduationSchool)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.DesignatedGraduationSchoolId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_Organization");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RecordStatus");

//                entity.HasOne(d => d.RefContinuationOfServicesReason)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefContinuationOfServicesReasonId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefContinuationOfServices");

//                entity.HasOne(d => d.RefMepEnrollmentType)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefMepEnrollmentTypeId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefMEPEnrollmentType");

//                entity.HasOne(d => d.RefMepProjectBased)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefMepProjectBasedId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefMEPProjectBased");

//                entity.HasOne(d => d.RefMepServiceType)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefMepServiceTypeId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefMEPServiceType");

//                entity.HasOne(d => d.RefQualifyingMoveFromCountry)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefQualifyingMoveFromCountryId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefCountry");

//                entity.HasOne(d => d.RefQualifyingMoveFromState)
//                    .WithMany(p => p.ProgramParticipationMigrants)
//                    .HasForeignKey(d => d.RefQualifyingMoveFromStateId)
//                    .HasConstraintName("FK_ProgramParticipationMigrant_RefState");
//            });

//            modelBuilder.Entity<ProgramParticipationNeglected>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationNeglecteds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationNeglected_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationNeglecteds)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationNeglected_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationNeglecteds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationNeglected_RecordStatus");

//                entity.HasOne(d => d.RefNeglectedProgramType)
//                    .WithMany(p => p.ProgramParticipationNeglecteds)
//                    .HasForeignKey(d => d.RefNeglectedProgramTypeId)
//                    .HasConstraintName("FK_ProgramParticipationNeglected_RefNeglectedProgramType");
//            });

//            modelBuilder.Entity<ProgramParticipationSpecialEducation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaeducationalEnvironmentSchoolAgeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSpecialEducationExitReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SpecialEducationServicesExitDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEducation_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEducation_PersonProgramParticipat");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEducation_RecordStatus");

//                entity.HasOne(d => d.RefIdeaeducationalEnvironmentEc)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.RefIdeaeducationalEnvironmentEcid)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEd_RefIDEAEdEnvironmentForEC");

//                entity.HasOne(d => d.RefIdeaeducationalEnvironmentSchoolAge)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.RefIdeaeducationalEnvironmentSchoolAgeId)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEd_RefIDEAEdEnvironmentSchoolAge");

//                entity.HasOne(d => d.RefSpecialEducationExitReason)
//                    .WithMany(p => p.ProgramParticipationSpecialEducations)
//                    .HasForeignKey(d => d.RefSpecialEducationExitReasonId)
//                    .HasConstraintName("FK_ProgramParticipationSpecialEd_RefSpecialEducationExitReason");
//            });

//            modelBuilder.Entity<ProgramParticipationTeacherPrep>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SchoolAgeEducationPscredits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationTeacherPrep_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationTeacherPrep_RecordStatus");

//                entity.HasOne(d => d.RefAltRouteToCertificationOrLicensure)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefAltRouteToCertificationOrLicensureId)
//                    .HasConstraintName("FK_ProgramParticipationTeacherPrep_RefAltRouteToCertificationOrLicensure");

//                entity.HasOne(d => d.RefCriticalTeacherShortageCandidate)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefCriticalTeacherShortageCandidateId)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_RefCritTeachShortageCandidate");

//                entity.HasOne(d => d.RefSupervisedClinicalExperience)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefSupervisedClinicalExperienceId)
//                    .HasConstraintName("FK_ProgramParticipationTeacherPrep_RefSupervisedClinicalExper");

//                entity.HasOne(d => d.RefTeacherPrepCompleterStatus)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefTeacherPrepCompleterStatusId)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_RefTeacherPrepCompleterStatus");

//                entity.HasOne(d => d.RefTeacherPrepEnrollmentStatus)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefTeacherPrepEnrollmentStatusId)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_RefTeacherPrepEnrollStatus");

//                entity.HasOne(d => d.RefTeachingCredentialBasis)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefTeachingCredentialBasisId)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_RefTeachingCredentialBasis");

//                entity.HasOne(d => d.RefTeachingCredentialType)
//                    .WithMany(p => p.ProgramParticipationTeacherPreps)
//                    .HasForeignKey(d => d.RefTeachingCredentialTypeId)
//                    .HasConstraintName("FK_PrgmParticipationTeacherPrep_RefTeachingCredentialType");
//            });

//            modelBuilder.Entity<ProgramParticipationTitleI>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationTitleIs)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationTitleI_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationTitleIs)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationTitleI_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationTitleIs)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationTitleI_RecordStatus");

//                entity.HasOne(d => d.RefTitleIindicator)
//                    .WithMany(p => p.ProgramParticipationTitleIs)
//                    .HasForeignKey(d => d.RefTitleIindicatorId)
//                    .HasConstraintName("FK_ProgramParticipationTitleI_RefTitleIIndicator");
//            });

//            modelBuilder.Entity<ProgramParticipationTitleIiilep>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiilanguageInstructionProgramTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationTitleIiileps)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationTitleIIILep_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationTitleIiileps)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationTitleIII_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationTitleIiileps)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationTitleIIILep_RecordStatus");

//                entity.HasOne(d => d.RefTitleIiiaccountability)
//                    .WithMany(p => p.ProgramParticipationTitleIiileps)
//                    .HasForeignKey(d => d.RefTitleIiiaccountabilityId)
//                    .HasConstraintName("FK_ProgramParticipationTitleIIILep_RefTitleIIIAccountability");

//                entity.HasOne(d => d.RefTitleIiilanguageInstructionProgramType)
//                    .WithMany(p => p.ProgramParticipationTitleIiileps)
//                    .HasForeignKey(d => d.RefTitleIiilanguageInstructionProgramTypeId)
//                    .HasConstraintName("FK_ProgramParticipationTitleIIILEP_RefTitleIIILangInstrPrgm");
//            });

//            modelBuilder.Entity<ProgramParticipationWioa>(entity =>
//            {
//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WioacareerServices).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WioatrainingServices).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationWioas)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationWIOA_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.ProgramParticipationWioas)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationWIOA_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationWioas)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationWIOA_RecordStatus");
//            });

//            modelBuilder.Entity<ProgramParticipationWioabarrier>(entity =>
//            {
//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWioabarrierstoEmploymentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ProgramParticipationWioabarriers)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ProgramParticipationWIOABarriers_DataCollection");

//                entity.HasOne(d => d.ProgramParticipationWioa)
//                    .WithMany(p => p.ProgramParticipationWioabarriers)
//                    .HasForeignKey(d => d.ProgramParticipationWioaid)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ProgramParticipationWIOABarriers_ProgramParticipationWIOA");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ProgramParticipationWioabarriers)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ProgramParticipationWIOABarriers_RecordStatus");

//                entity.HasOne(d => d.RefWioabarrierstoEmployment)
//                    .WithMany(p => p.ProgramParticipationWioabarriers)
//                    .HasForeignKey(d => d.RefWioabarrierstoEmploymentId)
//                    .HasConstraintName("FK_ProgramParticipationWIOABarriers_RefWIOABarrierstoEmployment");
//            });

//            modelBuilder.Entity<PsCourse>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NcaaeligibilityInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OriginalCourseIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OverrideSchoolCourseNumber).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditBasisTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditLevelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNcescollegeCourseMapCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.Course)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.CourseId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsCourse_Course");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsCourse_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsCourse_RecordStatus");

//                entity.HasOne(d => d.RefCipCode)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.RefCipCodeId)
//                    .HasConstraintName("FK_PsCourse_RefCipCode");

//                entity.HasOne(d => d.RefCourseCreditBasisType)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.RefCourseCreditBasisTypeId)
//                    .HasConstraintName("FK_PsCourse_RefCourseCreditBasisType");

//                entity.HasOne(d => d.RefCourseCreditLevelType)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.RefCourseCreditLevelTypeId)
//                    .HasConstraintName("FK_PsCourse_RefCourseCreditLevelType");

//                entity.HasOne(d => d.RefNcescollegeCourseMapCode)
//                    .WithMany(p => p.PsCourses)
//                    .HasForeignKey(d => d.RefNcescollegeCourseMapCodeId)
//                    .HasConstraintName("FK_PsCourse_RefNCESCollegeCourseMapCode");
//            });

//            modelBuilder.Entity<PsInstitution>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.InstitutionallyControlledHousingStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdministrativeFundingControlId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmissionConsiderationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmissionConsiderationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCarnegieBasicClassificationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefControlOfInstitutionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncreasedLearningTimeTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLevelOfInstitutionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPredominantCalendarSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTenureSystemId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.VirtualIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsInstitution_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_PsInstitution_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsInstitution_RecordStatus");

//                entity.HasOne(d => d.RefAdministrativeFundingControl)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefAdministrativeFundingControlId)
//                    .HasConstraintName("FK_PsInstitution_RefAdministrativeFundingControl");

//                entity.HasOne(d => d.RefAdmissionConsiderationLevel)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefAdmissionConsiderationLevelId)
//                    .HasConstraintName("FK_PsInstitution_RefAdmissionConsiderationLevel");

//                entity.HasOne(d => d.RefAdmissionConsiderationType)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefAdmissionConsiderationTypeId)
//                    .HasConstraintName("FK_PsInstitution_RefAdmissionConsiderationType");

//                entity.HasOne(d => d.RefCarnegieBasicClassification)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefCarnegieBasicClassificationId)
//                    .HasConstraintName("FK_PsInstitution_RefClassification");

//                entity.HasOne(d => d.RefControlOfInstitution)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefControlOfInstitutionId)
//                    .HasConstraintName("FK_PsInstitution_RefControlOfInstitution");

//                entity.HasOne(d => d.RefIncreasedLearningTimeType)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefIncreasedLearningTimeTypeId)
//                    .HasConstraintName("FK_PsInstitution_RefIncreasedLearningTimeType");

//                entity.HasOne(d => d.RefLevelOfInstitution)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefLevelOfInstitutionId)
//                    .HasConstraintName("FK_PsInstitution_RefLevelOfInstitution");

//                entity.HasOne(d => d.RefPredominantCalendarSystem)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefPredominantCalendarSystemId)
//                    .HasConstraintName("FK_PsInstitution_RefPredominantCalendarSystem");

//                entity.HasOne(d => d.RefTenureSystem)
//                    .WithMany(p => p.PsInstitutions)
//                    .HasForeignKey(d => d.RefTenureSystemId)
//                    .HasConstraintName("FK_PsInstitution_RefTenureSystem");
//            });

//            modelBuilder.Entity<PsPriceOfAttendance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PspriceOfAttendanceId).HasComment("Surrogate Key");

//                entity.Property(e => e.BoardCharges).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.BooksAndSuppliesCosts).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ComprehensiveFee).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.IpedscollectionYearDesignator)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OtherStudentExpenses).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PriceOfAttendance).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTuitionUnitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RequiredStudentFees).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RoomCharges).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SessionDesignator)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TuitionPublished).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsPriceOfAttendances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsPriceOfAttendance_DataCollection");

//                entity.HasOne(d => d.PsInstitution)
//                    .WithMany(p => p.PsPriceOfAttendances)
//                    .HasForeignKey(d => d.PsInstitutionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsPriceOfAttendance_PsInstitution");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsPriceOfAttendances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsPriceOfAttendance_RecordStatus");

//                entity.HasOne(d => d.RefTuitionUnit)
//                    .WithMany(p => p.PsPriceOfAttendances)
//                    .HasForeignKey(d => d.RefTuitionUnitId)
//                    .HasConstraintName("FK_PsPriceOfAttendance_RefTuitionUnit");
//            });

//            modelBuilder.Entity<PsProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsProgramId).HasComment("Surrogate key");

//                entity.Property(e => e.NormalLengthTimeForCompletion).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.ProgramLengthHours).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipVersionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDqpcategoriesOfLearningId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramLengthHoursTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsprogramLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTimeForCompletionUnitsId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsProgram_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsProgram_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsProgram_RecordStatus");

//                entity.HasOne(d => d.RefCipCode)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefCipCodeId)
//                    .HasConstraintName("FK_PsProgram_RefCipCode");

//                entity.HasOne(d => d.RefCipVersion)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefCipVersionId)
//                    .HasConstraintName("FK_PsProgram_RefCipVersion");

//                entity.HasOne(d => d.RefDqpcategoriesOfLearning)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefDqpcategoriesOfLearningId)
//                    .HasConstraintName("FK_PsProgram_RefDQPCategoriesOfLearning");

//                entity.HasOne(d => d.RefProgramLengthHoursType)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefProgramLengthHoursTypeId)
//                    .HasConstraintName("FK_PsProgram_RefProgramLengthHoursType");

//                entity.HasOne(d => d.RefPsprogramLevel)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefPsprogramLevelId)
//                    .HasConstraintName("FK_PSProgram_RefPSProgramLevel");

//                entity.HasOne(d => d.RefTimeForCompletionUnits)
//                    .WithMany(p => p.PsPrograms)
//                    .HasForeignKey(d => d.RefTimeForCompletionUnitsId)
//                    .HasConstraintName("FK_PsProgram_RefTimeForCompletionUnits");
//            });

//            modelBuilder.Entity<PsSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.GradeValueQualifier)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseGpaapplicabilityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseHonorsTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInstructionMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseLevelTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEducationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWorkbasedLearningOpportunityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.CourseSection)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.CourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsSection_Organization");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsSection_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsSection_RecordStatus");

//                entity.HasOne(d => d.RefCipCode)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefCipCodeId)
//                    .HasConstraintName("FK_PsSection_RefCipCode");

//                entity.HasOne(d => d.RefCourseGpaapplicability)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefCourseGpaapplicabilityId)
//                    .HasConstraintName("FK_PsSection _RefCourseGpaApplicability");

//                entity.HasOne(d => d.RefCourseHonorsType)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefCourseHonorsTypeId)
//                    .HasConstraintName("FK_PsSection _RefCourseHonorsType");

//                entity.HasOne(d => d.RefCourseInstructionMethod)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefCourseInstructionMethodId)
//                    .HasConstraintName("FK_PsSection _RefCourseInstructionMethod");

//                entity.HasOne(d => d.RefCourseLevelType)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefCourseLevelTypeId)
//                    .HasConstraintName("FK_PsSection _RefCourseLevelType");

//                entity.HasOne(d => d.RefDevelopmentalEducationType)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefDevelopmentalEducationTypeId)
//                    .HasConstraintName("FK_PsSection_RefDevelopmentalEducationType");

//                entity.HasOne(d => d.RefWorkbasedLearningOpportunityType)
//                    .WithMany(p => p.PsSections)
//                    .HasForeignKey(d => d.RefWorkbasedLearningOpportunityTypeId)
//                    .HasConstraintName("FK_PsSection_RefWorkbasedLearningOpportunityType");
//            });

//            modelBuilder.Entity<PsSectionLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseInstructionSiteName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInstructionSiteTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsSectionLocations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsSectionLocation_DataCollection");

//                entity.HasOne(d => d.PsSection)
//                    .WithMany(p => p.PsSectionLocations)
//                    .HasForeignKey(d => d.PsSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsSectionLocation_PsSection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsSectionLocations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsSectionLocation_RecordStatus");

//                entity.HasOne(d => d.RefCourseInstructionSiteType)
//                    .WithMany(p => p.PsSectionLocations)
//                    .HasForeignKey(d => d.RefCourseInstructionSiteTypeId)
//                    .HasConstraintName("FK_PsSectionLocation_RefCourseInstructionSiteType");
//            });

//            modelBuilder.Entity<PsStaffEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AnnualBaseContractualSalary).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FacultyStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GraduateAssistantStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalStaffStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MedicalSchoolStaffStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicRankId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentContractTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFullTimeStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGraduateAssistantIpedsCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionCreditTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalStaffContractLengthId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalStaffFacultyTenureId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIpedsOccupationalCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffEmploymentId).HasComment("PK - Foreign key from StaffEmployment");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStaffEmployment_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStaffEmployment_RecordStatus");

//                entity.HasOne(d => d.RefAcademicRank)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefAcademicRankId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefAcademicRank");

//                entity.HasOne(d => d.RefEmploymentContractType)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefEmploymentContractTypeId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefEmploymentContractType");

//                entity.HasOne(d => d.RefFullTimeStatus)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefFullTimeStatusId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefFullTimeStatus");

//                entity.HasOne(d => d.RefGraduateAssistantIpedsCategory)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefGraduateAssistantIpedsCategoryId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefGraduateAssistIpedsCategory");

//                entity.HasOne(d => d.RefInstructionCreditType)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefInstructionCreditTypeId)
//                    .HasConstraintName("FK_PsStaffEmployment_InstructionCreditType");

//                entity.HasOne(d => d.RefInstructionalStaffContractLength)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefInstructionalStaffContractLengthId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefInstructStaffContractLength");

//                entity.HasOne(d => d.RefInstructionalStaffFacultyTenure)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefInstructionalStaffFacultyTenureId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefInstructStaffFacultyTenure");

//                entity.HasOne(d => d.RefIpedsOccupationalCategory)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.RefIpedsOccupationalCategoryId)
//                    .HasConstraintName("FK_PsStaffEmployment_RefIpedsOccupationalCategory");

//                entity.HasOne(d => d.StaffEmployment)
//                    .WithMany(p => p.PsStaffEmployments)
//                    .HasForeignKey(d => d.StaffEmploymentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStaffEmployment_StaffEmployment");
//            });

//            modelBuilder.Entity<PsStudentAcademicAward>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsStudentAcademicAwardId).HasComment("Surrogate key.");

//                entity.Property(e => e.AcademicAwardDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AcademicAwardTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicAwardLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentAcademicAward_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentAcademicAward_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentAcademicAward_RecordStatus");

//                entity.HasOne(d => d.RefAcademicAwardLevel)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.RefAcademicAwardLevelId)
//                    .HasConstraintName("FK_PsAcademicAward_RefAcademicAwardLevel");

//                entity.HasOne(d => d.RefAcademicAwardPrerequisiteType)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.RefAcademicAwardPrerequisiteTypeId)
//                    .HasConstraintName("FK_PsStudentAcademicAward_RefAcademicAwardPrerequisiteType");

//                entity.HasOne(d => d.RefPescawardLevelType)
//                    .WithMany(p => p.PsStudentAcademicAwards)
//                    .HasForeignKey(d => d.RefPescawardLevelTypeId)
//                    .HasConstraintName("FK_PsStudentAcademicAward_RefPESCAwardLevelType");
//            });

//            modelBuilder.Entity<PsStudentAcademicRecord>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsStudentAcademicRecordId).HasComment("Surrogate Key");

//                entity.Property(e => e.AcademicYearDesignator)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.AdvancedPlacementCreditsAwarded).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseTotal).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditsAttemptedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CreditsEarnedCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DiplomaOrCredentialAwardDate)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DualCreditDualEnrollmentCredits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EnteringTerm).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradePointAverage).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.GradePointAverageCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsAttempted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicTermDesignatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditHoursAppliedOtherProgramId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalTechCredentialTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_RecordStatus");

//                entity.HasOne(d => d.RefAcademicTermDesignator)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefAcademicTermDesignatorId)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_RefAcademicTermDesignator");

//                entity.HasOne(d => d.RefCreditHoursAppliedOtherProgram)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefCreditHoursAppliedOtherProgramId)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_RefCreditHours");

//                entity.HasOne(d => d.RefProfessionalTechCredentialType)
//                    .WithMany(p => p.PsStudentAcademicRecords)
//                    .HasForeignKey(d => d.RefProfessionalTechCredentialTypeId)
//                    .HasConstraintName("FK_PsStudentAcademicRecord_RefProfTechCredentialType");
//            });

//            modelBuilder.Entity<PsStudentAdmissionTest>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsStudentAdmissionTestId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStandardizedAdmissionTestId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StandardizedAdmissionTestScore).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentAdmissionTests)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentAdmissionTest_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentAdmissionTests)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsAdmissionTest_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentAdmissionTests)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentAdmissionTest_RecordStatus");

//                entity.HasOne(d => d.RefStandardizedAdmissionTest)
//                    .WithMany(p => p.PsStudentAdmissionTests)
//                    .HasForeignKey(d => d.RefStandardizedAdmissionTestId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsAdmissionTest_RefStandardizedAdmissionTest");
//            });

//            modelBuilder.Entity<PsStudentApplication>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.GradePointAverageCumulative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolGraduatingClassSize).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolPercentile).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HighSchoolStudentClassRank).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PostsecondaryApplicant).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmittedStudentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGpaWeightedIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradePointAverageDomainId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WaitListedStudent).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentApplication_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentApplication_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentApplication_RecordStatus");

//                entity.HasOne(d => d.RefAdmittedStudent)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.RefAdmittedStudentId)
//                    .HasConstraintName("FK_PsStudentApplication_RefAdmittedStudent");

//                entity.HasOne(d => d.RefGpaWeightedIndicator)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.RefGpaWeightedIndicatorId)
//                    .HasConstraintName("FK_PsStudentApplication_RefGpaWeightedIndicator");

//                entity.HasOne(d => d.RefGradePointAverageDomain)
//                    .WithMany(p => p.PsStudentApplications)
//                    .HasForeignKey(d => d.RefGradePointAverageDomainId)
//                    .HasConstraintName("FK_PsStudentApplication_RefGradePointAverageDomain");
//            });

//            modelBuilder.Entity<PsStudentCohort>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CohortGraduationYear)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentCohorts)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentCohort_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentCohorts)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentCohort_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentCohorts)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentCohort_RecordStatus");
//            });

//            modelBuilder.Entity<PsStudentCourseSectionMark>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.CourseNarrativeExplanationGrade).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseAcademicGradeStatusCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StudentCourseSectionGradeNarrative).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentCourseSectionMarks)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentCourseSectionMark_DataCollection");

//                entity.HasOne(d => d.PsStudentSection)
//                    .WithMany(p => p.PsStudentCourseSectionMarks)
//                    .HasForeignKey(d => d.PsStudentSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentCourseSectionMark_StudentSection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentCourseSectionMarks)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentCourseSectionMark_RecordStatus");
//            });

//            modelBuilder.Entity<PsStudentDemographic>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ChildrenOfFallenHeroesIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EmancipatedMinor).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FirstGenerationCollegeStudent).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDependents).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCampusResidencyTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCohortExclusionId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDependencyStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMaternalEducationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNumberOfDependentsTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPaternalEducationLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsLepTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTuitionResidencyTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentDemographic_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentDemographic_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentDemographic_RecordStatus");

//                entity.HasOne(d => d.RefCampusResidencyType)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefCampusResidencyTypeId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefCampusResidencyType");

//                entity.HasOne(d => d.RefCohortExclusion)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefCohortExclusionId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefCohortExclusion");

//                entity.HasOne(d => d.RefDependencyStatus)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefDependencyStatusId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefDependencyStatus");

//                entity.HasOne(d => d.RefMaternalEducationLevel)
//                    .WithMany(p => p.PsStudentDemographicRefMaternalEducationLevels)
//                    .HasForeignKey(d => d.RefMaternalEducationLevelId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefEducationLevel1");

//                entity.HasOne(d => d.RefNumberOfDependentsType)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefNumberOfDependentsTypeId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefNumberOfDependentsType");

//                entity.HasOne(d => d.RefPaternalEducationLevel)
//                    .WithMany(p => p.PsStudentDemographicRefPaternalEducationLevels)
//                    .HasForeignKey(d => d.RefPaternalEducationLevelId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefEducationLevel");

//                entity.HasOne(d => d.RefPsLepType)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefPsLepTypeId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefPostsecondaryLEPType");

//                entity.HasOne(d => d.RefTuitionResidencyType)
//                    .WithMany(p => p.PsStudentDemographics)
//                    .HasForeignKey(d => d.RefTuitionResidencyTypeId)
//                    .HasConstraintName("FK_PsStudentDemographic_RefTuitionResidencyType");
//            });

//            modelBuilder.Entity<PsStudentEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EmploymentNaicsCode)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate Key - Foreign key: OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedAfterExitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedWhileEnrolledId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentStatusWhileEnrolledId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentEmployment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentEmployment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEmployedAfterExit)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.RefEmployedAfterExitId)
//                    .HasConstraintName("FK_PsStudentEmployment_RefEmployedAfterExit");

//                entity.HasOne(d => d.RefEmployedWhileEnrolled)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.RefEmployedWhileEnrolledId)
//                    .HasConstraintName("FK_PsStudentEmployment_RefEmployedWhileEnrolled");

//                entity.HasOne(d => d.RefEmploymentStatusWhileEnrolled)
//                    .WithMany(p => p.PsStudentEmployments)
//                    .HasForeignKey(d => d.RefEmploymentStatusWhileEnrolledId)
//                    .HasConstraintName("FK_PsStudentEmployment_RefEmploymentStatusWhileEnrolled");
//            });

//            modelBuilder.Entity<PsStudentEnrollment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsstudentEnrollmentId).HasComment("Surrogate Key");

//                entity.Property(e => e.DegreeOrCertificateSeekingStudent).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DisplacedStudentStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DistanceEducationProgramEnrollmentInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DoctoralCandidacyAdmitInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DoctoralCandidacyDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DoctoralExamTakenDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EntryDateIntoPostsecondary).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FirstTimePostsecondaryStudent).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FraternityParticipationStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HousingOnCampus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InitialEnrollmentTerm).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalActivityHoursAttempted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.InstructionalActivityHoursCompleted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OralDefenseCompletedIndicator).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OralDefenseDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.PostsecondaryEnteringStudentInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEducationReferralStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEducationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDistanceEducationCourseEnrollmentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDoctoralExamsRequiredCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGraduateOrDoctoralExamResultsStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalActivityHoursId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentAwardTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsStudentLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsexitOrWithdrawalTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTransferReadyId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.SororityParticipationStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ThesisOrDissertationTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentEnrollment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentEnrollment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RecordStatus");

//                entity.HasOne(d => d.RefDevelopmentalEducationReferralStatus)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefDevelopmentalEducationReferralStatusId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefDevelopmentalEducationReferralStatus");

//                entity.HasOne(d => d.RefDevelopmentalEducationType)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefDevelopmentalEducationTypeId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefDevelopmentalEducationType");

//                entity.HasOne(d => d.RefDistanceEducationCourseEnrollment)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefDistanceEducationCourseEnrollmentId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefDistanceEducationCourseEnr");

//                entity.HasOne(d => d.RefDoctoralExamsRequiredCode)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefDoctoralExamsRequiredCodeId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefDoctoralExamsRequiredCode");

//                entity.HasOne(d => d.RefGraduateOrDoctoralExamResultsStatus)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefGraduateOrDoctoralExamResultsStatusId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefGraduateOrDoctoralExamResultsStatus");

//                entity.HasOne(d => d.RefInstructionalActivityHours)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefInstructionalActivityHoursId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefInstructionalActivityHours");

//                entity.HasOne(d => d.RefPsEnrollmentAwardType)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefPsEnrollmentAwardTypeId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefPsEnrollmentAwardType");

//                entity.HasOne(d => d.RefPsEnrollmentStatus)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefPsEnrollmentStatusId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefPsEnrollmentStatus");

//                entity.HasOne(d => d.RefPsEnrollmentType)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefPsEnrollmentTypeId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefPsEnrollmentType");

//                entity.HasOne(d => d.RefPsStudentLevel)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefPsStudentLevelId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefPsStudentLevel");

//                entity.HasOne(d => d.RefPsexitOrWithdrawalType)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefPsexitOrWithdrawalTypeId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefPSExitOrWithdrawalType");

//                entity.HasOne(d => d.RefTransferReady)
//                    .WithMany(p => p.PsStudentEnrollments)
//                    .HasForeignKey(d => d.RefTransferReadyId)
//                    .HasConstraintName("FK_PsStudentEnrollment_RefTransferReady");
//            });

//            modelBuilder.Entity<PsStudentFinancialAid>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.FinancialAidApplicant).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialAidIncomeLevel).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.FinancialNeed).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidVeteransBenefitStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidVeteransBenefitTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNeedDeterminationMethodId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TitleIvparticipantAndRecipient).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentFinancialAid_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentFinancialAid_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentFinancialAid_RecordStatus");

//                entity.HasOne(d => d.RefFinancialAidVeteransBenefitStatus)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.RefFinancialAidVeteransBenefitStatusId)
//                    .HasConstraintName("FK_PsStudentFinancialAid_RefFinancialAidVeteransBenefitStatus");

//                entity.HasOne(d => d.RefFinancialAidVeteransBenefitType)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.RefFinancialAidVeteransBenefitTypeId)
//                    .HasConstraintName("FK_PsStudentFinancialAid_RefFinancialAidVeteransBenefitType");

//                entity.HasOne(d => d.RefNeedDeterminationMethod)
//                    .WithMany(p => p.PsStudentFinancialAids)
//                    .HasForeignKey(d => d.RefNeedDeterminationMethodId)
//                    .HasConstraintName("FK_PsStudentFinancialAid_RefNeedDeterminationMethod");
//            });

//            modelBuilder.Entity<PsStudentSection>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.AcademicGrade).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.CourseOverrideSchool).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.DegreeApplicability).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsAttempted).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.QualityPointsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseAcademicGradeStatusCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseRepeatCodeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsStudentSections)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PsStudentSection_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsStudentSections)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PsStudentSection_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsStudentSections)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PsStudentSection_RecordStatus");

//                entity.HasOne(d => d.RefCourseAcademicGradeStatusCode)
//                    .WithMany(p => p.PsStudentSections)
//                    .HasForeignKey(d => d.RefCourseAcademicGradeStatusCodeId)
//                    .HasConstraintName("FK_PsStudentSection_RefCourseAcademicGradeStatusCode");

//                entity.HasOne(d => d.RefCourseRepeatCode)
//                    .WithMany(p => p.PsStudentSections)
//                    .HasForeignKey(d => d.RefCourseRepeatCodeId)
//                    .HasConstraintName("FK_PsStudentSection_RefCourseRepeatCode");
//            });

//            modelBuilder.Entity<PsstudentProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.PsstudentProgramId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.PsProgramId).HasComment("Foreign key - PsProgram");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipUseId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTransferOutIndicatorId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWorkbasedLearningOpportunityTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_PSStudentProgram_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PSStudentProgram_OrganizationPersonRole");

//                entity.HasOne(d => d.PsProgram)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.PsProgramId)
//                    .HasConstraintName("FK_PSStudentProgram_PsProgram");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_PSStudentProgram_RecordStatus");

//                entity.HasOne(d => d.RefCareerCluster)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.RefCareerClusterId)
//                    .HasConstraintName("FK_PSStudentProgram_RefCareerCluster");

//                entity.HasOne(d => d.RefCipUse)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.RefCipUseId)
//                    .HasConstraintName("FK_PSStudentEnrollmentCIP_RefCipUse");

//                entity.HasOne(d => d.RefTransferOutIndicator)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.RefTransferOutIndicatorId)
//                    .HasConstraintName("FK_PSStudentProgram_RefTransferOutIndicator");

//                entity.HasOne(d => d.RefWorkbasedLearningOpportunityType)
//                    .WithMany(p => p.PsstudentPrograms)
//                    .HasForeignKey(d => d.RefWorkbasedLearningOpportunityTypeId)
//                    .HasConstraintName("FK_PsStudentProgram_RefWorkbasedLearningOpportunityType");
//            });

//            modelBuilder.Entity<QuarterlyEmploymentRecord>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.QuarterlyEmploymentRecordId).HasComment("Surrogate Key");

//                entity.Property(e => e.Earnings).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EmploymentNaicscode).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.PersonId).HasComment("Foreign key - Person");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedPriorToEnrollmentId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentLocationId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEradministrativeDataSourceId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReferencePeriodEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ReferencePeriodStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_DataCollection");

//                entity.HasOne(d => d.Person)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.PersonId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_RecordStatus");

//                entity.HasOne(d => d.RefEmployedPriorToEnrollment)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.RefEmployedPriorToEnrollmentId)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_RefEmployedPriorToEnrollment");

//                entity.HasOne(d => d.RefEmploymentLocation)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.RefEmploymentLocationId)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_RefEmploymentLocation");

//                entity.HasOne(d => d.RefEradministrativeDataSource)
//                    .WithMany(p => p.QuarterlyEmploymentRecords)
//                    .HasForeignKey(d => d.RefEradministrativeDataSourceId)
//                    .HasConstraintName("FK_QuarterlyEmploymentRecord_RefERAdministrativeDataSource");
//            });

//            modelBuilder.Entity<RecordStatus>(entity =>
//            {
//                entity.Property(e => e.RecordStatusDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRecordStatusCreatorEntityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRecordStatusTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.RecordStatusCreatorOrganization)
//                    .WithMany(p => p.RecordStatuses)
//                    .HasForeignKey(d => d.RecordStatusCreatorOrganizationId)
//                    .HasConstraintName("FK_RecordStatus_Organization");

//                entity.HasOne(d => d.RecordStatusCreatorPerson)
//                    .WithMany(p => p.RecordStatuses)
//                    .HasForeignKey(d => d.RecordStatusCreatorPersonId)
//                    .HasConstraintName("FK_RecordStatus_Person");

//                entity.HasOne(d => d.RefRecordStatusCreatorEntity)
//                    .WithMany(p => p.RecordStatuses)
//                    .HasForeignKey(d => d.RefRecordStatusCreatorEntityId)
//                    .HasConstraintName("FK_RecordStatus_RefRecordStatusCreatorEntity");

//                entity.HasOne(d => d.RefRecordStatusType)
//                    .WithMany(p => p.RecordStatuses)
//                    .HasForeignKey(d => d.RefRecordStatusTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RecordStatus_RefRecordStatusType");
//            });

//            modelBuilder.Entity<RecordStatusHistory>(entity =>
//            {
//                entity.Property(e => e.RecordStatusDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRecordStatusCreatorEntityId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRecordStatusTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.RecordStatusCreatorOrganization)
//                    .WithMany(p => p.RecordStatusHistories)
//                    .HasForeignKey(d => d.RecordStatusCreatorOrganizationId)
//                    .HasConstraintName("FK_RecordStatusHistory_Organization");

//                entity.HasOne(d => d.RecordStatusCreatorPerson)
//                    .WithMany(p => p.RecordStatusHistories)
//                    .HasForeignKey(d => d.RecordStatusCreatorPersonId)
//                    .HasConstraintName("FK_RecordStatusHistory_Person");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RecordStatusHistories)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RecordStatusHistory_RecordStatus");

//                entity.HasOne(d => d.RefRecordStatusCreatorEntity)
//                    .WithMany(p => p.RecordStatusHistories)
//                    .HasForeignKey(d => d.RefRecordStatusCreatorEntityId)
//                    .HasConstraintName("FK_RecordStatusHistory_RefRecordStatusCreatorEntity");

//                entity.HasOne(d => d.RefRecordStatusType)
//                    .WithMany(p => p.RecordStatusHistories)
//                    .HasForeignKey(d => d.RefRecordStatusTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RecordStatusHistory_RefRecordStatusType");
//            });

//            modelBuilder.Entity<RefAbsentAttendanceCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAbsentAttendanceCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAbsentAttendanceCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAbsentAttendanceCategory_Organization");
//            });

//            modelBuilder.Entity<RefAcademicAwardLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicAwardLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicAwardLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicAwardLevel_Organization");
//            });

//            modelBuilder.Entity<RefAcademicAwardPrerequisiteType>(entity =>
//            {
//                entity.Property(e => e.RefAcademicAwardPrerequisiteTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicAwardPrerequisiteTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicAwardPrerequisiteType_Organization");
//            });

//            modelBuilder.Entity<RefAcademicHonorType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicHonorTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicHonorTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicHonorType_Organization");
//            });

//            modelBuilder.Entity<RefAcademicRank>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicRankId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicRanks)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicRank_Organization");
//            });

//            modelBuilder.Entity<RefAcademicSubject>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicSubjectId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicSubjects)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicSubject_Organization");
//            });

//            modelBuilder.Entity<RefAcademicTermDesignator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAcademicTermDesignatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAcademicTermDesignators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAcademicTermDesignator_Organization");
//            });

//            modelBuilder.Entity<RefAccommodationType>(entity =>
//            {
//                entity.Property(e => e.RefAccommodationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAccommodationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAccommodationType_Organization");
//            });

//            modelBuilder.Entity<RefAccommodationsNeededType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAccommodationsNeededTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAccommodationsNeededTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAccommodationsNeededType_Organization");
//            });

//            modelBuilder.Entity<RefAccreditationAgency>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAccreditationAgencyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAccreditationAgencies)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAccreditationAgency_Organization");
//            });

//            modelBuilder.Entity<RefActivityRecognitionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefActivityRecognitionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefActivityRecognitionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefActivityRecognitionType_Organization");
//            });

//            modelBuilder.Entity<RefActivityTimeMeasurementType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefActivityTimeMeasurementTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefActivityTimeMeasurementTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefActivityTimeMeasurementType_Organization");
//            });

//            modelBuilder.Entity<RefAdditionalCreditType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdditionalCreditTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdditionalCreditTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdditionalCreditType_Organization");
//            });

//            modelBuilder.Entity<RefAdditionalTargetedSupportAndImprovementStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdditionalTargetedSupportAndImprovementStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdditionalTargetedSupportAndImprovementStatus_Organization");
//            });

//            modelBuilder.Entity<RefAddressType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefAddressTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAddressTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAddressType_Organization");
//            });

//            modelBuilder.Entity<RefAdministrativeFundingControl>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdministrativeFundingControlId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdministrativeFundingControls)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdminFundingControl_Organization");
//            });

//            modelBuilder.Entity<RefAdmissionConsiderationLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmissionConsiderationLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdmissionConsiderationLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdmissionConsiderationLevel_Organization");
//            });

//            modelBuilder.Entity<RefAdmissionConsiderationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmissionConsiderationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdmissionConsiderationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdmissionConsiderationType_Organization");
//            });

//            modelBuilder.Entity<RefAdmittedStudent>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdmittedStudentId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.\r\n");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdmittedStudents)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdmittedStudent_Organization");
//            });

//            modelBuilder.Entity<RefAdultEducationProgramExitReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdultEducationProgramExitReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdultEducationProgramExitReason_Organization");
//            });

//            modelBuilder.Entity<RefAdvancedPlacementCourseCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAdvancedPlacementCourseCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAdvancedPlacementCourseCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAdvancedPlacementCourseCode_Organization");
//            });

//            modelBuilder.Entity<RefAeCertificationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeCertificationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeCertificationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAECertificationType_Organization");
//            });

//            modelBuilder.Entity<RefAeFunctioningLevelAtIntake>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeFunctioningLevelAtIntakeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeFunctioningLevelAtIntakes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAEFunctioningLevelAtIntake_Organization");
//            });

//            modelBuilder.Entity<RefAeFunctioningLevelAtPosttest>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeFunctioningLevelAtPosttestId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeFunctioningLevelAtPosttests)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAEFunctioningLevelAtPosttest_Organization");
//            });

//            modelBuilder.Entity<RefAeInstructionalProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeInstructionalProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeInstructionalProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAEInstructionalProgramType_Organization");
//            });

//            modelBuilder.Entity<RefAePostsecondaryTransitionAction>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAePostsecondaryTransitionActionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAePostsecondaryTransitionActions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAEPostsecondaryTransitionAction_Organization");
//            });

//            modelBuilder.Entity<RefAeSpecialProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeSpecialProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeSpecialProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAeSpecialProgramType_Organization");
//            });

//            modelBuilder.Entity<RefAeStaffClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeStaffClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeStaffClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAEStaffClassification_Organization");
//            });

//            modelBuilder.Entity<RefAeStaffEmploymentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeStaffEmploymentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAeStaffEmploymentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAeStaffEmploymentStatus_Organization");
//            });

//            modelBuilder.Entity<RefAllergySeverity>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAllergySeverityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAllergySeverities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAllergySeverity_Organization");
//            });

//            modelBuilder.Entity<RefAllergyType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAllergyTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAllergyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAllergyType_Organization");
//            });

//            modelBuilder.Entity<RefAltRouteToCertificationOrLicensure>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAltRouteToCertificationOrLicensureId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAltRouteToCertificationOrLicensures)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAltRouteToCertificationOrLicensure_Organization");
//            });

//            modelBuilder.Entity<RefAlternateFundUse>(entity =>
//            {
//                entity.HasComment("CEDS Element has been removed.");

//                entity.Property(e => e.RefAlternateFundUsesId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("CEDS Element has been removed.");

//                entity.Property(e => e.Description).HasComment("CEDS Element has been removed.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAlternateFundUses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAlternateFundUses_Organization");
//            });

//            modelBuilder.Entity<RefAlternativeSchoolFocus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAlternativeSchoolFocusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAlternativeSchoolFoci)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAlternativeSchoolFocus_Organization");
//            });

//            modelBuilder.Entity<RefAmaoAttainmentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAmaoAttainmentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAmaoAttainmentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAmaoAttainmentStatus_Organization");
//            });

//            modelBuilder.Entity<RefApipInteractionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefApipinteractionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefApipInteractionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAPIPInteractionType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentAccommodationCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentAccommodationCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");
//            });

//            modelBuilder.Entity<RefAssessmentAssetIdentifierType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentAssetIdentifierTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentAssetIdentifierTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentAssetIdentifierType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentAssetType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentAssetTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentAssetTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentAssetType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentEldevelopmentalDomain>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentEldevelopmentalDomainId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentEldevelopmentalDomains)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentELDevelopmentalDomain_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentFormSectionIdentificationSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentFormSectionIdentificationSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentFormSectionIdentificationSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentFormSectionIDType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentItemCharacteristicType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemCharacteristicTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentItemCharacteristicTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessItemCharType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentItemResponseScoreStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemResponseScoreStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentItemResponseScoreStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentItemResponseScoreStatus_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentItemResponseStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemResponseStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentItemResponseStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessItemResponseStatus_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentItemType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentItemTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentItemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentItemType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedAlternativeRepresentationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedAlternativeRepresentationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedAlternativeRepresentationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedAlternativeRepresentationType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedBrailleGradeType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleGradeTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedBrailleGradeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedBrailleGradeTypeId_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedBrailleMarkType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleMarkTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedBrailleMarkTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedBrailleMarkType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedBrailleStatusCellType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedBrailleStatusCellTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedBrailleStatusCellTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedBrailleStatusCellType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedHazardType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedHazardTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedHazardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedHazardType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedIncreasedWhitespacingType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedIncreasedWhitespacingTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedIncreasedWhitespacingTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedIncreasedWhitespacingType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedLanguageLearnerType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedLanguageLearnerTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedLanguageLearnerTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedLanguageLearnerType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedLinkIndicationType>(entity =>
//            {
//                entity.Property(e => e.RefAssessmentNeedLinkIndicationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedLinkIndicationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedLinkIndicationType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedMaskingType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedMaskingTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedMaskingTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedMaskingType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedNumberOfBrailleDot>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedNumberOfBrailleDotsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedNumberOfBrailleDots)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedNumberOfBrailleDots_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedSigningType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSigningTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedSigningTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedSigningType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedSpokenSourcePreferenceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSpokenSourcePreferenceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedSpokenSourcePreferenceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedSpokenSourcePreferenceType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedSupportTool>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedSupportToolId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedSupportTools)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedSupportTool_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedUsageType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedUsageTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedUsageTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedUsageType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentNeedUserSpokenPreferenceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentNeedUserSpokenPreferenceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentNeedUserSpokenPreferenceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentNeedUserSpokenPreferenceType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentParticipationIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentParticipationIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentParticipationIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentParticipationIndicator_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentPlatformType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPlatformTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentPlatformTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentPlatformType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentPretestOutcome>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPretestOutcomeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentPretestOutcomes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentSubtestResultPretestOutcome_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentPurpose>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentPurposeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentPurposes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentPurpose_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentReasonNotCompleting>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentReasonNotCompletingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentReasonNotCompletings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentReasonNotCompleting_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentReasonNotTested>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentReasonNotTestedId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentReasonNotTesteds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentReasonNotTested_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentRegistrationCompletionStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentRegistrationCompletionStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentRegistrationCompletionStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentRegistrationCompletionStatus_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentReportingMethod>(entity =>
//            {
//                entity.HasComment("The method used to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade. In some cases, more than one type of reporting method may be used. ");

//                entity.Property(e => e.RefAssessmentReportingMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentReportingMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentReportingMethod_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentResultDataType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentResultDataTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentResultDataTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentResultDataType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentResultScoreType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentResultScoreTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentResultScoreTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentResultScoreType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentSessionSpecialCircumstanceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionSpecialCircumstanceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentSessionSpecialCircumstanceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentSessionSpecialCircumstanceType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentSessionStaffRoleType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionStaffRoleTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentSessionStaffRoleTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentSessionStaffRoleType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentSessionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSessionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentSessionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentSessionType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentSubtestIdentifierType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentSubtestIdentifierTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentSubtestIdentifierTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessSubtestIDType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentType_Organization");
//            });

//            modelBuilder.Entity<RefAssessmentTypeChildrenWithDisability>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAssessmentTypeChildrenWithDisabilitiesId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAssessmentTypeChildrenWithDisabilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssessmentTypeChildrenWithDisabilities_Organization");
//            });

//            modelBuilder.Entity<RefAttendanceEventType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAttendanceEventTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAttendanceEventTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAttendanceEventType_Organization");
//            });

//            modelBuilder.Entity<RefAttendanceStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAttendanceStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAttendanceStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAttendanceStatus_Organization");
//            });

//            modelBuilder.Entity<RefAuthorizerType>(entity =>
//            {
//                entity.Property(e => e.RefAuthorizerTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAuthorizerTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAuthorizerType_Organization");
//            });

//            modelBuilder.Entity<RefAypStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAypStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefAypStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAYPStatus_Organization");
//            });

//            modelBuilder.Entity<RefBarrierToEducatingHomeless>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBarrierToEducatingHomelessId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBarrierToEducatingHomelesses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBarrierToEducatingHomeless_Organization");
//            });

//            modelBuilder.Entity<RefBarrierToInternetAccessInResidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBarrierToInternetAccessInResidences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBarrierToInternetAccessInResidence_Organization");
//            });

//            modelBuilder.Entity<RefBillableBasisType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBillableBasisTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBillableBasisTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBillableBasisType_Organization");
//            });

//            modelBuilder.Entity<RefBlendedLearningModelType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBlendedLearningModelTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBlendedLearningModelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBlendedLearningModelType_Organization");
//            });

//            modelBuilder.Entity<RefBloomsTaxonomyDomain>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBloomsTaxonomyDomainId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBloomsTaxonomyDomains)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBloomsTaxonomyDomain_Organization");
//            });

//            modelBuilder.Entity<RefBuildingAdministrativeSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingAdministrativeSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingAdministrativeSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingAdministrativeSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingAirDistributionSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingAirDistributionSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingAirDistributionSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingAirDistributionSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingArtSpecialtySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingArtSpecialtySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingArtSpecialtySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingArtSpecialtySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingAssemblySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingAssemblySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingAssemblySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingAssemblySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingBasicClassroomDesignType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingBasicClassroomDesignTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingBasicClassroomDesignTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingBasicClassroomDesignType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCareerTechEducationSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCareerTechEducationSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCareerTechEducationSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCareerTechEducationSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCharterSchoolRealtyAccessType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCharterSchoolRealtyAccessTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCharterSchoolRealtyAccessTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCharterSchoolRealtyAccessType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCirculationSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCirculationSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCirculationSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCirculationSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCleaningStandardType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCleaningStandardTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCleaningStandardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCleaningStandardType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCommMgmtComponentSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCommMgmtComponentSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCommMgmtComponentSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCommMgmtComponentSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCommunityUseSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCommunityUseSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCommunityUseSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCommunityUseSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingCoolingGenerationSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingCoolingGenerationSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingCoolingGenerationSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingCoolingGenerationSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingDesignType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingDesignTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingDesignTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingDesignType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingElectricalSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingElectricalSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingElectricalSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingElectricalSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingEnergyConservationMeasureType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingEnergyConservationMeasureTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingEnergyConservationMeasureTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingEnergyConservationMeasureType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingEnergySourceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingEnergySourceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingEnergySourceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingEnergySourceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingEnvOrEnergyPerformanceRatingCat>(entity =>
//            {
//                entity.Property(e => e.RefBuildingEnvOrEnergyPerformanceRatingCatId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingEnvOrEnergyPerformanceRatingCats)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingEnvOrEnergyPerformanceRatingCat_Organization");
//            });

//            modelBuilder.Entity<RefBuildingFireProtectionSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingFireProtectionSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingFireProtectionSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingFireProtectionSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingFoodServiceSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingFoodServiceSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingFoodServiceSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingFoodServiceSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingFullServiceKitchenType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingFullServiceKitchenTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingFullServiceKitchenTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingFullServiceKitchenType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingHeatingGenerationSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingHeatingGenerationSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingHeatingGenerationSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingHeatingGenerationSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingHistoricStatus>(entity =>
//            {
//                entity.Property(e => e.RefBuildingHistoricStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingHistoricStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingHistoricStatus_Organization");
//            });

//            modelBuilder.Entity<RefBuildingHvacsystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingHvacsystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingHvacsystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingHVACSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingIndoorAthleticOrPhysEdSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingIndoorAthleticOrPhysEdSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingIndoorAthleticOrPhysEdSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingIndoorAthleticOrPhysEdSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingInstructionalSpaceFactorType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingInstructionalSpaceFactorTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingInstructionalSpaceFactorTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingInstructionalSpaceFactorType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingJointUseRationaleType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingJointUseRationaleTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingJointUseRationaleTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingJointUseRationaleType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingJointUseSchedulingType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingJointUseSchedulingTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingJointUseSchedulingTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingJointUseSchedulingType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingJointUserType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingJointUserTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingJointUserTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingJointUserType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingLibMediaCenterSpecialtySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingLibMediaCenterSpecialtySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingLibMediaCenterSpecialtySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingLibMediaCenterSpecialtySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingMechanicalConveyingSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingMechanicalConveyingSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingMechanicalConveyingSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingMechanicalConveyingSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingMechanicalSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingMechanicalSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingMechanicalSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingMechanicalSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingOperationsOrMaintSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingOperationsOrMaintSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingOperationsOrMaintSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingOperationsOrMaintSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingOutdoorAthleticOrPhysEdSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingOutdoorAthleticOrPhysEdSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingOutdoorAthleticOrPhysEdSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingOutdoorAthleticOrPhysEdSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingOutdoorOrNonathleticSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingOutdoorOrNonathleticSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingOutdoorOrNonathleticSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingOutdoorOrNonathleticSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingPerformingArtsSpecialtySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingPerformingArtsSpecialtySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingPerformingArtsSpecialtySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingPerformingArtsSpecialtySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingPlumbingSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingPlumbingSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingPlumbingSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingPlumbingSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingPrimaryUseType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingPrimaryUseTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingPrimaryUseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingPrimaryUseType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSchoolDesignType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSchoolDesignTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSchoolDesignTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSchoolDesignType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingScienceSpecialtySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingScienceSpecialtySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingScienceSpecialtySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingScienceSpecialtySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSecuritySystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSecuritySystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSecuritySystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSecuritySystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSiteUseRestrictionsType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSiteUseRestrictionsTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSiteUseRestrictionsTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSiteUseRestrictionsType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSpaceDesignType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSpaceDesignTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSpaceDesignTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSpaceDesignType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSpecEdSpecialtySpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSpecEdSpecialtySpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSpecEdSpecialtySpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSpecEdSpecialtySpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingStudentSupportSpaceType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingStudentSupportSpaceTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingStudentSupportSpaceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingStudentSupportSpaceType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingTechnologyWiringSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingTechnologyWiringSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingTechnologyWiringSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingTechnologyWiringSystemType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingUseType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefBuildingUseTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingUseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingUseType_Organization");
//            });

//            modelBuilder.Entity<RefBuildingVerticalTransportationSystemType>(entity =>
//            {
//                entity.Property(e => e.RefBuildingVerticalTransportationSystemTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefBuildingVerticalTransportationSystemTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefBuildingVerticalTransportationSystemType_Organization");
//            });

//            modelBuilder.Entity<RefCalendarEventType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCalendarEventTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCalendarEventTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCalendarEventType_Organization");
//            });

//            modelBuilder.Entity<RefCampusResidencyType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCampusResidencyTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCampusResidencyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCampusResidencyType_Organization");
//            });

//            modelBuilder.Entity<RefCampusStatus>(entity =>
//            {
//                entity.Property(e => e.RefCampusStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCampusStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCampusStatus_Organization");
//            });

//            modelBuilder.Entity<RefCampusType>(entity =>
//            {
//                entity.Property(e => e.RefCampusTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCampusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCampusType_Organization");
//            });

//            modelBuilder.Entity<RefCareerCluster>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerClusterId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCareerClusters)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCareerCluster_Organization");
//            });

//            modelBuilder.Entity<RefCareerEducationPlanType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCareerEducationPlanTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCareerEducationPlanTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCareerEducationPlanType_Organization");
//            });

//            modelBuilder.Entity<RefCarnegieBasicClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCarnegieBasicClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCarnegieBasicClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCarnegieBasicClassification_Organization");
//            });

//            modelBuilder.Entity<RefCharterLeaStatus>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCharterLeaStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCharterLeaStatus_Organization");
//            });

//            modelBuilder.Entity<RefCharterSchoolAuthorizerType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCharterSchoolAuthorizerTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCharterSchoolAuthorizerType_Organization");
//            });

//            modelBuilder.Entity<RefCharterSchoolManagementOrganizationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCharterSchoolManagementOrganizationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCharterSchoolManagementOrganizationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCharterSchoolManagementOrganizationType_Organization");
//            });

//            modelBuilder.Entity<RefCharterSchoolType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCharterSchoolTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCharterSchoolTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCharterSchoolType_Organization");
//            });

//            modelBuilder.Entity<RefChildDevelopmentAssociateType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefChildDevelopmentAssociateTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefChildDevelopmentAssociateTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefChildDevAssociateType_Organization");
//            });

//            modelBuilder.Entity<RefChildDevelopmentalScreeningStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefChildDevelopmentalScreeningStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefChildDevelopmentalScreeningStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefChildDevelopmentalScreeningStatus_Organization");
//            });

//            modelBuilder.Entity<RefChildOutcomesSummaryRating>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefChildOutcomesSummaryRatingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefChildOutcomesSummaryRatings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefChildOutcomesSummaryRating_Organization");
//            });

//            modelBuilder.Entity<RefCipCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCipCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCipCode_Organization");
//            });

//            modelBuilder.Entity<RefCipUse>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipUseId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCipUses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCipUse_Organization");
//            });

//            modelBuilder.Entity<RefCipVersion>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCipVersionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCipVersions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCipVersion_Organization");
//            });

//            modelBuilder.Entity<RefClassroomPositionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefClassroomPositionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefClassroomPositionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefClassroomPositionType_Organization");
//            });

//            modelBuilder.Entity<RefCohortExclusion>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCohortExclusionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCohortExclusions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCohortExclusion_Organization");
//            });

//            modelBuilder.Entity<RefCommunicationMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCommunicationMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCommunicationMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCommunicationMethod_Organization");
//            });

//            modelBuilder.Entity<RefCommunityBasedType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCommunityBasedTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCommunityBasedTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCommunityBasedType_Organization");
//            });

//            modelBuilder.Entity<RefCompetencyDefAssociationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCompetencyDefAssociationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCompetencyDefAssociationType_Organization");
//            });

//            modelBuilder.Entity<RefCompetencyDefNodeAccessibilityProfile>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCompetencyDefNodeAccessibilityProfiles)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCompetencyDefNodeAccessibilityProfile_Organization");
//            });

//            modelBuilder.Entity<RefCompetencyDefTestabilityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCompetencyDefTestabilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCompetencyDefTestabilityType_Organization");
//            });

//            modelBuilder.Entity<RefCompetencyFrameworkPublicationStatus>(entity =>
//            {
//                entity.Property(e => e.RefCompetencyFrameworkPublicationStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCompetencyFrameworkPublicationStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCompetencyFrameworkPublicationStatus_Organization");
//            });

//            modelBuilder.Entity<RefCompetencySetCompletionCriterion>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCompetencySetCompletionCriteriaId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCompetencySetCompletionCriteria)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCompetencySetCompletionCriteria_Organization");
//            });

//            modelBuilder.Entity<RefComprehensiveAndTargetedSupport>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefComprehensiveAndTargetedSupports)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefComprehensiveAndTargetedSupport_Org");
//            });

//            modelBuilder.Entity<RefComprehensiveSupport>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefComprehensiveSupports)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefComprehensiveSupport_Org");
//            });

//            modelBuilder.Entity<RefComprehensiveSupportAndImprovementStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefComprehensiveSupportAndImprovementStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefComprehensiveSupportAndImprovementStatus_Organization");
//            });

//            modelBuilder.Entity<RefContentStandardType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefContentStandardTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefContentStandardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefContentStandardType_Organization");
//            });

//            modelBuilder.Entity<RefContinuationOfService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefContinuationOfServicesReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefContinuationOfServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefContinuationOfServices_Organization");
//            });

//            modelBuilder.Entity<RefControlOfInstitution>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefControlOfInstitutionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefControlOfInstitutions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefControlOfInstitution_Organization");
//            });

//            modelBuilder.Entity<RefCoreKnowledgeArea>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCoreKnowledgeAreaId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCoreKnowledgeAreas)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCoreKnowledgeArea_Organization");
//            });

//            modelBuilder.Entity<RefCorrectionalEducationFacilityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCorrectionalEducationFacilityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCorrectionalEducationFacilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCorrectionalEducationFacilityType_Organization");
//            });

//            modelBuilder.Entity<RefCorrectiveActionType>(entity =>
//            {
//                entity.HasKey(e => e.RefCorrectiveActionId)
//                    .HasName("PK_RefCorrectiveAction");

//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCorrectiveActionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCorrectiveActionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCorrectiveActionType_Organization");
//            });

//            modelBuilder.Entity<RefCountry>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCountries)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCountry_Org");
//            });

//            modelBuilder.Entity<RefCounty>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCountyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCounties)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCounty_Org");
//            });

//            modelBuilder.Entity<RefCourseAcademicGradeStatusCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseAcademicGradeStatusCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseAcademicGradeStatusCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseAcademicGradeStatusCode_Organization");
//            });

//            modelBuilder.Entity<RefCourseApplicableEducationLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseApplicableEducationLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseApplicableEducationLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseApplicableEducationLevel_Organization");
//            });

//            modelBuilder.Entity<RefCourseCreditBasisType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditBasisTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseCreditBasisTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseCreditBasisType_Organization");
//            });

//            modelBuilder.Entity<RefCourseCreditLevelType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditLevelTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseCreditLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseCreditLevelType_Organization");
//            });

//            modelBuilder.Entity<RefCourseCreditUnit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditUnitId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseCreditUnits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseCreditUnit_Organization");
//            });

//            modelBuilder.Entity<RefCourseGpaApplicability>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseGpaapplicabilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseGpaApplicabilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseGpaApplicability_Organization");
//            });

//            modelBuilder.Entity<RefCourseHonorsType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseHonorsTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseHonorsTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseHonorsType_Organization");
//            });

//            modelBuilder.Entity<RefCourseInstructionMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInstructionMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseInstructionMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseInstructionMethod_Organization");
//            });

//            modelBuilder.Entity<RefCourseInstructionSiteType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInstructionSiteTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseInstructionSiteTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseInstructionSiteType_Organization");
//            });

//            modelBuilder.Entity<RefCourseInteractionMode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseInteractionModeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseInteractionModes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseInteractionMode_Organization");
//            });

//            modelBuilder.Entity<RefCourseLevelCharacteristic>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseLevelCharacteristicId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseLevelCharacteristics)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseLevelCharacteristic_Organization");
//            });

//            modelBuilder.Entity<RefCourseLevelType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseLevelTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseLevelType_Organization");
//            });

//            modelBuilder.Entity<RefCourseRepeatCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseRepeatCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseRepeatCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseRepeatCode_Organization");
//            });

//            modelBuilder.Entity<RefCourseSectionAssessmentReportingMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionAssessmentReportingMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseSectionAssessmentReportingMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseSectionAssessmentReportingMethod_Organization");
//            });

//            modelBuilder.Entity<RefCourseSectionDeliveryMode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionDeliveryModeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseSectionDeliveryModes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseSectionDeliveryMode_Organization");
//            });

//            modelBuilder.Entity<RefCourseSectionEnrollmentStatusType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionEnrollmentStatusTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseSectionEnrollmentStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseSectionEnrollmentStatusType_Organization");
//            });

//            modelBuilder.Entity<RefCourseSectionEntryType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionEntryTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseSectionEntryTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseSectionEntryType_Organization");
//            });

//            modelBuilder.Entity<RefCourseSectionExitType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseSectionExitTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCourseSectionExitTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCourseSectionExitType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialDefAgentRoleType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialDefAgentRoleTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialDefAgentRoleType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialDefAssessMethodType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialDefAssessMethodTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialDefAssessMethodType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialDefIntendedPurposeType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialDefIntendedPurposeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialDefIntendedPurposeType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialDefStatusType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialDefStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialDefStatusType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialDefVerificationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialDefVerificationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialDefVerificationType_Organization");
//            });

//            modelBuilder.Entity<RefCredentialIdentifierSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialIdentifierSystemId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialIdentifierSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialIdentifierSystem_Organization");
//            });

//            modelBuilder.Entity<RefCredentialType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCredentialTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCredentialTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCredentialType_Organization");
//            });

//            modelBuilder.Entity<RefCreditHoursAppliedOtherProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditHoursAppliedOtherProgramId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCreditHoursAppliedOtherPrograms)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCreditHoursAppliedOtherProgram_Organization");
//            });

//            modelBuilder.Entity<RefCreditTypeEarned>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCreditTypeEarnedId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCreditTypeEarneds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCreditTypeEarned_Organization");
//            });

//            modelBuilder.Entity<RefCriticalTeacherShortageCandidate>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCriticalTeacherShortageCandidateId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCriticalTeacherShortageCandidates)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCritTeachShortageCandidate_Organization");
//            });

//            modelBuilder.Entity<RefCtdlaudienceLevelType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCtdlaudienceLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCTDLAudienceLevelType_Organization");
//            });

//            modelBuilder.Entity<RefCtdlorganizationType>(entity =>
//            {
//                entity.Property(e => e.RefCtdlorganizationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCtdlorganizationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCTDLOrganizationType_Organization");
//            });

//            modelBuilder.Entity<RefCteGraduationRateInclusion>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCteGraduationRateInclusionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCteGraduationRateInclusions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCTEGraduationRateInclusion_Organization");
//            });

//            modelBuilder.Entity<RefCteNonTraditionalGenderStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCtenonTraditionalGenderStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCteNonTraditionalGenderStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCteNonTraditionalGenderStatus_Organization");
//            });

//            modelBuilder.Entity<RefCurriculumFrameworkType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCurriculumFrameworkTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefCurriculumFrameworkTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefCurriculumFrameworkType_Organization");
//            });

//            modelBuilder.Entity<RefDataCollectionStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDataCollectionStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDataCollectionStatus_Organization");
//            });

//            modelBuilder.Entity<RefDegreeOrCertificateType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDegreeOrCertificateTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDegreeOrCertificateTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDegreeCertificateType_Organization");
//            });

//            modelBuilder.Entity<RefDentalInsuranceCoverageType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDentalInsuranceCoverageTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDentalInsuranceCoverageTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDentalInsuranceCoverageType_Organization");
//            });

//            modelBuilder.Entity<RefDentalScreeningStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDentalScreeningStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDentalScreeningStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDental_Org");
//            });

//            modelBuilder.Entity<RefDependencyStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDependencyStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDependencyStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDependencyStatus_Organization");
//            });

//            modelBuilder.Entity<RefDevelopmentalEducationReferralStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEducationReferralStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDevelopmentalEducationReferralStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDevelopmentalEducationReferralStatus_Organization");
//            });

//            modelBuilder.Entity<RefDevelopmentalEducationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEducationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDevelopmentalEducationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDevelopmentalEducationType_Organization");
//            });

//            modelBuilder.Entity<RefDevelopmentalEvaluationFinding>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDevelopmentalEvaluationFindingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDevelopmentalEvaluationFindings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDevelopmentalEvaluationFinding_Organization");
//            });

//            modelBuilder.Entity<RefDirectoryInformationBlockStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDirectoryInformationBlockStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDirectoryInformationBlockStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDirectoryInformationBlockStatus_Organization");
//            });

//            modelBuilder.Entity<RefDisabilityConditionStatusCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisabilityConditionStatusCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisabilityConditionStatusCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisabilityConditionStatusCode_Organization");
//            });

//            modelBuilder.Entity<RefDisabilityConditionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisabilityConditionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisabilityConditionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisabilityConditionType_Organization");
//            });

//            modelBuilder.Entity<RefDisabilityDeterminationSourceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisabilityDeterminationSourceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisabilityDeterminationSourceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisabilityDeterminationSourceType_Organization");
//            });

//            modelBuilder.Entity<RefDisabilityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisabilityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisabilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisability_Organization");
//            });

//            modelBuilder.Entity<RefDisciplinaryActionTaken>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplinaryActionTakenId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisciplinaryActionTakens)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisciplinaryActionTaken_Organization");
//            });

//            modelBuilder.Entity<RefDisciplineLengthDifferenceReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineLengthDifferenceReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisciplineLengthDifferenceReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisciplineLengthDifference_Organization");
//            });

//            modelBuilder.Entity<RefDisciplineMethodFirearm>(entity =>
//            {
//                entity.HasKey(e => e.RefDisciplineMethodFirearmsId)
//                    .HasName("PK_RefDiscineMethodFirearms");

//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineMethodFirearmsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisciplineMethodFirearms)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisciplineMethodFirearms_Organization");
//            });

//            modelBuilder.Entity<RefDisciplineMethodOfCwd>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineMethodOfCwdId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisciplineMethodOfCwds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisciplineMethodOfCWD_Organization");
//            });

//            modelBuilder.Entity<RefDisciplineReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDisciplineReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDisciplineReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDisciplineReason_Organization");
//            });

//            modelBuilder.Entity<RefDistanceEducationCourseEnrollment>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDistanceEducationCourseEnrollmentId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDistanceEducationCourseEnrollments)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDistanceEducationCourseEnr_Organization");
//            });

//            modelBuilder.Entity<RefDoctoralExamsRequiredCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDoctoralExamsRequiredCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDoctoralExamsRequiredCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDoctoralExamsRequiredCode_Organization");
//            });

//            modelBuilder.Entity<RefDqpcategoriesOfLearning>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefDqpcategoriesOfLearningId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefDqpcategoriesOfLearnings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefDQPCategoriesOfLearning_Organization");
//            });

//            modelBuilder.Entity<RefEarlyChildhoodCredential>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodCredentialId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEarlyChildhoodCredentials)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEarlyChildhoodCredential_Organization");
//            });

//            modelBuilder.Entity<RefEarlyChildhoodProgramEnrollmentType>(entity =>
//            {
//                entity.HasKey(e => e.RefEarlyChildhoodProgramTypeId)
//                    .HasName("PK_RefEarlyLearningProgramType");

//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEarlyChildhoodProgramEnrollmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEarlyChildhoodProgramType_Organization");
//            });

//            modelBuilder.Entity<RefEarlyChildhoodService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEarlyChildhoodServicesId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEarlyChildhoodServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEarlyChildhoodServices_Organization");
//            });

//            modelBuilder.Entity<RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEdFactsAcademicOrCareerAndTechnicalOutcomeExitType_Organization");
//            });

//            modelBuilder.Entity<RefEdFactsAcademicOrCareerAndTechnicalOutcomeType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEdFactsAcademicOrCareerAndTechnicalOutcomeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEdFactsAcademicOrCareerAndTechnicalOutcomeType_Organization");
//            });

//            modelBuilder.Entity<RefEdfactsTeacherInexperiencedStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEdfactsTeacherInexperiencedStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEDFactsTeacherInexperiencedStatus_Organization");
//            });

//            modelBuilder.Entity<RefEducationLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEducationLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefEducationLevelType)
//                    .WithMany(p => p.RefEducationLevels)
//                    .HasForeignKey(d => d.RefEducationLevelTypeId)
//                    .HasConstraintName("FK_RefEducationLevel_RefEducationLevelType");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEducationLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEducationLevel_Organization");
//            });

//            modelBuilder.Entity<RefEducationLevelType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefEducationLevelTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEducationLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEducationLevelType_Organization");
//            });

//            modelBuilder.Entity<RefEducationVerificationMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEducationVerificationMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEducationVerificationMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEducationVerificationMethod_Organization");
//            });

//            modelBuilder.Entity<RefEleducationStaffClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEleducationStaffClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEleducationStaffClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELEducationStaffClassification_Organization");
//            });

//            modelBuilder.Entity<RefElementaryMiddleAdditional>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElementaryMiddleAdditionalId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElementaryMiddleAdditionals)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefElementaryMiddleAdditional_Organization");
//            });

//            modelBuilder.Entity<RefElemploymentSeparationReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElemploymentSeparationReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElemploymentSeparationReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELEmploymentSeparationReason_Organization");
//            });

//            modelBuilder.Entity<RefElfacilityLicensingStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElfacilityLicensingStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElfacilityLicensingStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELFacilityLicensingStatus_Organization");
//            });

//            modelBuilder.Entity<RefElfederalFundingType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElfederalFundingTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElfederalFundingTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELFederalFundingType_Organization");
//            });

//            modelBuilder.Entity<RefElgroupSizeStandardMet>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElgroupSizeStandardMetId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElgroupSizeStandardMets)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELGroupSizeStandardMet_Organization");
//            });

//            modelBuilder.Entity<RefEllevelOfSpecialization>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEllevelOfSpecializationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEllevelOfSpecializations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELLevelOfSpecialization_Organization");
//            });

//            modelBuilder.Entity<RefEllocalRevenueSource>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEllocalRevenueSourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEllocalRevenueSources)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELLocalRevenueSource_Organization");
//            });

//            modelBuilder.Entity<RefElotherFederalFundingSource>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElotherFederalFundingSourcesId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElotherFederalFundingSources)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELOtherFederalFundingSources_Organization");
//            });

//            modelBuilder.Entity<RefEloutcomeMeasurementLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEloutcomeMeasurementLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEloutcomeMeasurementLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELOutcomeMeasurementLevel_Organization");
//            });

//            modelBuilder.Entity<RefElprofessionalDevelopmentTopicArea>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprofessionalDevelopmentTopicAreaId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElprofessionalDevelopmentTopicAreas)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELProfessionalDevelopmentTopicArea_Organization");
//            });

//            modelBuilder.Entity<RefElprogramEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramEligibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElprogramEligibilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELProgramEligibility_Organization");
//            });

//            modelBuilder.Entity<RefElprogramEligibilityStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramEligibilityStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElprogramEligibilityStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELProgramEligibilityStatus_Organization");
//            });

//            modelBuilder.Entity<RefElprogramLicenseStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElprogramLicenseStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElprogramLicenseStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELProgramLicenseStatus_Organization");
//            });

//            modelBuilder.Entity<RefElserviceProfessionalStaffClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElserviceProfessionalStaffClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElserviceProfessionalStaffClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELServiceProfessionalStaffClassification_Organization");
//            });

//            modelBuilder.Entity<RefElserviceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElserviceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElserviceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELServiceType_Organization");
//            });

//            modelBuilder.Entity<RefElstateRevenueSource>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefElstateRevenueSourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefElstateRevenueSources)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELStateRevenueSource_Organization");
//            });

//            modelBuilder.Entity<RefEltrainerCoreKnowledgeArea>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEltrainerCoreKnowledgeAreaId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEltrainerCoreKnowledgeAreas)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefELTrainerCoreKnowledgeArea_Organization");
//            });

//            modelBuilder.Entity<RefEmailType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmailTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmailTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmailType_Organization");
//            });

//            modelBuilder.Entity<RefEmergencyOrProvisionalCredentialStatus>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmergencyOrProvisionalCredentialStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmergencyOrProvisionalCredentialStatus_Org");
//            });

//            modelBuilder.Entity<RefEmployedAfterExit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedAfterExitId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmployedAfterExits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmployedAfterExit_Organization");
//            });

//            modelBuilder.Entity<RefEmployedPriorToEnrollment>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedPriorToEnrollmentId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmployedPriorToEnrollments)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmployedPriorToEnrollment_Organization");
//            });

//            modelBuilder.Entity<RefEmployedWhileEnrolled>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedWhileEnrolledId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmployedWhileEnrolleds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmployedWhileEnrolled_Organization");
//            });

//            modelBuilder.Entity<RefEmployeeBenefit>(entity =>
//            {
//                entity.Property(e => e.RefEmployeeBenefitId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmployeeBenefits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmployeeBenefit_Organization");
//            });

//            modelBuilder.Entity<RefEmploymentContractType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentContractTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmploymentContractTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmploymentContractType_Organization");
//            });

//            modelBuilder.Entity<RefEmploymentLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentLocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");
//            });

//            modelBuilder.Entity<RefEmploymentSeparationReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentSeparationReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmploymentSeparationReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmploymentSeparationReason_Organization");
//            });

//            modelBuilder.Entity<RefEmploymentSeparationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentSeparationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmploymentSeparationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmploymentSeparationType_Organization");
//            });

//            modelBuilder.Entity<RefEmploymentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmploymentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmploymentStatus_Organization");
//            });

//            modelBuilder.Entity<RefEmploymentStatusWhileEnrolled>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentStatusWhileEnrolledId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEmploymentStatusWhileEnrolleds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEmploymentStatusWhileEnrolled_Organization");
//            });

//            modelBuilder.Entity<RefEndOfTermStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEndOfTermStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEndOfTermStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEndOfTermStatus_Organization");
//            });

//            modelBuilder.Entity<RefEnrollmentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEnrollmentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEnrollmentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEnrollmentStatus_Organization");
//            });

//            modelBuilder.Entity<RefEntityType>(entity =>
//            {
//                entity.HasComment("CEDS entities. Used when the relationship of data requires the associated entity to be specified.");

//                entity.Property(e => e.RefEntityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEntityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefAssociatedEntityType_Organization");
//            });

//            modelBuilder.Entity<RefEntryType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEntryTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEntryTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEntryType_Organization");
//            });

//            modelBuilder.Entity<RefEnvironmentSetting>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEnvironmentSettingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEnvironmentSettings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEnvironmentSetting_Organization");
//            });

//            modelBuilder.Entity<RefEradministrativeDataSource>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEradministrativeDataSourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefEradministrativeDataSources)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefERAdministrativeDataSource_Organization");
//            });

//            modelBuilder.Entity<RefErsruralUrbanContinuumCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefErsruralUrbanContinuumCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefErsruralUrbanContinuumCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefERSRuralUrbanContinuumCode_Organization");
//            });

//            modelBuilder.Entity<RefExitOrWithdrawalStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefExitOrWithdrawalStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefExitOrWithdrawalStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefExitOrWithdrawalStatus_Organization");
//            });

//            modelBuilder.Entity<RefExitOrWithdrawalType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefExitOrWithdrawalTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefExitOrWithdrawalTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefExitOrWithdrawalType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitiesMandateAuthorityType>(entity =>
//            {
//                entity.Property(e => e.RefFacilitiesMandateAuthorityTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitiesMandateAuthorityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitiesMandateAuthorityType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitiesMgmtEmergencyType>(entity =>
//            {
//                entity.Property(e => e.RefFacilitiesMgmtEmergencyTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitiesMgmtEmergencyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitiesMgmtEmergencyType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitiesPlanType>(entity =>
//            {
//                entity.Property(e => e.RefFacilitiesPlanTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitiesPlanTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitiesPlanType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityApplicableFederalMandateType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityApplicableFederalMandateTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityApplicableFederalMandateTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityApplicableFederalMandateType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityAuditType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityAuditTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityAuditTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityAuditType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityCapitalProgramMgmtType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityCapitalProgramMgmtTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityCapitalProgramMgmtTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityCapitalProgramMgmtType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityComplianceAgencyType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityComplianceAgencyTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityComplianceAgencyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityComplianceAgencyType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityComplianceStatus>(entity =>
//            {
//                entity.Property(e => e.RefFacilityComplianceStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityComplianceStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityComplianceStatus_Organization");
//            });

//            modelBuilder.Entity<RefFacilityConstructionDateType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityConstructionDateTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityConstructionDateTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityConstructionDateType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityConstructionMaterialType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityConstructionMaterialTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityConstructionMaterialTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityConstructionMaterialType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityFederalMandateInterestType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityFederalMandateInterestTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityFederalMandateInterestTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityFederalMandateInterestType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityFinancingFeeType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityFinancingFeeTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityFinancingFeeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityFinancingFeeType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityFurnishingsType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityFurnishingsTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityFurnishingsTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityFurnishingsType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityHazardousMaterialsOrCondType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityHazardousMaterialsOrCondTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityHazardousMaterialsOrCondTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityHazardousMaterialsOrCondType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityJointDevelopmentType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityJointDevelopmentTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityJointDevelopmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityJointDevelopmentType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityLeaseAmountCategory>(entity =>
//            {
//                entity.Property(e => e.RefFacilityLeaseAmountCategoryId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityLeaseAmountCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityLeaseAmountCategory_Organization");
//            });

//            modelBuilder.Entity<RefFacilityLeaseType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityLeaseTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityLeaseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityLeaseType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityMaintStandardType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityMaintStandardTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityMaintStandardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityMaintStandardType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityMortgageInterestType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityMortgageInterestTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityMortgageInterestTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityMortgageInterestType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityMortgageType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityMortgageTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityMortgageTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityMortgageType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityNaturallyOccurringHazardType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityNaturallyOccurringHazardTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityNaturallyOccurringHazardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityNaturallyOccurringHazardType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityOperationsMgmtType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityOperationsMgmtTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityOperationsMgmtTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityOperationsMgmtType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitySiteImprovementLocationType>(entity =>
//            {
//                entity.Property(e => e.RefFacilitySiteImprovementLocationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitySiteImprovementLocationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitySiteImprovementLocationType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitySiteOutdoorAreaType>(entity =>
//            {
//                entity.Property(e => e.RefFacilitySiteOutdoorAreaTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitySiteOutdoorAreaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitySiteOutdoorAreaType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityStandardType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityStandardTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityStandardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityStandardType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityStateOrLocalMandateInterestType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityStateOrLocalMandateInterestTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityStateOrLocalMandateInterestTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityStateOrLocalMandateInterestType_Organization");
//            });

//            modelBuilder.Entity<RefFacilitySystemOrComponentCondition>(entity =>
//            {
//                entity.Property(e => e.RefFacilitySystemOrComponentConditionId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilitySystemOrComponentConditions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilitySystemOrComponentCondition_Organization");
//            });

//            modelBuilder.Entity<RefFacilityUtilityProviderType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityUtilityProviderTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityUtilityProviderTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityUtilityProviderType_Organization");
//            });

//            modelBuilder.Entity<RefFacilityUtilityType>(entity =>
//            {
//                entity.Property(e => e.RefFacilityUtilityTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFacilityUtilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFacilityUtilityType_Organization");
//            });

//            modelBuilder.Entity<RefFamilyIncomeSource>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFamilyIncomeSourceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFamilyIncomeSources)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFamilyIncomeSource_Org");
//            });

//            modelBuilder.Entity<RefFederalProgramFundingAllocationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFederalProgramFundingAllocationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFederalProgramFundingAllocationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFederalFundingAllocation_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAccountBalanceSheetCode>(entity =>
//            {
//                entity.HasKey(e => e.RefFinancialBalanceSheetAccountCodeId)
//                    .HasName("PK_RefFinancialBalanceSheetAccountCode");

//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialBalanceSheetAccountCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAccountBalanceSheetCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialBalanceSheetAccountCode_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAccountCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAccountCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAccountCategory_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAccountFundClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountFundClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAccountFundClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAccountFundClassification_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAccountProgramCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountProgramCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAccountProgramCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAccountProgramCode_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAccountRevenueCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAccountRevenueCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAccountRevenueCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialRevenueAccountCode_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAidApplicationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidApplicationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAidApplicationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAidApplType_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAidAwardStatus>(entity =>
//            {
//                entity.HasKey(e => e.RefFinancialAidStatusId)
//                    .HasName("PK_FinancialAidAwardStatus");

//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAidAwardStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAidAwardStatus_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAidAwardType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidAwardTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAidAwardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAidAwardType_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAidVeteransBenefitStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidVeteransBenefitStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAidVeteransBenefitStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAidVeteransBenefitStatus_Organization");
//            });

//            modelBuilder.Entity<RefFinancialAidVeteransBenefitType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialAidVeteransBenefitTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialAidVeteransBenefitTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialAidVeteransBenefitType_Organization");
//            });

//            modelBuilder.Entity<RefFinancialExpenditureFunctionCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureFunctionCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialExpenditureFunctionCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialExpenditureFunctionCode_Organization");
//            });

//            modelBuilder.Entity<RefFinancialExpenditureLevelOfInstructionCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureLevelOfInstructionCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialExpenditureLevelOfInstructionCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialExpenditureLevelOfInstructionCode_Organization");
//            });

//            modelBuilder.Entity<RefFinancialExpenditureObjectCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFinancialExpenditureObjectCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFinancialExpenditureObjectCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFinancialExpenditureObjectCode_Organization");
//            });

//            modelBuilder.Entity<RefFirearmType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFirearmTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFirearmTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFirearmType_Organization");
//            });

//            modelBuilder.Entity<RefFoodServiceEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFoodServiceEligibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdiction).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdictionNavigation)
//                    .WithMany(p => p.RefFoodServiceEligibilities)
//                    .HasForeignKey(d => d.RefJurisdiction)
//                    .HasConstraintName("FK_RefFoodServiceEligibility_Organization");
//            });

//            modelBuilder.Entity<RefFoodServiceParticipation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFoodServiceParticipationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFoodServiceParticipations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFoodServiceParticipation_Organization");
//            });

//            modelBuilder.Entity<RefFrequencyOfService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFrequencyOfServiceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFrequencyOfServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFrequencyOfService_Organization");
//            });

//            modelBuilder.Entity<RefFrequencyUnit>(entity =>
//            {
//                entity.Property(e => e.RefFrequencyUnitId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFrequencyUnits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFrequencyUnit_Organization");
//            });

//            modelBuilder.Entity<RefFullTimeStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefFullTimeStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefFullTimeStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefFullTimeStatus_Organization");
//            });

//            modelBuilder.Entity<RefGoalMeasurementType>(entity =>
//            {
//                entity.Property(e => e.RefGoalMeasurementTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGoalMeasurementTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGoalMeasurementType_Organization");
//            });

//            modelBuilder.Entity<RefGoalStatusType>(entity =>
//            {
//                entity.Property(e => e.RefGoalStatusTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGoalStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGoalStatusType_Organization");
//            });

//            modelBuilder.Entity<RefGoalsForAttendingAdultEducation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGoalsForAttendingAdultEducationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGoalsForAttendingAdultEducations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGoalsForAttendingAdultEducation_Organization");
//            });

//            modelBuilder.Entity<RefGpaWeightedIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGpaWeightedIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGpaWeightedIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGpaWeightedIndicator_Organization");
//            });

//            modelBuilder.Entity<RefGradeLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradeLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefGradeLevelType)
//                    .WithMany(p => p.RefGradeLevels)
//                    .HasForeignKey(d => d.RefGradeLevelTypeId)
//                    .HasConstraintName("FK_RefGradeLevel_RefGradeLevelType");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGradeLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGradeLevel_Organization");
//            });

//            modelBuilder.Entity<RefGradeLevelType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefGradeLevelTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGradeLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGradeLevelType_Organization");
//            });

//            modelBuilder.Entity<RefGradeLevelsApproved>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGradeLevelsApproveds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGradeLevelsApproved_Organization");
//            });

//            modelBuilder.Entity<RefGradePointAverageDomain>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGradePointAverageDomainId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGradePointAverageDomains)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGradePointAverageDomain_Organization");
//            });

//            modelBuilder.Entity<RefGraduateAssistantIpedsCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGraduateAssistantIpedsCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGraduateAssistantIpedsCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGraduateAssistIpedsCategory_Organization");
//            });

//            modelBuilder.Entity<RefGraduateOrDoctoralExamResultsStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefGraduateOrDoctoralExamResultsStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGraduateOrDoctoralExamResultsStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGraduateOrDoctoralExamResultsStatus_Organization");
//            });

//            modelBuilder.Entity<RefGunFreeSchoolsActReportingStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefGunFreeSchoolsActReportingStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefGunFreeSchoolsActStatus_Organization1");
//            });

//            modelBuilder.Entity<RefHealthInsuranceCoverage>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHealthInsuranceCoverageId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHealthInsuranceCoverages)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInsuranceType_Org");
//            });

//            modelBuilder.Entity<RefHearingScreeningStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHearingScreeningStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHearingScreeningStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHearingScreeningStatus_Organization");
//            });

//            modelBuilder.Entity<RefHighSchoolDiplomaDistinctionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolDiplomaDistinctionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHighSchoolDiplomaDistinctionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHsDiplomaDistinctionType_Organization");
//            });

//            modelBuilder.Entity<RefHighSchoolDiplomaType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHighSchoolDiplomaTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHighSchoolDiplomaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHighSchoolDiplomaType_Organization");
//            });

//            modelBuilder.Entity<RefHighSchoolGraduationRateIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHighSchoolGraduationRateIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHSGraduationRateIndicator_Organization");
//            });

//            modelBuilder.Entity<RefHigherEducationInstitutionAccreditationStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHigherEducationInstitutionAccreditationStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHigherEducationInstitutionAccreditationStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHigherEdInstitutionAccreditationStatus_Organization");
//            });

//            modelBuilder.Entity<RefHomelessNighttimeResidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefHomelessNighttimeResidenceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefHomelessNighttimeResidences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefHomelessNighttimeResidence_Organization");
//            });

//            modelBuilder.Entity<RefIdeadisabilityType>(entity =>
//            {
//                entity.Property(e => e.RefIdeadisabilityTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeadisabilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIDEADisabilityType_Organization");
//            });

//            modelBuilder.Entity<RefIdeadisciplineMethodFirearm>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeadisciplineMethodFirearmId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeadisciplineMethodFirearms)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdeaDisciplineMethodFirearm_Organization");
//            });

//            modelBuilder.Entity<RefIdeaeducationalEnvironmentEc>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaeducationalEnvironmentEcid).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeaeducationalEnvironmentEcs)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdeaEdEnvironmentForEC_Organization");
//            });

//            modelBuilder.Entity<RefIdeaeducationalEnvironmentSchoolAge>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeaeducationalEnvironmentSchoolAges)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdeaEdEnvironmentSchoolAge_Organization");
//            });

//            modelBuilder.Entity<RefIdeaeligibilityEvaluationCategory>(entity =>
//            {
//                entity.Property(e => e.RefIdeaeligibilityEvaluationCategoryId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeaeligibilityEvaluationCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIDEAEligibilityEvaluationCategory_Organization");
//            });

//            modelBuilder.Entity<RefIdeaenvironmentEl>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaenvironmentElid).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeaenvironmentEls)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIDEAEnvironmentEL_Organization");
//            });

//            modelBuilder.Entity<RefIdeaiepstatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeaiepstatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeaiepstatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIDEAIEPStatus_Organization");
//            });

//            modelBuilder.Entity<RefIdeainterimRemoval>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeainterimRemovalId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeainterimRemovals)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdeaInterimRemovalId_Organization");
//            });

//            modelBuilder.Entity<RefIdeainterimRemovalReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeainterimRemovalReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeainterimRemovalReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdeaInterimRemovalReason_Organization");
//            });

//            modelBuilder.Entity<RefIdeapartCeligibilityCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIdeapartCeligibilityCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIdeapartCeligibilityCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIDEAPartCEligibilityCategory_Organization");
//            });

//            modelBuilder.Entity<RefIepauthorizationDocumentType>(entity =>
//            {
//                entity.Property(e => e.RefIepauthorizationDocumentTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIepauthorizationDocumentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIEPAuthorizationDocumentType_Organization");
//            });

//            modelBuilder.Entity<RefIepeligibilityEvaluationType>(entity =>
//            {
//                entity.Property(e => e.RefIepeligibilityEvaluationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIepeligibilityEvaluationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIEPEligibilityEvaluationType_Organization");
//            });

//            modelBuilder.Entity<RefIepgoalType>(entity =>
//            {
//                entity.Property(e => e.RefIepgoalTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIepgoalTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIEPGoalType_Organization");
//            });

//            modelBuilder.Entity<RefImmunizationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefImmunizationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefImmunizationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefImmunization_Organization");
//            });

//            modelBuilder.Entity<RefIncidentBehavior>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentBehaviorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentBehaviors)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentBehavior_Organization");
//            });

//            modelBuilder.Entity<RefIncidentBehaviorSecondary>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentBehaviorSecondaryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentBehaviorSecondaries)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentBehaviorSecondary_Organization");
//            });

//            modelBuilder.Entity<RefIncidentInjuryType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentInjuryTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentInjuryTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentInjuryType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentLocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentLocations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentLocation_Organization");
//            });

//            modelBuilder.Entity<RefIncidentMultipleOffenseType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentMultipleOffenseTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentMultipleOffenseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentMultipleOffenseType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentPerpetratorInjuryType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPerpetratorInjuryTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentPerpetratorInjuryTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentPerpetratorInjuryType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentPersonRoleType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPersonRoleTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentPersonRoleTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentPersonRoleType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentPersonType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentPersonTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentPersonTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentPersonType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentReporterType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentReporterTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentReporterTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentReporterType_Organization");
//            });

//            modelBuilder.Entity<RefIncidentTimeDescriptionCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncidentTimeDescriptionCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncidentTimeDescriptionCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncidentTimeDescCode_Organization");
//            });

//            modelBuilder.Entity<RefIncomeCalculationMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncomeCalculationMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncomeCalculationMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncomeCalculation_Org");
//            });

//            modelBuilder.Entity<RefIncreasedLearningTimeType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIncreasedLearningTimeTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIncreasedLearningTimeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIncreasedLearningTimeType_Organization");
//            });

//            modelBuilder.Entity<RefIndicatorStateDefinedStatus>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndicatorStateDefinedStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndicatorStateDefinedStatus_Org");
//            });

//            modelBuilder.Entity<RefIndicatorStatusCustomType>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndicatorStatusCustomTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndicatorStatusCustomType_Org");
//            });

//            modelBuilder.Entity<RefIndicatorStatusSubgroupType>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndicatorStatusSubgroupTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndicatorStatusSubgroupType_Org");
//            });

//            modelBuilder.Entity<RefIndicatorStatusType>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndicatorStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndicatorStatusType_Org");
//            });

//            modelBuilder.Entity<RefIndividualizedProgramDateType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramDateTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndividualizedProgramDateTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndividualizedProgramDateType_Org");
//            });

//            modelBuilder.Entity<RefIndividualizedProgramLocation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramLocationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndividualizedProgramLocations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndividualizedProgramLocation_Org");
//            });

//            modelBuilder.Entity<RefIndividualizedProgramPlannedServiceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramPlannedServiceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndividualizedProgramPlannedServiceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndividualizedProgramPlannedServiceType_Organization");
//            });

//            modelBuilder.Entity<RefIndividualizedProgramTransitionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramTransitionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndividualizedProgramTransitionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndividualizedProgramTransitionType_Org");
//            });

//            modelBuilder.Entity<RefIndividualizedProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIndividualizedProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIndividualizedProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIndivProgramType_Org");
//            });

//            modelBuilder.Entity<RefInstitutionTelephoneType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstitutionTelephoneTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstitutionTelephoneTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstitutionTelephone_Org");
//            });

//            modelBuilder.Entity<RefInstructionCreditType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionCreditTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstructionCreditTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstructionCreditType_Organization");
//            });

//            modelBuilder.Entity<RefInstructionLocationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionLocationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstructionLocationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstructionLocationType_Organization");
//            });

//            modelBuilder.Entity<RefInstructionalActivityHour>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalActivityHoursId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstructionalActivityHours)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstructionalActivityHours_Organization");
//            });

//            modelBuilder.Entity<RefInstructionalStaffContractLength>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalStaffContractLengthId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstructionalStaffContractLengths)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstructStaffContractLength_Organization");
//            });

//            modelBuilder.Entity<RefInstructionalStaffFacultyTenure>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInstructionalStaffFacultyTenureId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInstructionalStaffFacultyTenures)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInstructStaffFacultyTenure_Organization");
//            });

//            modelBuilder.Entity<RefIntegratedTechnologyStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIntegratedTechnologyStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIntegratedTechnologyStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIntegratedTechnologyStatus_Organization");
//            });

//            modelBuilder.Entity<RefInternetAccess>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefInternetAccessId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInternetAccesses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInternetAccess_Organization");
//            });

//            modelBuilder.Entity<RefInternetAccessTypeInResidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInternetAccessTypeInResidences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInternetAccessTypeInResidence_Organization");
//            });

//            modelBuilder.Entity<RefInternetPerformanceInResidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefInternetPerformanceInResidences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefInternetPerformanceInResidence_Organization");
//            });

//            modelBuilder.Entity<RefIpedsOccupationalCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIpedsOccupationalCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsOccupationalCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIpedsOccupationalCategory_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbfinancialPosition>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbfinancialPositionId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbfinancialPositions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBFinancialPosition_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbfunctionalExpense>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbfunctionalExpenseId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbfunctionalExpenses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBFunctionalExpense_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbpellGrantTransaction>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbpellGrantTransactionsId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbpellGrantTransactions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBPellGrantTransactions_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbrevenue>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbrevenueId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbrevenues)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBRevenue_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbrevenueRestriction>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbrevenueRestrictionId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbrevenueRestrictions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBRevenueRestriction_Organization");
//            });

//            modelBuilder.Entity<RefIpedsfasbscholarshipsandFellowshipsRevenue>(entity =>
//            {
//                entity.Property(e => e.RefIpedsfasbscholarshipsandFellowshipsRevenueId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsfasbscholarshipsandFellowshipsRevenues)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSFASBScholarshipsandFellowshipsRevenue_Organization");
//            });

//            modelBuilder.Entity<RefIpedsgasbfinancialPosition>(entity =>
//            {
//                entity.Property(e => e.RefIpedsgasbfinancialPositionId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsgasbfinancialPositions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSGASBFinancialPosition_Organization");
//            });

//            modelBuilder.Entity<RefIpedsgasbfunctionalExpense>(entity =>
//            {
//                entity.Property(e => e.RefIpedsgasbfunctionalExpenseId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsgasbfunctionalExpenses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSGASBFunctionalExpense_Organization");
//            });

//            modelBuilder.Entity<RefIpedsgasbrevenue>(entity =>
//            {
//                entity.Property(e => e.RefIpedsgasbrevenueId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsgasbrevenues)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSGASBRevenue_Organization");
//            });

//            modelBuilder.Entity<RefIpedsgasbscholarshipsandFellowshipsRevenue>(entity =>
//            {
//                entity.Property(e => e.RefIpedsgasbscholarshipsandFellowshipsRevenueId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsgasbscholarshipsandFellowshipsRevenues)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSGASBScholarshipsandFellowshipsRevenue_Organization");
//            });

//            modelBuilder.Entity<RefIpedsintercollegiateAthleticsExpense>(entity =>
//            {
//                entity.Property(e => e.RefIpedsintercollegiateAthleticsExpensesId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsintercollegiateAthleticsExpenses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSIntercollegiateAthleticsExpenses_Organization");
//            });

//            modelBuilder.Entity<RefIpedsnaturalExpense>(entity =>
//            {
//                entity.Property(e => e.RefIpedsnaturalExpenseId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpedsnaturalExpenses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPEDSNaturalExpense_Organization");
//            });

//            modelBuilder.Entity<RefIpspprogressReportSchedule>(entity =>
//            {
//                entity.Property(e => e.RefIpspprogressReportScheduleId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpspprogressReportSchedules)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPSPProgressReportSchedule_Organization");
//            });

//            modelBuilder.Entity<RefIpspprogressReportType>(entity =>
//            {
//                entity.Property(e => e.RefIpspprogressReportTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIpspprogressReportTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIPSPProgressReportType_Organization");
//            });

//            modelBuilder.Entity<RefIso6392language>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIso6392languageId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIso6392languages)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefISO6392Language_Organization");
//            });

//            modelBuilder.Entity<RefIso6393language>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIso6393languageId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIso6393languages)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefISO6393Language_Organization");
//            });

//            modelBuilder.Entity<RefIso6395languageFamily>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefIso6395languageFamilyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefIso6395languageFamilies)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefISO6395LanguageFamily_Organization");
//            });

//            modelBuilder.Entity<RefItemResponseTheoryDifficultyCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefItemResponseTheoryDifficultyCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefItemResponseTheoryDifficultyCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIRtDifficultyCategory_Organization");
//            });

//            modelBuilder.Entity<RefItemResponseTheoryKappaAlgorithm>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefItemResponseTheoryKappaAlgorithmId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefItemResponseTheoryKappaAlgorithms)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIRtKappaAlgorithm_Organization");
//            });

//            modelBuilder.Entity<RefK12endOfCourseRequirement>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12endOfCourseRequirementId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefK12endOfCourseRequirements)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefK12EndOfCourseRequirement_Organization");
//            });

//            modelBuilder.Entity<RefK12leaTitleIsupportService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12leatitleIsupportServiceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefK12leaTitleIsupportServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefK12LEATitleISupportService_Organization");
//            });

//            modelBuilder.Entity<RefK12responsibilityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefK12responsibilityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefK12responsibilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefK12ResponsibilityType_Organization");
//            });

//            modelBuilder.Entity<RefK12staffClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefK12staffClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefEducationStaffClassification_Organization");
//            });

//            modelBuilder.Entity<RefLanguage>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLanguages)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLanguage_Organization");
//            });

//            modelBuilder.Entity<RefLanguageUseType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLanguageUseTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLanguageUseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLanguageUseType_Organization");
//            });

//            modelBuilder.Entity<RefLeaFundsTransferType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaFundsTransferTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLeaFundsTransferTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLEAFundsTransferType_Organization");
//            });

//            modelBuilder.Entity<RefLeaImprovementStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaImprovementStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLeaImprovementStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLEAImprovementStatus_Organization");
//            });

//            modelBuilder.Entity<RefLeaType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLeaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLeaType_Organization");
//            });

//            modelBuilder.Entity<RefLearnerActionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearnerActionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearnerActionType_Organization");
//            });

//            modelBuilder.Entity<RefLearnerActivityAddToGradeBookFlag>(entity =>
//            {
//                entity.Property(e => e.RefLearnerActivityAddToGradeBookFlagId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearnerActivityAddToGradeBookFlags)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearnerActivityAddToGradeBookFlag_Organization");
//            });

//            modelBuilder.Entity<RefLearnerActivityMaximumTimeAllowedUnit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActivityMaximumTimeAllowedUnitsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearnerActivityMaximumTimeAllowedUnits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMaxTimeAllowedUnits_Organization");
//            });

//            modelBuilder.Entity<RefLearnerActivityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearnerActivityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearnerActivityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearnerActivityType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceAccessApitype>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessApitypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceAccessApitypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceAccessAPIType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceAccessHazardType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessHazardTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceAccessHazardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceAccessHazardType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceAccessModeType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessModeTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceAccessModeTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceAccessModeType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceAccessRightsUrl>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAccessRightsUrlId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceAccessRightsUrls)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceAccessRightsUrl_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceAuthorType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceAuthorTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceAuthorTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceAuthorType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceBookFormatType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceBookFormatTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceBookFormatTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceBookFormatType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceCompetencyAlignmentType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceCompetencyAlignmentTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceCompetencyAlignmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceCompetencyAlignmentType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceControlFlexibilityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceControlFlexibilityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceControlFlexibilityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceControlFlexibilityType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceDigitalMediaSubType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceDigitalMediaSubTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceDigitalMediaSubTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceDigitalMediaSubType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceDigitalMediaType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceDigitalMediaTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceDigitalMediaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceDigitalMediaType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceEducationalUse>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceEducationalUseId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceEducationalUses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLREducationalUse_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceIntendedEndUserRole>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceIntendedEndUserRoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceIntendedEndUserRoles)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLRIntendedEndUserRole_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceInteractionMode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceInteractionModeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceInteractionModes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceInteractionMode_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceInteractivityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceInteractivityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceInteractivityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLRInteractivityType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceMediaFeatureType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceMediaFeatureTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceMediaFeatureTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourceMediaFeatureType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourcePhysicalMediaType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourcePhysicalMediaTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourcePhysicalMediaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLearningResourcePhysicalMediaType_Organization");
//            });

//            modelBuilder.Entity<RefLearningResourceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLearningResourceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLearningResourceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLRType_Organization");
//            });

//            modelBuilder.Entity<RefLeaveEventType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaveEventTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLeaveEventTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLeaveEventType_Organization");
//            });

//            modelBuilder.Entity<RefLevelOfInstitution>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLevelOfInstitutionId).HasComment("Surrogate key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLevelOfInstitutions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLevelOfInstitution_Organization");
//            });

//            modelBuilder.Entity<RefLicenseExempt>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLicenseExemptId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLicenseExempts)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLicenseExempt_Organization");
//            });

//            modelBuilder.Entity<RefLiteracyAssessment>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLiteracyAssessmentId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefLiteracyAssessments)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLiteracyAssessment_Organization");
//            });

//            modelBuilder.Entity<RefMagnetSpecialProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMagnetSpecialProgramId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMagnetSpecialPrograms)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMagnetSpecialProgram_Organization");
//            });

//            modelBuilder.Entity<RefMedicalAlertIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMedicalAlertIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMedicalAlertIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMedAlert_Org");
//            });

//            modelBuilder.Entity<RefMepEnrollmentType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepEnrollmentTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepEnrollmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMEPEnrollmentType_Organization");
//            });

//            modelBuilder.Entity<RefMepProjectBased>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepProjectBasedId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepProjectBaseds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMEPProjectBased_Organization");
//            });

//            modelBuilder.Entity<RefMepProjectType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepProjectTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepProjectTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMepProjectType_Organization");
//            });

//            modelBuilder.Entity<RefMepServiceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepServiceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepServiceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMEPServiceType_Organization");
//            });

//            modelBuilder.Entity<RefMepSessionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepSessionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepSessionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMEPSessionType_Organization");
//            });

//            modelBuilder.Entity<RefMepStaffCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMepStaffCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMepStaffCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMepStaffCategory_Organization");
//            });

//            modelBuilder.Entity<RefMethodOfServiceDelivery>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMethodOfServiceDeliveryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMethodOfServiceDeliveries)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMethodOfServiceDelivery_Organization");
//            });

//            modelBuilder.Entity<RefMilitaryActiveStudentIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryActiveStudentIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMilitaryActiveStudentIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMilitaryActiveStudentIndicator_Organization");
//            });

//            modelBuilder.Entity<RefMilitaryBranch>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryBranchId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMilitaryBranches)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMilitaryBranch_Organization");
//            });

//            modelBuilder.Entity<RefMilitaryConnectedStudentIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryConnectedStudentIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMilitaryConnectedStudentIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMilitaryConnectedStudentIndicator_Organization");
//            });

//            modelBuilder.Entity<RefMilitaryVeteranStudentIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMilitaryVeteranStudentIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMilitaryVeteranStudentIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMilitaryVeteranStudentIndicator_Organization");
//            });

//            modelBuilder.Entity<RefMultipleIntelligenceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefMultipleIntelligenceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefMultipleIntelligenceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefMultipleIntelligenceType_Organization");
//            });

//            modelBuilder.Entity<RefNaepAspectsOfReading>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNaepAspectsOfReadingId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNaepAspectsOfReadings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNAEPAspectsOfReading_Organization");
//            });

//            modelBuilder.Entity<RefNaepMathComplexityLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNaepMathComplexityLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNaepMathComplexityLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNAEPMathComplexityLevel_Organization");
//            });

//            modelBuilder.Entity<RefNationalSchoolLunchProgramStatus>(entity =>
//            {
//                entity.Property(e => e.RefNationalSchoolLunchProgramStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNationalSchoolLunchProgramStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNationalSchoolLunchProgramStatus_Organization");
//            });

//            modelBuilder.Entity<RefNcescollegeCourseMapCode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNcescollegeCourseMapCodeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNcescollegeCourseMapCodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNCESCollegeCourseMapCode_Organization");
//            });

//            modelBuilder.Entity<RefNeedDeterminationMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNeedDeterminationMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNeedDeterminationMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNeedDeterminationMethod_Organization");
//            });

//            modelBuilder.Entity<RefNeglectedProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNeglectedProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNeglectedProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNeglectedProgramType_Organization");
//            });

//            modelBuilder.Entity<RefNonPromotionReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNonPromotionReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNonPromotionReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNonPromotionReason_Organization");
//            });

//            modelBuilder.Entity<RefNonTraditionalGenderStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefNonTraditionalGenderStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNonTraditionalGenderStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNonTraditionalGenderStatus_Organization");
//            });

//            modelBuilder.Entity<RefNslpstatus>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNslpstatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNSLPStatus_Organization");
//            });

//            modelBuilder.Entity<RefNumberOfDependentsType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefNumberOfDependentsTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefNumberOfDependentsType_Organization");
//            });

//            modelBuilder.Entity<RefOnetsococcupationType>(entity =>
//            {
//                entity.Property(e => e.RefOnetsococcupationTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOnetsococcupationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefONETSOCOccupationType_Organization");
//            });

//            modelBuilder.Entity<RefOperationalStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOperationalStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOperationalStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOperationalStatus_Organization");

//                entity.HasOne(d => d.RefOperationalStatusType)
//                    .WithMany(p => p.RefOperationalStatuses)
//                    .HasForeignKey(d => d.RefOperationalStatusTypeId)
//                    .HasConstraintName("FK_RefOperationalStatus_RefOperationalStatusType");
//            });

//            modelBuilder.Entity<RefOperationalStatusType>(entity =>
//            {
//                entity.HasComment("List of operational status types.");

//                entity.Property(e => e.RefOperationalStatusTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOperationalStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOperationalStatusType_Organization");
//            });

//            modelBuilder.Entity<RefOrganizationElementType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefOrganizationElementTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationElementTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationElementType_Organization");
//            });

//            modelBuilder.Entity<RefOrganizationIdentificationSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationIdentificationSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RefOrganizationIdentifierTypeId).HasComment("List of identification system types.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationIdentificationSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdentifierOrg_Org");

//                entity.HasOne(d => d.RefOrganizationIdentifierType)
//                    .WithMany(p => p.RefOrganizationIdentificationSystems)
//                    .HasForeignKey(d => d.RefOrganizationIdentifierTypeId)
//                    .HasConstraintName("FK_RefOrgIdentificationSystem _RefOrganizationIdentifierType");
//            });

//            modelBuilder.Entity<RefOrganizationIdentifierType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefOrganizationIdentifierTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationIdentifierTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationIdentifierType_Organization");
//            });

//            modelBuilder.Entity<RefOrganizationIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RefOrganizationTypeId).HasComment("Indicators may only apply to some types of organizations.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationIndicator_Organization");

//                entity.HasOne(d => d.RefOrganizationType)
//                    .WithMany(p => p.RefOrganizationIndicators)
//                    .HasForeignKey(d => d.RefOrganizationTypeId)
//                    .HasConstraintName("FK_RefOrganizationIndicator_RefOrganizationType");
//            });

//            modelBuilder.Entity<RefOrganizationLocationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationLocationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationLocationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationLoc_Org");
//            });

//            modelBuilder.Entity<RefOrganizationMonitoringNotification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationMonitoringNotificationsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationMonitoringNotifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationMonitoringNotifications_Organization");
//            });

//            modelBuilder.Entity<RefOrganizationRelationship>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationRelationshipId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationRelationships)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationRelationship_Organization");
//            });

//            modelBuilder.Entity<RefOrganizationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOrganizationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOrganizationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOrganizationType_Organization");

//                entity.HasOne(d => d.RefOrganizationElementType)
//                    .WithMany(p => p.RefOrganizationTypes)
//                    .HasForeignKey(d => d.RefOrganizationElementTypeId)
//                    .HasConstraintName("FK_RefOrganizationType_RefOrganizationElementType");
//            });

//            modelBuilder.Entity<RefOtherNameType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOtherNameTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOtherNameTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOtherName_Organization");
//            });

//            modelBuilder.Entity<RefOutOfFieldStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOutOfFieldStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOutOfFieldStatus_Org");
//            });

//            modelBuilder.Entity<RefOutcomeTimePoint>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefOutcomeTimePointId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefOutcomeTimePoints)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefOutcomeTimePoint_Organization");
//            });

//            modelBuilder.Entity<RefParaprofessionalQualification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefParaprofessionalQualificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefParaprofessionalQualifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefParaprofessionalQualification_Organization");
//            });

//            modelBuilder.Entity<RefParticipationStatusAyp>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefParticipationStatusAypId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefParticipationStatusAyps)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefParticipationStatusAYP_Organization");
//            });

//            modelBuilder.Entity<RefParticipationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefParticipationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.OrganizationId).HasComment("Surrogate Key to Organization identifying the Program.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.RefParticipationTypes)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .HasConstraintName("FK_RefParticipationType_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityApprovedPurpose>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityApprovedPurposes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityApprovedFor_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityCreditType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityCreditTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityCreditTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityCreditType_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityEducationLevelsAddressed>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityEducationLevelsAddressedId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityEducationLevelsAddresseds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityEducationLevelsAddressed_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityLevel_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityTargetAudience>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityTargetAudienceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityTargetAudiences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityTargetAudience_Organization");
//            });

//            modelBuilder.Entity<RefPdactivityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdactivityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdactivityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDActivityType_Organization");
//            });

//            modelBuilder.Entity<RefPdaudienceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdaudienceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdaudienceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDAudienceType_Organization");
//            });

//            modelBuilder.Entity<RefPddeliveryMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPddeliveryMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPddeliveryMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDDeliveryMethod_Organization");
//            });

//            modelBuilder.Entity<RefPdinstructionalDeliveryMode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdinstructionalDeliveryModeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdinstructionalDeliveryModes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDInstructionalDeliveryMode_Organization");
//            });

//            modelBuilder.Entity<RefPdsessionStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPdsessionStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPdsessionStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPDSessionStatus_Organization");
//            });

//            modelBuilder.Entity<RefPersonIdentificationSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonIdentificationSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RefPersonIdentifierTypeId).HasComment("List of identification system types.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonIdentificationSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefIdentifierPerson_Organization");

//                entity.HasOne(d => d.RefPersonIdentifierType)
//                    .WithMany(p => p.RefPersonIdentificationSystems)
//                    .HasForeignKey(d => d.RefPersonIdentifierTypeId)
//                    .HasConstraintName("FK_RefPersonIdentificationSystem _RefPersonIdentifierType");
//            });

//            modelBuilder.Entity<RefPersonIdentifierType>(entity =>
//            {
//                entity.HasComment("List of identification system types.");

//                entity.Property(e => e.RefPersonIdentifierTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonIdentifierTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonIdentifierType_Organization");
//            });

//            modelBuilder.Entity<RefPersonLocationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonLocationTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RoleId).HasComment("Surrogate key from Role identifying the type of person (Child, Student, Staff, Parent, etc.).");

//                entity.HasOne(d => d.RefAddressType)
//                    .WithMany(p => p.RefPersonLocationTypes)
//                    .HasForeignKey(d => d.RefAddressTypeId)
//                    .HasConstraintName("FK_RefPersonLocationType_RefAddressType");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonLocationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonLocationType_Organization");
//            });

//            modelBuilder.Entity<RefPersonRelationshipType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonRelationshipTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRelationship_Organization");
//            });

//            modelBuilder.Entity<RefPersonStatusType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonStatusTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonStatusType_Organization");
//            });

//            modelBuilder.Entity<RefPersonTelephoneNumberType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonTelephoneNumberTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonTelephoneNumberTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonTelephoneType_Organization");
//            });

//            modelBuilder.Entity<RefPersonalInformationType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonalInformationTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonalInformationType_Organization");
//            });

//            modelBuilder.Entity<RefPersonalInformationVerification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPersonalInformationVerificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPersonalInformationVerifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPersonalInfoVerification_Organization");
//            });

//            modelBuilder.Entity<RefPescawardLevelType>(entity =>
//            {
//                entity.Property(e => e.RefPescawardLevelTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPescawardLevelTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPESCAwardLevelType_Organization");
//            });

//            modelBuilder.Entity<RefPopulationServed>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPopulationServedId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPopulationServeds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPopulationServed_Organization");
//            });

//            modelBuilder.Entity<RefPreAndPostTestIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPreAndPostTestIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPreAndPostTestIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPreAndPostTestIndicator_Organization");
//            });

//            modelBuilder.Entity<RefPreKeligibleAgesNonIdea>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPreKeligibleAgesNonIdeaid).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPreKeligibleAgesNonIdeas)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPreKEligibleAgesNonIDEA_Organization");
//            });

//            modelBuilder.Entity<RefPredominantCalendarSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPredominantCalendarSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPredominantCalendarSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPredominantCalendarSystem_Organization");
//            });

//            modelBuilder.Entity<RefPrekindergartenEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPrekindergartenEligibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPrekindergartenEligibilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPrekindergartenEligibility_Organization");
//            });

//            modelBuilder.Entity<RefPresentAttendanceCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPresentAttendanceCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPresentAttendanceCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPresentAttendanceCategory_Organization");
//            });

//            modelBuilder.Entity<RefPrimaryLearningDeviceAccess>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPrimaryLearningDeviceAccesses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPrimaryLearningDeviceAccess_Organization");
//            });

//            modelBuilder.Entity<RefPrimaryLearningDeviceAwayFromSchool>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPrimaryLearningDeviceAwayFromSchools)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPrimaryLearningDeviceAwayFromSchool_Organization");
//            });

//            modelBuilder.Entity<RefPrimaryLearningDeviceProvider>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPrimaryLearningDeviceProviders)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPrimaryLearningDeviceProvider_Organization");
//            });

//            modelBuilder.Entity<RefProfessionalDevelopmentFinancialSupport>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalDevelopmentFinancialSupportId).HasComment("Surrogate key.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProfessionalDevelopmentFinancialSupports)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProfDevFinancialSupport_Organization");
//            });

//            modelBuilder.Entity<RefProfessionalEducationJobClassification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalEducationJobClassificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProfessionalEducationJobClassifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProfessionalEducationJobClassification_Organization");
//            });

//            modelBuilder.Entity<RefProfessionalTechnicalCredentialType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalTechnicalCredentialTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProfessionalTechnicalCredentialTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProfTechCredentialType_Organization");
//            });

//            modelBuilder.Entity<RefProficiencyStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProficiencyStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProficiencyStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProficiencyStatus_Organization");
//            });

//            modelBuilder.Entity<RefProficiencyTargetAyp>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProficiencyTargetAypId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProficiencyTargetAyps)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProficiencyTargetAYP_Organization");
//            });

//            modelBuilder.Entity<RefProfitStatus>(entity =>
//            {
//                entity.Property(e => e.RefProfitStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProfitStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProfitStatus_Organization");
//            });

//            modelBuilder.Entity<RefProgramDayLength>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramDayLengthId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramDayLengths)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramDayLength_Organization");
//            });

//            modelBuilder.Entity<RefProgramEntryReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramEntryReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramEntryReason_Organization");
//            });

//            modelBuilder.Entity<RefProgramExitReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramExitReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramExitReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramExitReason_Organization");
//            });

//            modelBuilder.Entity<RefProgramGiftedEligibility>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramGiftedEligibilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramGiftedEligibilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramGiftedEligibility_Organization");
//            });

//            modelBuilder.Entity<RefProgramLengthHoursType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramLengthHoursTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramLengthHoursTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramLengthHoursType_Organization");
//            });

//            modelBuilder.Entity<RefProgramSponsorType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramSponsorTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdiction).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdictionNavigation)
//                    .WithMany(p => p.RefProgramSponsorTypes)
//                    .HasForeignKey(d => d.RefJurisdiction)
//                    .HasConstraintName("FK_RefProgramSponsorType_Organization");
//            });

//            modelBuilder.Entity<RefProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.\r\n");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgramType_Organization");
//            });

//            modelBuilder.Entity<RefProgressAchievingEnglishLanguageProficiencyIndicatorStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");
//            });

//            modelBuilder.Entity<RefProgressLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProgressLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProgressLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProgressLevel_Organization");
//            });

//            modelBuilder.Entity<RefPromotionReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPromotionReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPromotionReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPromotionReason_Organization");
//            });

//            modelBuilder.Entity<RefProofOfResidencyType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProofOfResidencyTypeId).HasComment("An accepted form of proof of residency in the district/county/other locality. [CEDS Element: Proof of Residency Type, ID:000305]");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefProofOfResidencyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefProofOfResidencyType_Organization");
//            });

//            modelBuilder.Entity<RefPsEnrollmentAction>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentActionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdiction).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdictionNavigation)
//                    .WithMany(p => p.RefPsEnrollmentActions)
//                    .HasForeignKey(d => d.RefJurisdiction)
//                    .HasConstraintName("FK_RefPSEnrollmentAction_Organization");
//            });

//            modelBuilder.Entity<RefPsEnrollmentAwardType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentAwardTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsEnrollmentAwardTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPsEnrollmentAwardType_Organization");
//            });

//            modelBuilder.Entity<RefPsEnrollmentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsEnrollmentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPsEnrollmentStatus_Organization");
//            });

//            modelBuilder.Entity<RefPsEnrollmentType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsEnrollmentTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsEnrollmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPsEnrollmentType_Organization");
//            });

//            modelBuilder.Entity<RefPsLepType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsLepTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsLepTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPostsecondaryLEPType_Organization");
//            });

//            modelBuilder.Entity<RefPsStudentLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsStudentLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsStudentLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPsStudentLevel_Organization");
//            });

//            modelBuilder.Entity<RefPsexitOrWithdrawalType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsexitOrWithdrawalTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsexitOrWithdrawalTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPSExitOrWithdrawalType_Organization");
//            });

//            modelBuilder.Entity<RefPsprogramLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPsprogramLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPsprogramLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPSProgramLevel_Organization");
//            });

//            modelBuilder.Entity<RefPublicSchoolChoiceStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPublicSchoolChoiceStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPublicSchoolChoiceStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPublicSchoolChoiceStatus_Organization");
//            });

//            modelBuilder.Entity<RefPublicSchoolResidence>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPublicSchoolResidenceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPublicSchoolResidences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPublicSchoolResidence_Organization");
//            });

//            modelBuilder.Entity<RefPurposeOfMonitoringVisit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPurposeOfMonitoringVisitId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefPurposeOfMonitoringVisits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefPurposeOfMonitoringVisit_Organization");
//            });

//            modelBuilder.Entity<RefQrisParticipation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefQrisParticipationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefQrisParticipations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefQRISParticipation_Organization");
//            });

//            modelBuilder.Entity<RefRace>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRaceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRaces)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRace_Organization");
//            });

//            modelBuilder.Entity<RefReapAlternativeFundingStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReapAlternativeFundingStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefReapAlternativeFundingStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefREAPAlternativeFundingStatus_Organization");
//            });

//            modelBuilder.Entity<RefReasonDelayTransitionConf>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReasonDelayTransitionConfId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefReasonDelayTransitionConfs)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefReasonDelayTransitionConf_Organization");
//            });

//            modelBuilder.Entity<RefReconstitutedStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReconstitutedStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefReconstitutedStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefReconstitutedStatus_Organization");
//            });

//            modelBuilder.Entity<RefRecordStatusCreatorEntity>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRecordStatusCreatorEntities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRecordStatusCreatorEntity_Organization");
//            });

//            modelBuilder.Entity<RefRecordStatusType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRecordStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRecordStatusType_Organization");
//            });

//            modelBuilder.Entity<RefReferralOutcome>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReferralOutcomeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefReferralOutcomes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefReferralOutcome_Organization");
//            });

//            modelBuilder.Entity<RefReimbursementType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefReimbursementTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefReimbursementTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefReimbursementType_Organization");
//            });

//            modelBuilder.Entity<RefRestructuringAction>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRestructuringActionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRestructuringActions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRestructuringAction_Organization");
//            });

//            modelBuilder.Entity<RefRlisProgramUse>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRlisProgramUseId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRlisProgramUses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRLISProgramUse_Organization");
//            });

//            modelBuilder.Entity<RefRole>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRoles)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRole_Organization");
//            });

//            modelBuilder.Entity<RefRoleStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRoleStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RefRoleStatusTypeId).HasComment("List of role status types.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRoleStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRoleStatus_Organization");

//                entity.HasOne(d => d.RefRoleStatusType)
//                    .WithMany(p => p.RefRoleStatuses)
//                    .HasForeignKey(d => d.RefRoleStatusTypeId)
//                    .HasConstraintName("FK_RefRoleStatus_RefRoleStatusType");
//            });

//            modelBuilder.Entity<RefRoleStatusType>(entity =>
//            {
//                entity.HasComment("List of role status types.");

//                entity.Property(e => e.RefRoleStatusTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefRoleStatusTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefRoleStatusType_Organization");
//            });

//            modelBuilder.Entity<RefScedcourseLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefScedcourseLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSCEDCourseLevel_Organization");
//            });

//            modelBuilder.Entity<RefScedcourseSubjectArea>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScedcourseSubjectAreaId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefScedcourseSubjectAreas)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSCEDCourseSubjectArea_Organization");
//            });

//            modelBuilder.Entity<RefScheduledWellChildScreening>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScheduledWellChildScreeningId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefScheduledWellChildScreenings)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefScheduledWellChildScreening_Organization");
//            });

//            modelBuilder.Entity<RefSchoolDangerousStatus>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSchoolDangerousStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSchoolDangerousStatus_Organization");
//            });

//            modelBuilder.Entity<RefSchoolFoodServiceProgram>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolFoodServiceProgramId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdiction).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdictionNavigation)
//                    .WithMany(p => p.RefSchoolFoodServicePrograms)
//                    .HasForeignKey(d => d.RefJurisdiction)
//                    .HasConstraintName("FK_RefSchoolFoodServiceProgram_Organization");
//            });

//            modelBuilder.Entity<RefSchoolImprovementFund>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolImprovementFundsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSchoolImprovementFunds)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSchoolImprovementFunds_Organization");
//            });

//            modelBuilder.Entity<RefSchoolImprovementStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolImprovementStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSchoolImprovementStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSchoolImprovementStatus_Organization");
//            });

//            modelBuilder.Entity<RefSchoolLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSchoolLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSchoolLevel_Organization");
//            });

//            modelBuilder.Entity<RefSchoolType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSchoolTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSchoolTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSchoolType_Organization");
//            });

//            modelBuilder.Entity<RefScoreMetricType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefScoreMetricTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefScoreMetricTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefScoreMetricType_Organization");
//            });

//            modelBuilder.Entity<RefService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServicesId).HasComment("Surrogate Key.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefServices_Organization");
//            });

//            modelBuilder.Entity<RefServiceFrequency>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceFrequencyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefServiceFrequencies)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefServiceFrequency_Organization");
//            });

//            modelBuilder.Entity<RefServiceOption>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefServiceOptionId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefServiceOptions)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefServiceOption_Organization");
//            });

//            modelBuilder.Entity<RefSessionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSessionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSessionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSessionType_Organization");
//            });

//            modelBuilder.Entity<RefSex>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSexId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSexes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSex_Organization");
//            });

//            modelBuilder.Entity<RefSigInterventionType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSigInterventionTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSigInterventionTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSigInterventionType_Organization");
//            });

//            modelBuilder.Entity<RefSingleSexClassStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSingleSexClassStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSingleSexClassStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSingleSexClassStatus_Organization");
//            });

//            modelBuilder.Entity<RefSpaceUseType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSpaceUseTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSpaceUseTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSpaceUseType_Organization");
//            });

//            modelBuilder.Entity<RefSpecialEducationAgeGroupTaught>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSpecialEducationAgeGroupTaughtId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSpecialEducationAgeGroupTaughts)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSpecialEducationAgeGroupTaught_Organization");
//            });

//            modelBuilder.Entity<RefSpecialEducationExitReason>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSpecialEducationExitReasonId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSpecialEducationExitReasons)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSpecialEducationExitReason_Organization");
//            });

//            modelBuilder.Entity<RefSpecialEducationStaffCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSpecialEducationStaffCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSpecialEducationStaffCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSpecialEducationStaffCategory_Organization");
//            });

//            modelBuilder.Entity<RefStaffCompensationSourceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStaffCompensationSourceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStaffCompensationSourceType_Organization");
//            });

//            modelBuilder.Entity<RefStaffPerformanceLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStaffPerformanceLevelId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStaffPerformanceLevels)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStaffPerformanceLevel_Organization");
//            });

//            modelBuilder.Entity<RefStandardizedAdmissionTest>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStandardizedAdmissionTestId).HasComment("Surrogate key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStandardizedAdmissionTests)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStandardizedAdmissionTest_Organization");
//            });

//            modelBuilder.Entity<RefState>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStateId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStates)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefState_Organization");
//            });

//            modelBuilder.Entity<RefStateAnsicode>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStateAnsicodes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStateANSICode_Organization");
//            });

//            modelBuilder.Entity<RefStatePovertyDesignation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStatePovertyDesignationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStatePovertyDesignations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStatePovertyDesignation_Organization");
//            });

//            modelBuilder.Entity<RefStudentEnrollmentAccessType>(entity =>
//            {
//                entity.Property(e => e.RefStudentEnrollmentAccessTypeId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStudentEnrollmentAccessTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStudentEnrollmentAccessType_Organization");
//            });

//            modelBuilder.Entity<RefStudentSchoolAffiliationStateDefinedStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStudentSchoolAffiliationStateDefinedStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStudentSchoolAffiliationStateDefinedStatus_Organization");
//            });

//            modelBuilder.Entity<RefStudentSupportServiceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStudentSupportServiceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefStudentSupportServiceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefStudentSupportServiceType_Organization");
//            });

//            modelBuilder.Entity<RefSupervisedClinicalExperience>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefSupervisedClinicalExperienceId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefSupervisedClinicalExperiences)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefSupervisedClinicalExper_Organization");
//            });

//            modelBuilder.Entity<RefTargetedSupport>(entity =>
//            {
//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTargetedSupports)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTargetedSupport_Org");
//            });

//            modelBuilder.Entity<RefTargetedSupportAndImprovementStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTargetedSupportAndImprovementStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTargetedSupportAndImprovementStatus_Organization");
//            });

//            modelBuilder.Entity<RefTeacherEducationCredentialExam>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeacherEducationCredentialExamId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeacherEduCredentialExam_Organization");
//            });

//            modelBuilder.Entity<RefTeacherEducationExamScoreType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeacherEducationExamScoreTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeacherEducationExamScoreTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeacherEduExamScoreType_Organization");
//            });

//            modelBuilder.Entity<RefTeacherEducationTestCompany>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeacherEducationTestCompanyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeacherEducationTestCompanies)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeacherEduTestCompany_Organization");
//            });

//            modelBuilder.Entity<RefTeacherPrepCompleterStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeacherPrepCompleterStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeacherPrepCompleterStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeacherPrepCompleterStatus_Organization");
//            });

//            modelBuilder.Entity<RefTeacherPrepEnrollmentStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeacherPrepEnrollmentStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeacherPrepEnrollmentStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeacherPrepEnrollStatus_Organization");
//            });

//            modelBuilder.Entity<RefTeachingAssignmentRole>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeachingAssignmentRoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeachingAssignmentRoles)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeachingAssignmentRole_Organization");
//            });

//            modelBuilder.Entity<RefTeachingCredentialBasis>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeachingCredentialBasisId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeachingCredentialBases)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeachingCredentialBasis_Organization");
//            });

//            modelBuilder.Entity<RefTeachingCredentialType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTeachingCredentialTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTeachingCredentialTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTeachingCredentialType_Organization");
//            });

//            modelBuilder.Entity<RefTechnicalAssistanceDeliveryType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceDeliveryTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTechnicalAssistanceDeliveryTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTechnicalAssistanceDeliveryType_Organization");
//            });

//            modelBuilder.Entity<RefTechnicalAssistanceType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTechnicalAssistanceTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTechnicalAssistanceType_Organization");
//            });

//            modelBuilder.Entity<RefTechnologyLiteracyStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnologyLiteracyStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTechnologyLiteracyStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTechnologyLiteracyStatus_Organization");
//            });

//            modelBuilder.Entity<RefTelephoneNumberListedStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTelephoneNumberListedStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTelephoneNumberListedStatus_Organization");
//            });

//            modelBuilder.Entity<RefTelephoneNumberType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTelephoneNumberTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTelephoneNumberTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTelephoneNumberType_Organization");
//            });

//            modelBuilder.Entity<RefTenureSystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTenureSystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTenureSystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTenureSystem_Organization");
//            });

//            modelBuilder.Entity<RefTextComplexitySystem>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTextComplexitySystemId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTextComplexitySystems)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTextComplexitySystem_Organization");
//            });

//            modelBuilder.Entity<RefTimeForCompletionUnit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTimeForCompletionUnitsId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTimeForCompletionUnits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTimeForCompletionUnits_Organization");
//            });

//            modelBuilder.Entity<RefTitleIiiaccountability>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiiaccountabilityId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIiiaccountabilities)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIIIAccountability_Organization");
//            });

//            modelBuilder.Entity<RefTitleIiilanguageInstructionProgramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiilanguageInstructionProgramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIiilanguageInstructionProgramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefLanguageInstruction_Organization");
//            });

//            modelBuilder.Entity<RefTitleIiiprofessionalDevelopmentType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIiiprofessionalDevelopmentTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIiiprofessionalDevelopmentTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIIIProfessionalDevType_Organization");
//            });

//            modelBuilder.Entity<RefTitleIindicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIindicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIindicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIIndicator_Organization");
//            });

//            modelBuilder.Entity<RefTitleIinstructionalService>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIinstructionalServicesId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIinstructionalServices)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIInstructionalServices_Organization");
//            });

//            modelBuilder.Entity<RefTitleIprogramStaffCategory>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIprogramStaffCategoryId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIprogramStaffCategories)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIProgramStaffCategory_Organization");
//            });

//            modelBuilder.Entity<RefTitleIprogramType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTitleIprogramTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIprogramTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitleIProgramType_Organization");
//            });

//            modelBuilder.Entity<RefTitleIschoolStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTitleIschoolStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTitle1SchoolStatus_Organization");
//            });

//            modelBuilder.Entity<RefTransferOutIndicator>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTransferOutIndicatorId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTransferOutIndicators)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTransferOutIndicator_Organization");
//            });

//            modelBuilder.Entity<RefTransferReady>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTransferReadyId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTransferReadies)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTransferReady_Organization");
//            });

//            modelBuilder.Entity<RefTribalAffiliation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTribalAffiliationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTribalAffiliations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTribalAffiliation_Organization");
//            });

//            modelBuilder.Entity<RefTrimesterWhenPrenatalCareBegan>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTrimesterWhenPrenatalCareBeganId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTrimesterWhenPrenatalCareBegans)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTrimesterWhenPrenatalCareBegan_Organization");
//            });

//            modelBuilder.Entity<RefTuitionResidencyType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTuitionResidencyTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTuitionResidencyTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTuitionResidencyType_Organization");
//            });

//            modelBuilder.Entity<RefTuitionUnit>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTuitionUnitId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefTuitionUnits)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefTuitionUnit_Organization");
//            });

//            modelBuilder.Entity<RefUscitizenshipStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefUscitizenshipStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefUscitizenshipStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefUSCitizenshipStatus_Organization");
//            });

//            modelBuilder.Entity<RefVirtualSchoolStatus>(entity =>
//            {
//                entity.Property(e => e.RefVirtualSchoolStatusId).HasComment("The surrogate key for the options in this option set.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefVirtualSchoolStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefVirtualSchoolStatus_Organization");
//            });

//            modelBuilder.Entity<RefVisaType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefVisaTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefVisaTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefVisaType_Organization");
//            });

//            modelBuilder.Entity<RefVisionScreeningStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefVisionScreeningStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefVisionScreeningStatuses)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefVision_Org");
//            });

//            modelBuilder.Entity<RefWageCollectionMethod>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWageCollectionMethodId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWageCollectionMethods)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWageCollectionMethod_Organization");
//            });

//            modelBuilder.Entity<RefWageVerification>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWageVerificationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWageVerifications)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWageVerification_Organization");
//            });

//            modelBuilder.Entity<RefWeaponType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWeaponTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWeaponTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWeaponType_Organization");
//            });

//            modelBuilder.Entity<RefWfProgramParticipation>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWfProgramParticipationId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWfProgramParticipations)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWFProgramParticipation_Organization");
//            });

//            modelBuilder.Entity<RefWioabarrierstoEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Definition).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.SortOrder).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWioabarrierstoEmployments)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWIOABarrierstoEmployment_Organization");
//            });

//            modelBuilder.Entity<RefWorkbasedLearningOpportunityType>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefWorkbasedLearningOpportunityTypeId).HasComment("Surrogate Key");

//                entity.Property(e => e.Code).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.RefWorkbasedLearningOpportunityTypes)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_RefWorkbasedLearningOpportunityType_Organization");
//            });

//            modelBuilder.Entity<RequiredImmunization>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RequiredImmunizationId).HasComment("Surrogate key.");

//                entity.Property(e => e.OrganizationId).HasComment("Foreign key - Organization");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefImmunizationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RequiredImmunizations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RequiredImmunization_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.RequiredImmunizations)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RequiredImmunization_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RequiredImmunizations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RequiredImmunization_RecordStatus");

//                entity.HasOne(d => d.RefImmunizationType)
//                    .WithMany(p => p.RequiredImmunizations)
//                    .HasForeignKey(d => d.RefImmunizationTypeId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RequiredImmunization_RefImmunization");
//            });

//            modelBuilder.Entity<Role>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.Name).HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefJurisdictionId).HasComment("Surrogate key from Organization identifying the publisher of the reference value.");

//                entity.Property(e => e.RefRoleId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Roles)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Role_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Roles)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Role_RecordStatus");

//                entity.HasOne(d => d.RefJurisdiction)
//                    .WithMany(p => p.Roles)
//                    .HasForeignKey(d => d.RefJurisdictionId)
//                    .HasConstraintName("FK_Role_Organization");

//                entity.HasOne(d => d.RefRole)
//                    .WithMany(p => p.Roles)
//                    .HasForeignKey(d => d.RefRoleId)
//                    .HasConstraintName("FK_Role_RefRole");
//            });

//            modelBuilder.Entity<RoleAttendance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RoleAttendanceId).HasComment("Surrogate Key");

//                entity.Property(e => e.AttendanceRate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDaysAbsent).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDaysInAttendance).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfDaysTardy).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RoleAttendances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RoleAttendance_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.RoleAttendances)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RoleAttendance_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RoleAttendances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RoleAttendance_RecordStatus");
//            });

//            modelBuilder.Entity<RoleAttendanceEvent>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RoleAttendanceEventId).HasComment("Surrogate Key");

//                entity.Property(e => e.Date).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.EndTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAbsentAttendanceCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAttendanceEventTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAttendanceStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefLeaveEventTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefPresentAttendanceCategoryId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StartTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RoleAttendanceEvent_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RecordStatus");

//                entity.HasOne(d => d.RefAbsentAttendanceCategory)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RefAbsentAttendanceCategoryId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RefAbsentAttendanceCategory");

//                entity.HasOne(d => d.RefAttendanceEventType)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RefAttendanceEventTypeId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RefAttendanceEventType");

//                entity.HasOne(d => d.RefAttendanceStatus)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RefAttendanceStatusId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RefAttendanceStatus");

//                entity.HasOne(d => d.RefLeaveEventType)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RefLeaveEventTypeId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RefLeaveEventType");

//                entity.HasOne(d => d.RefPresentAttendanceCategory)
//                    .WithMany(p => p.RoleAttendanceEvents)
//                    .HasForeignKey(d => d.RefPresentAttendanceCategoryId)
//                    .HasConstraintName("FK_RoleAttendanceEvent_RefPresentAttendanceCategory");
//            });

//            modelBuilder.Entity<RoleStatus>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RoleStatusId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefRoleStatusId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusEndDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StatusStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RoleStatuses)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RoleStatus_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.RoleStatuses)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RoleStatus_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RoleStatuses)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RoleStatus_RecordStatus");

//                entity.HasOne(d => d.RefRoleStatus)
//                    .WithMany(p => p.RoleStatuses)
//                    .HasForeignKey(d => d.RefRoleStatusId)
//                    .HasConstraintName("FK_RoleStatus_RefRefRoleStatus");
//            });

//            modelBuilder.Entity<Rubric>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RubricId).HasComment("Surrogate Key");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Identifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.UrlReference).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.Rubrics)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_Rubric_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.Rubrics)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_Rubric_RecordStatus");
//            });

//            modelBuilder.Entity<RubricCriterion>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RubricCriterionId).HasComment("Surrogate key.");

//                entity.Property(e => e.Category).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Position).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Title).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Weight).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RubricCriteria)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RubricCriterion_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RubricCriteria)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RubricCriterion_RecordStatus");

//                entity.HasOne(d => d.Rubric)
//                    .WithMany(p => p.RubricCriteria)
//                    .HasForeignKey(d => d.RubricId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RubricCriterion_Rubric");
//            });

//            modelBuilder.Entity<RubricCriterionLevel>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RubricCriterionLevelId).HasComment("Surrogate key.");

//                entity.Property(e => e.Description).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Feedback).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Position).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Quality).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Score).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.RubricCriterionLevels)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_RubricCriterionLevel_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.RubricCriterionLevels)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_RubricCriterionLevel_RecordStatus");

//                entity.HasOne(d => d.RubricCriterion)
//                    .WithMany(p => p.RubricCriterionLevels)
//                    .HasForeignKey(d => d.RubricCriterionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_RubricCriterionLevel_RubricCriterion");
//            });

//            modelBuilder.Entity<ServiceFrequency>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServiceFrequencies)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServiceFrequency_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServiceFrequencies)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServiceFrequency_RecordStatus");

//                entity.HasOne(d => d.RefFrequencyUnit)
//                    .WithMany(p => p.ServiceFrequencies)
//                    .HasForeignKey(d => d.RefFrequencyUnitId)
//                    .HasConstraintName("FK_ServiceFrequency_RefFrequencyUnit");

//                entity.HasOne(d => d.ServicePlan)
//                    .WithMany(p => p.ServiceFrequencies)
//                    .HasForeignKey(d => d.ServicePlanId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceFrequency_ServicePlan");
//            });

//            modelBuilder.Entity<ServicePlan>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServicePlans)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServicePlan_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ServicePlans)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServicePlan_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServicePlans)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServicePlan_RecordStatus");
//            });

//            modelBuilder.Entity<ServiceProvided>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServiceProvideds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServiceProvided_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServiceProvideds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServiceProvided_RecordStatus");

//                entity.HasOne(d => d.RefServices)
//                    .WithMany(p => p.ServiceProvideds)
//                    .HasForeignKey(d => d.RefServicesId)
//                    .HasConstraintName("FK_ServiceProvided_RefServices");

//                entity.HasOne(d => d.RefStudentSupportServiceType)
//                    .WithMany(p => p.ServiceProvideds)
//                    .HasForeignKey(d => d.RefStudentSupportServiceTypeId)
//                    .HasConstraintName("FK_ServiceProvided_RefStudentSupportServiceType");

//                entity.HasOne(d => d.ServicesReceived)
//                    .WithMany(p => p.ServiceProvideds)
//                    .HasForeignKey(d => d.ServicesReceivedId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceProvided_ServicesReceived");
//            });

//            modelBuilder.Entity<ServiceProvider>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServiceProviders)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServiceProvider_DataCollection");

//                entity.HasOne(d => d.Organization)
//                    .WithMany(p => p.ServiceProviders)
//                    .HasForeignKey(d => d.OrganizationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceProvider_Organization");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServiceProviders)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServiceProvider_RecordStatus");

//                entity.HasOne(d => d.ServiceProvided)
//                    .WithMany(p => p.ServiceProviders)
//                    .HasForeignKey(d => d.ServiceProvidedId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceProvider_ServiceProvided");

//                entity.HasOne(d => d.ServiceStaff)
//                    .WithMany(p => p.ServiceProviders)
//                    .HasForeignKey(d => d.ServiceStaffId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceProvider_ServiceStaff");
//            });

//            modelBuilder.Entity<ServiceStaff>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServiceStaffs)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServiceStaff_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ServiceStaffs)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceStaff_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServiceStaffs)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServiceStaff_RecordStatus");

//                entity.HasOne(d => d.RefSpecialEducationStaffCategory)
//                    .WithMany(p => p.ServiceStaffs)
//                    .HasForeignKey(d => d.RefSpecialEducationStaffCategoryId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServiceStaff_RefSpecialEducationStaffCategory");
//            });

//            modelBuilder.Entity<ServicesReceived>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.ServicesReceivedId).HasComment("Surrogate Key");

//                entity.Property(e => e.FullTimeEquivalency).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.ServicesReceiveds)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_ServicesReceived_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.ServicesReceiveds)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServicesReceived_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.ServicesReceiveds)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_ServicesReceived_RecordStatus");

//                entity.HasOne(d => d.ServicePlan)
//                    .WithMany(p => p.ServicesReceiveds)
//                    .HasForeignKey(d => d.ServicePlanId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_ServicesReceived_ServicePlan");
//            });

//            modelBuilder.Entity<StaffCompensation>(entity =>
//            {
//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStaffCompensationSourceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationAnnualSupplement).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationBaseSalary).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationHealthBenefits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationLongevity).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationOtherBenefits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationRetirementBenefits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationTotalBenefits).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StaffCompensationTotalSalary).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffCompensations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffCompensation_DataCollection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffCompensations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffCompensation_RecordStatus");

//                entity.HasOne(d => d.RefStaffCompensationSourceType)
//                    .WithMany(p => p.StaffCompensations)
//                    .HasForeignKey(d => d.RefStaffCompensationSourceTypeId)
//                    .HasConstraintName("FK_StaffCompensation_RefStaffCompensationSourceType");

//                entity.HasOne(d => d.StaffEmployment)
//                    .WithMany(p => p.StaffCompensations)
//                    .HasForeignKey(d => d.StaffEmploymentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffCompensation_StaffEmployment");
//            });

//            modelBuilder.Entity<StaffCredential>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefAeCertificationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffCredential_DataCollection");

//                entity.HasOne(d => d.PersonCredential)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.PersonCredentialId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffCredential_PersonCredential");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffCredential_RecordStatus");

//                entity.HasOne(d => d.RefAeCertificationType)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefAeCertificationTypeId)
//                    .HasConstraintName("FK_StaffCredential_RefAeCertificationType");

//                entity.HasOne(d => d.RefChildDevAssociateType)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefChildDevAssociateTypeId)
//                    .HasConstraintName("FK_StaffCredential_RefChildDevelopmentAssociateType");

//                entity.HasOne(d => d.RefParaprofessionalQualification)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefParaprofessionalQualificationId)
//                    .HasConstraintName("FK_StaffCredential_RefParaprofessionalQualification");

//                entity.HasOne(d => d.RefProgramSponsorType)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefProgramSponsorTypeId)
//                    .HasConstraintName("FK_StaffCredential_RefProgramSponsorType");

//                entity.HasOne(d => d.RefTeachingCredentialBasis)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefTeachingCredentialBasisId)
//                    .HasConstraintName("FK_StaffCredential_RefTeachingCredentialBasis");

//                entity.HasOne(d => d.RefTeachingCredentialType)
//                    .WithMany(p => p.StaffCredentials)
//                    .HasForeignKey(d => d.RefTeachingCredentialTypeId)
//                    .HasConstraintName("FK_StaffCredential_RefTeachingCredentialType");
//            });

//            modelBuilder.Entity<StaffEmployment>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.StaffEmploymentId).HasComment("Surrogate key.");

//                entity.Property(e => e.FullTimeEquivalency).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.HireDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Foreign key - OrganizationPersonRole.");

//                entity.Property(e => e.PositionTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentSeparationReasonId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmploymentSeparationTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.StandardOccupationalClassification)
//                    .IsFixedLength()
//                    .HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.UnionMembershipName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.WeeksEmployedPerYear).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffEmployments)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffEmployment_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffEmployments)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffEmployment_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffEmployments)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffEmployment_RecordStatus");

//                entity.HasOne(d => d.RefEmploymentSeparationReason)
//                    .WithMany(p => p.StaffEmployments)
//                    .HasForeignKey(d => d.RefEmploymentSeparationReasonId)
//                    .HasConstraintName("FK_StaffEmployment_RefEmploymentSeparationReason");

//                entity.HasOne(d => d.RefEmploymentSeparationType)
//                    .WithMany(p => p.StaffEmployments)
//                    .HasForeignKey(d => d.RefEmploymentSeparationTypeId)
//                    .HasConstraintName("FK_StaffEmployment_RefEmploymentSeparationType");
//            });

//            modelBuilder.Entity<StaffEvaluation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.StaffEvaluationId).HasComment("Surrogate Key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from OrganizationPersonRole");

//                entity.Property(e => e.Outcome).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefStaffPerformanceLevelId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Scale).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreOrRating).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.System).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffEvaluations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffEvaluation_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffEvaluations)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffEvaluation_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffEvaluations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffEvaluation_RecordStatus");

//                entity.HasOne(d => d.RefStaffPerformanceLevel)
//                    .WithMany(p => p.StaffEvaluations)
//                    .HasForeignKey(d => d.RefStaffPerformanceLevelId)
//                    .HasConstraintName("FK_StaffEvaluation_RefStaffPerformanceLevel");
//            });

//            modelBuilder.Entity<StaffEvaluationPart>(entity =>
//            {
//                entity.Property(e => e.PartName).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.Scale).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScoreOrRating).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffEvaluationParts)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffEvaluationPart_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffEvaluationParts)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffEvaluationPart_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffEvaluationParts)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffEvaluationPart_RecordStatus");

//                entity.HasOne(d => d.StaffEvaluation)
//                    .WithMany(p => p.StaffEvaluationParts)
//                    .HasForeignKey(d => d.StaffEvaluationId)
//                    .HasConstraintName("FK_StaffEvaluationPart_StaffEvaluation");
//            });

//            modelBuilder.Entity<StaffExperience>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.YearsOfPriorAeteachingExperience).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.YearsOfPriorTeachingExperience).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffExperiences)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffExperience_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffExperiences)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffExperience_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffExperiences)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffExperience_RecordStatus");
//            });

//            modelBuilder.Entity<StaffProfessionalDevelopmentActivity>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.StaffProfessionalDevelopmentActivityId).HasComment("Surrogate Key");

//                entity.Property(e => e.ActivityCompletionDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActivityIdentifier).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActivityStartDate).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ActivityTitle).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.NumberOfCreditsEarned).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ProfessionalDevelopmentRequirementId).HasComment("Foreign key - ProfessionaDevelopment.");

//                entity.Property(e => e.ProfessionalDevelopmentSessionId).HasComment("Foreign key - Professional Development Session");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefCourseCreditUnitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefProfessionalDevelopmentFinancialSupportId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.ScholarshipStatus).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffProfessionalDevelopmentActivity_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffPDActivity_OrgPersonRole");

//                entity.HasOne(d => d.ProfessionalDevelopmentActivity)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentActivityId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffPDActivity_PDActivity");

//                entity.HasOne(d => d.ProfessionalDevelopmentRequirement)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentRequirementId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_PDActivity_PDRequirement");

//                entity.HasOne(d => d.ProfessionalDevelopmentSession)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.ProfessionalDevelopmentSessionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffPDActivity_PDSession");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffProfessionalDevelopmentActivity_RecordStatus");

//                entity.HasOne(d => d.RefCourseCreditUnit)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefCourseCreditUnitId)
//                    .HasConstraintName("FK_PDActivity_RefCourseCreditUnit");

//                entity.HasOne(d => d.RefProfessionalDevelopmentFinancialSupport)
//                    .WithMany(p => p.StaffProfessionalDevelopmentActivities)
//                    .HasForeignKey(d => d.RefProfessionalDevelopmentFinancialSupportId)
//                    .HasConstraintName("FK_PDActivity_RefProfDevFinancialSupport");
//            });

//            modelBuilder.Entity<StaffTechnicalAssistance>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.StaffTechnicalAssistanceId).HasComment("Surrogate key");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate key from Organization Person Role");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceDeliveryTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefTechnicalAssistanceTypeId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TechnicalAssistanceApprovedInd).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.StaffTechnicalAssistances)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_StaffTechnicalAssistance_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.StaffTechnicalAssistances)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_StaffTechnicalAssistance_OrgPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.StaffTechnicalAssistances)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_StaffTechnicalAssistance_RecordStatus");

//                entity.HasOne(d => d.RefTechnicalAssistanceDeliveryType)
//                    .WithMany(p => p.StaffTechnicalAssistances)
//                    .HasForeignKey(d => d.RefTechnicalAssistanceDeliveryTypeId)
//                    .HasConstraintName("FK_StaffTechnicalAssistance_RefTechnicalAssistanceDeliveryType");

//                entity.HasOne(d => d.RefTechnicalAssistanceType)
//                    .WithMany(p => p.StaffTechnicalAssistances)
//                    .HasForeignKey(d => d.RefTechnicalAssistanceTypeId)
//                    .HasConstraintName("FK_StaffTechnicalAssistance_RefTechnicalAssistanceType");
//            });

//            modelBuilder.Entity<TeacherEducationCredentialExam>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_TeacherEducationCredentialExam_DataCollection");

//                entity.HasOne(d => d.ProgramParticipationTeacherPrep)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.ProgramParticipationTeacherPrepId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_TeacherEducationCredentialExam_PrgmParticipationTeacherPrep");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_TeacherEducationCredentialExam_RecordStatus");

//                entity.HasOne(d => d.RefTeacherEducationCredentialExam)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.RefTeacherEducationCredentialExamId)
//                    .HasConstraintName("FK_TeacherEduCredentialExam_RefTeacherEduCredentialExam");

//                entity.HasOne(d => d.RefTeacherEducationExamScoreType)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.RefTeacherEducationExamScoreTypeId)
//                    .HasConstraintName("FK_TeacherEduCredentialExam_RefTeacherEduExamScoreType");

//                entity.HasOne(d => d.RefTeacherEducationTestCompany)
//                    .WithMany(p => p.TeacherEducationCredentialExams)
//                    .HasForeignKey(d => d.RefTeacherEducationTestCompanyId)
//                    .HasConstraintName("FK_TeacherEducationCredentialExam_RefTeacherEducationTestCompny");
//            });

//            modelBuilder.Entity<TeacherStudentDataLinkExclusion>(entity =>
//            {
//                entity.HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.TeacherStudentDataLinkExclusionId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.TeacherStudentDataLinkExclusions)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_TeacherStudentDataLinkExclusion_DataCollection");

//                entity.HasOne(d => d.K12staffAssignment)
//                    .WithMany(p => p.TeacherStudentDataLinkExclusions)
//                    .HasForeignKey(d => d.K12staffAssignmentId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_TeacherStudentDataLinkExclusion_K12StaffAssignment");

//                entity.HasOne(d => d.K12studentCourseSection)
//                    .WithMany(p => p.TeacherStudentDataLinkExclusions)
//                    .HasForeignKey(d => d.K12studentCourseSectionId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_TeacherStudentDataLinkExclusion_K12StudentCourseSection");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.TeacherStudentDataLinkExclusions)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_TeacherStudentDataLinkExclusion_RecordStatus");
//            });

//            modelBuilder.Entity<VCedselementDetail>(entity =>
//            {
//                entity.ToView("vCEDSElementDetails");
//            });

//            modelBuilder.Entity<VCedsmapping>(entity =>
//            {
//                entity.ToView("vCEDSMapping");
//            });

//            modelBuilder.Entity<WorkforceEmploymentQuarterlyDatum>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.EmployedInMultipleJobsCount).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.MilitaryEnlistmentAfterExit).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.OrganizationPersonRoleId).HasComment("Surrogate Key");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedAfterExitId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RefEmployedWhileEnrolledId).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.WorkforceEmploymentQuarterlyData)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_WorkforceEmploymentQuarterlyData_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.WorkforceEmploymentQuarterlyData)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_WorkforceEmploymentQuarterlyData_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.WorkforceEmploymentQuarterlyData)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_WorkforceEmploymentQuarterlyData_RecordStatus");
//            });

//            modelBuilder.Entity<WorkforceProgramParticipantCohort>(entity =>
//            {
//                entity.Property(e => e.CohortMedianEarnings).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.WorkforceProgramParticipantCohorts)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_WorkforceProgramParticipantCohort_DataCollection");

//                entity.HasOne(d => d.OrganizationPersonRole)
//                    .WithMany(p => p.WorkforceProgramParticipantCohorts)
//                    .HasForeignKey(d => d.OrganizationPersonRoleId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_WorkforceProgramParticipantCohort_OrganizationPersonRole");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.WorkforceProgramParticipantCohorts)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_WorkforceProgramParticipantCohort_RecordStatus");
//            });

//            modelBuilder.Entity<WorkforceProgramParticipation>(entity =>
//            {
//                entity.HasComment("See the CEDS_Def_Desc extended property.");

//                entity.Property(e => e.DiplomaOrCredentialAwardDate).IsFixedLength();

//                entity.Property(e => e.RecordEndDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.Property(e => e.RecordStartDateTime).HasComment("See the CEDS_GlobalId, CEDS_Element, CEDS_URL, and CEDS_Def_Desc extended properties.");

//                entity.HasOne(d => d.DataCollection)
//                    .WithMany(p => p.WorkforceProgramParticipations)
//                    .HasForeignKey(d => d.DataCollectionId)
//                    .HasConstraintName("FK_WorkforceProgramParticipation_DataCollection");

//                entity.HasOne(d => d.PersonProgramParticipation)
//                    .WithMany(p => p.WorkforceProgramParticipations)
//                    .HasForeignKey(d => d.PersonProgramParticipationId)
//                    .OnDelete(DeleteBehavior.ClientSetNull)
//                    .HasConstraintName("FK_WorkforceProgramParticipation_PersonProgramParticipation");

//                entity.HasOne(d => d.RecordStatus)
//                    .WithMany(p => p.WorkforceProgramParticipations)
//                    .HasForeignKey(d => d.RecordStatusId)
//                    .HasConstraintName("FK_WorkforceProgramParticipation_RecordStatus");

//                entity.HasOne(d => d.RefProfessionalTechnicalCredentialType)
//                    .WithMany(p => p.WorkforceProgramParticipations)
//                    .HasForeignKey(d => d.RefProfessionalTechnicalCredentialTypeId)
//                    .HasConstraintName("FK_WorkforceProgramPartic_RefProfessionalTechnicalCredential");

//                entity.HasOne(d => d.RefWfProgramParticipation)
//                    .WithMany(p => p.WorkforceProgramParticipations)
//                    .HasForeignKey(d => d.RefWfProgramParticipationId)
//                    .HasConstraintName("FK_WorkforceProgramPartic_RefWfProgramParticipation");
//            });

//            OnModelCreatingPartial(modelBuilder);
//        }

//        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
//    }
//}
